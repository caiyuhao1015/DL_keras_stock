

//  jsbuilder/wf/observer.js

$.fn.extend({
    observerComponents: function() {
        var  components =  new Map();
        components.set("wf-acc",'wf.acc()');
        components.set("wf-comment","$(document).comment()");
        components.set("wf-favorite","$(document).favorite()");
        components.set("wf-postcard","wf.user.postcard()");
        components.set("wf-acs-package","$(document).acsPackage()");

        var observer = new MutationObserver(function(mutations) {
            mutations.forEach(function(mutation) {

                if (mutation.type != 'childList') {
                    return
                }

                var element = mutation.addedNodes.item(0);
                if (element&&element.localName&&components.get(element.localName)){
                    eval(components.get(element.localName));
                }

            });
        });

        observer.observe(window.document, {
            subtree:true,
            childList: true
        });
    }


})


//  jsbuilder/wf/wf.js

var wf = {
    appsServer: function () {
        return wf.development? 'https://apps.test.wanfangdata.com.cn': 'https://apps.wanfangdata.com.cn'
    },
    wfApiServer: function() {
        return wf.development ? 'https://api.wanfangdata.com.cn' : 'https://api.wanfangdata.com.cn'
    },
    apiServer: function() {
        return wf.development ? 'https://api-d.wf.pub' : 'https://api.wf.pub'
    },
    snsServer: function() {
        return wf.development ? 'https://sns-d.wf.pub' : 'https://sns.wf.pub'
    },
    wfPubServer: function() {
        return wf.development ? 'https://d.wf.pub' : 'https://wf.pub'
    },
    oauthServer: function() {
        return wf.development ? 'https://d.wf.pub' : 'https://wf.pub'
    },
    comServer: function() {
        return wf.development ? 'https://com-d.wf.pub' : 'https://com.wf.pub'
    },
    snsOssServer: function() {
        return wf.development ? 'https://snsimg-d.wf.pub' : 'https://snsimg.wf.pub'
    },
    accServer: function() {
        return wf.development ? 'https://trade.test.wanfangdata.com.cn' : 'https://trade.wanfangdata.com.cn'
    },
    weiboAppKey: function() {
        return wf.development ? '2298735495' : '3533591353'
    },
    appFalg: function() {
        return wf.development ? 'azqa5j2a38k0' : 'dmku1fwsz7wj'
    },
    masterStationFlag:function(){
        // key值
        return wf.development ? '40bcibskdvt7' : 'g3uhs3vsx0zi'
    },
    // insideOrOutsideStatus:null,//站内站内标识设置
    getInsideOrOutsideStatus: function() {
        var host = window.location.host //如果有iframe 取的就是iframe自己的

        //截取字符串
        var wfPubLen = host.search('wf.pub')
        if (wfPubLen == -1) {
            // 站外 或者 站内域名不是wf.pub
            return true
        } else {
            return false
        }
    },
    cookie: {
        get: function(name) {
            var cookieName = encodeURIComponent(name) + '=',
                cookieStart = document.cookie.indexOf(cookieName),
                cookieValue = null
            if (cookieStart > -1) {
                var cookieEnd
                if (cookieStart !== 0) {
                    //不是首项

                    if (document.cookie.indexOf('; ' + cookieName) > -1) {
                        cookieStart = document.cookie.indexOf('; ' + cookieName) + 2
                        cookieEnd = document.cookie.indexOf(';', cookieStart)
                    } else {
                        return cookieValue
                    }
                } else {
                    // 是首项
                    cookieEnd = document.cookie.indexOf(';', cookieStart)
                }
                if (cookieEnd == -1) {
                    cookieEnd = document.cookie.length
                }
                cookieValue = decodeURIComponent(document.cookie.substring(cookieStart + cookieName.length, cookieEnd))
            }

            return cookieValue
        },
        set: function(name, value, expires, path, domain, secure) {
            var cookieText = encodeURIComponent(name) + '=' + encodeURIComponent(value)
            if (expires instanceof Date) {
                cookieText += ';expires=' + expires.toUTCString()
            }
            if (path) {
                cookieText += ';path=' + path
            }
            if (domain) {
                cookieText += ';domain=' + domain
            }
            if (secure) {
                cookieText += ';secure'
            }
            document.cookie = cookieText
        },
        clear: function(name, path, domain, secure) {
            this.set(name, '', new Date(0), path, domain, secure)
        },
        clearAll: function() {
            var keys = document.cookie.match(/[^ =;]+(?==)/g)
            if (keys) {
                for (var i = keys.length; i--;) document.cookie = keys[i] + '=0;expires=' + new Date(0).toUTCString()
            }
        }
    },
    http: {
        post: function(req, data, success, err) {
            if (typeof req === 'string') {
                post_by_string_param(req, data, success, err)
            } else if (typeof req === 'object') {
                post_by_object_param(req, data, success)
            }

            function post_by_string_param(req, data, success, err) {
                var reqData = {
                    type: 'POST',
                    crossDomain: true,
                    url: req,
                    data: JSON.stringify(data),
                    contentType: 'application/json;charset=utf-8',
                    dataType: 'json',
                    //tradional: true,
                    // xhrFields: {
                    //     withCredentials: true //携带cookie
                    // },

                    error: function(resObj, textStatus, errorThrown) {
                        if (err) {
                            try {
                                error = JSON.parse(resObj.responseText)
                                err(error)
                            } catch (ex) {
                                // console.log(resObj)
                                err({
                                    err_code: resObj.status,
                                    err_message: resObj.statusText
                                })
                            }
                        } else if (success) {
                            return success(data, JSON.parse(resObj.responseText))
                        }
                    },
                    success: function(data, textStatus, resObj) {
                        if (success && err) {
                            return success(data)
                        } else if (success) {
                            return success(data, JSON.parse(resObj.responseText))
                        }
                    }
                }
                if (wf.getInsideOrOutsideStatus()) {
                    //站外
                    var xCaToken = ''
                    var wfpub_token = wf.cookie.get('wfpub_token')

                    var sync_login_wfpub_token = wf.cookie.get('sync_login_wfpub_token')
                    var wfpub_third_app_token = wf.cookie.get('wfpub_third_app_token')

                    if (sync_login_wfpub_token) {
                        // 主站
                        xCaToken = sync_login_wfpub_token

                    } else if (wfpub_third_app_token) {
                        xCaToken = wfpub_third_app_token
                    } else {
                        xCaToken = wfpub_token
                    }

                    // xCaToken = sync_login_wfpub_token ? sync_login_wfpub_token : wfpub_token

                    if (xCaToken) {

                        reqData.headers = {
                            'x-ca-token': xCaToken
                        }

                        if(sync_login_wfpub_token){
                            reqData.headers['X-Ca-AppKey']=wf.masterStationFlag()
                        }
                    }
                } else {
                    //站内
                    reqData.xhrFields = {
                        withCredentials: true //携带cookie
                    }
                }
                $.ajax(reqData)
            }
            //参数为对象，方便参数扩展
            function post_by_object_param(req, success, err) {
                var reqData = {
                    type: 'POST',
                    crossDomain: true,
                    url: req.url,
                    data: JSON.stringify(req.data),
                    headers: req.headers,
                    contentType: 'application/json;charset=utf-8',
                    dataType: 'json',
                    error: function(resObj, textStatus, errorThrown) {
                        if (err) {
                            try {
                                error = JSON.parse(resObj.responseText)
                                return err(error)
                            } catch (ex) {
                                // console.log(resObj)
                                return err({
                                    err_code: resObj.status,
                                    err_message: resObj.statusText
                                })
                            }
                        } else if (success) {
                            return success(data, JSON.parse(resObj.responseText))
                        }
                    },
                    success: function(data, textStatus, resObj) {
                        if (success && err) {
                            return success(data)
                        } else if (success) {
                            return success(data, JSON.parse(resObj.responseText))
                        }
                    }
                }
                if (wf.getInsideOrOutsideStatus()) {
                    //站外
                    var xCaToken = ''
                    var wfpub_token = wf.cookie.get('wfpub_token')
                    var sync_login_wfpub_token = wf.cookie.get('sync_login_wfpub_token')
                    var wfpub_third_app_token = wf.cookie.get('wfpub_third_app_token')

                    if (sync_login_wfpub_token) {
                        xCaToken = sync_login_wfpub_token
                    } else if (wfpub_third_app_token) {
                        xCaToken = wfpub_third_app_token
                    } else {
                        xCaToken = wfpub_token
                    }
                    // xCaToken = sync_login_wfpub_token ? sync_login_wfpub_token : wfpub_token
                    if (xCaToken && (!req.headers || !req.headers['x-ca-token'])) {
                        reqData.headers['x-ca-token'] = xCaToken
                        if(sync_login_wfpub_token){
                            reqData.headers['X-Ca-AppKey']=wf.masterStationFlag()
                        }

                    }

                } else {
                    //站内
                    reqData.xhrFields = {
                        withCredentials: true //携带cookie
                    }
                }
                $.ajax(reqData)
            }
        },
        // post: function (req, data, success, err) {
        //     var reqData = {
        //         type: 'POST',
        //         crossDomain: true,
        //         url: req,
        //         data: JSON.stringify(data),
        //         contentType: 'application/json;charset=utf-8',
        //         dataType: 'json',
        //         //tradional: true,
        //         // xhrFields: {
        //         //     withCredentials: true //携带cookie
        //         // },

        //         error: function(resObj, textStatus, errorThrown) {
        //             if (err) {
        //                 try {
        //                     error = JSON.parse(resObj.responseText)
        //                     err(error)
        //                 } catch (ex) {
        //                     // console.log(resObj)
        //                     err({
        //                         err_code: resObj.status,
        //                         err_message: resObj.statusText
        //                     })
        //                 }
        //             } else if (success) {
        //                 success(data, JSON.parse(resObj.responseText))
        //             }
        //         },
        //         success: function(data, textStatus, resObj) {
        //             if (success && err) {
        //                 success(data)
        //             } else if (success) {
        //                 success(data, JSON.parse(resObj.responseText))
        //             }
        //         }
        //     }
        //     if(wf.getInsideOrOutsideStatus()){

        //         //站外
        //         var wfpub_token = wf.cookie.get('wfpub_token')
        //         if(wfpub_token){
        //             reqData.headers={
        //                 'x-ca-token': wfpub_token
        //             }

        //         }

        //     }else{
        //         //站内
        //         reqData.xhrFields={
        //             withCredentials: true //携带cookie
        //         }
        //     }
        //     $.ajax(reqData)
        // },
        get: function(url, data, success, err) {
            var reqData = {
                type: 'GET',
                crossDomain: true,
                url: url,
                data: data,
                // xhrFields: {
                //     withCredentials: true //携带cookie
                // },
                error: function(resObj, textStatus, errorThrown) {
                    if (err) {
                        try {
                            error = JSON.parse(resObj.responseText)
                            err(error)
                        } catch (ex) {
                            // console.log(resObj)
                            err({
                                err_code: resObj.status,
                                err_message: resObj.statusText
                            })
                        }
                    } else if (success) {
                        return success(JSON.parse(resObj.responseText))
                    }
                },
                success: function(data, textStatus, resObj) {
                    if (success && err) {
                        return success(data)
                    } else if (success) {
                        return success(data, JSON.parse(resObj.responseText))
                    }
                }
            }
            if (wf.getInsideOrOutsideStatus()) {
                //站外
                var xCaToken = ''
                var wfpub_token = wf.cookie.get('wfpub_token')

                var sync_login_wfpub_token = wf.cookie.get('sync_login_wfpub_token')
                var wfpub_third_app_token = wf.cookie.get('wfpub_third_app_token')

                if (sync_login_wfpub_token) {
                    xCaToken = sync_login_wfpub_token
                } else if (wfpub_third_app_token) {
                    xCaToken = wfpub_third_app_token
                } else {
                    xCaToken = wfpub_token
                }
                // xCaToken = sync_login_wfpub_token ? sync_login_wfpub_token : wfpub_token

                if (xCaToken) {
                    reqData.headers = {
                        'x-ca-token': xCaToken
                    }

                    if(sync_login_wfpub_token){
                        reqData.headers['X-Ca-AppKey'] = wf.masterStationFlag()
                    }
                }
            } else {
                //站内
                reqData.xhrFields = {
                    withCredentials: true //携带cookie
                }
            }

            $.ajax(reqData)
        }
    },
    timestamp: {
        toDate: function(timesTampStr) {
            if (typeof timesTampStr === 'string') {
                timesTampStr = Number(timesTampStr)
                if (Number(timesTampStr).isNaN()) {
                    throw new Error('参数必须是number或可转化为number的字符串')
                }
            }
            if (typeof timesTampStr === 'number') {
                var dateTime = new Date(timesTampStr)
                var createYear = dateTime.getFullYear()
                var createMonth = dateTime.getMonth() + 1 >= 10 ? dateTime.getMonth() + 1 : '0' + (dateTime.getMonth() + 1)
                var createDay = dateTime.getDate() >= 10 ? dateTime.getDate() : '0' + dateTime.getDate()
                var createHours = dateTime.getHours() >= 10 ? dateTime.getHours() : '0' + dateTime.getHours()
                var createMinutes = dateTime.getMinutes() >= 10 ? dateTime.getMinutes() : '0' + dateTime.getMinutes()
                var createSeconds = dateTime.getSeconds() >= 10 ? dateTime.getSeconds() : '0' + dateTime.getSeconds()
                var parsedTime = createYear + '-' + createMonth + '-' + createDay + ' ' + createHours + ':' + createMinutes + ':' + createSeconds
                return parsedTime
            } else {
                throw new Error('参数必须是number或可转化为number的字符串')
            }
        }
    },
    loginState: null,
    //isLogin方法：该方法方便“非wf.pub站点引用组件”时查看是否登录，使用单例模式仅发一次请求。调用时可以考虑能否优化不调用这个方法，因为后端服务一般能获取到是否登录。
    //【注意】：登录状态仅取决于第一次调用时用户的状态，故涉及到轮询的功能使用该方法会有问题，因为仅获取一次登录状态，后续调用获取到的是缓存
    isLogin: function() {
        var reqData = {
            type: 'POST',
            crossDomain: true,
            url: wf.apiServer() + '/sns/user/isLogin',
            data: {},
            headers: {
                'X-Ca-AppKey': wf.appFalg()
            },
            async: false, //同步
            // xhrFields: {
            //     withCredentials: true //携带cookie
            // },
            success: function(data) {
                wf.loginState = data
            }
        }

        if (wf.getInsideOrOutsideStatus()) {
            //站外
            var xCaToken = ''
            var wfpub_token = wf.cookie.get('wfpub_token')
            var sync_login_wfpub_token = wf.cookie.get('sync_login_wfpub_token')
            var wfpub_third_app_token = wf.cookie.get('wfpub_third_app_token')

            if (sync_login_wfpub_token) {
                xCaToken = sync_login_wfpub_token
            } else if (wfpub_third_app_token) {
                xCaToken = wfpub_third_app_token
            } else {
                xCaToken = wfpub_token
            }
            // xCaToken = sync_login_wfpub_token ? sync_login_wfpub_token : wfpub_token
            if (xCaToken) {
                reqData.headers = {
                    'x-ca-token': xCaToken
                }
                if(sync_login_wfpub_token){
                    // 主站带主站的key
                    reqData.headers['X-Ca-AppKey']=wf.masterStationFlag()
                }

            }
        } else {
            //站内
            reqData.xhrFields = {
                withCredentials: true //携带cookie
            }
        }
        if (!wf.loginState) {
            $.ajax(reqData)
        }
        return wf.loginState
    },
    userRecommendState: null,
    isUserRecommend: function () {
        var reqData = {
            type: 'GET',
            crossDomain: true,
            url: wf.apiServer() + '/sns/is_follow',
            data: {},
            async: false, //同步
            // xhrFields: {
            //     withCredentials: true //携带cookie
            // },
            success: function (data) {
                wf.userRecommendState = data.isFollow
            }
        }

        if (wf.getInsideOrOutsideStatus()) {
            //站外
            var xCaToken = ''
            var wfpub_token = wf.cookie.get('wfpub_token')
            var sync_login_wfpub_token = wf.cookie.get('sync_login_wfpub_token')
            // xCaToken = sync_login_wfpub_token ? sync_login_wfpub_token : wfpub_token
            var wfpub_third_app_token = wf.cookie.get('wfpub_third_app_token')

            if (sync_login_wfpub_token) {
                xCaToken = sync_login_wfpub_token
            } else if (wfpub_third_app_token) {
                xCaToken = wfpub_third_app_token
            } else {
                xCaToken = wfpub_token
            }

            if (xCaToken) {
                reqData.headers = {
                    'x-ca-token': xCaToken
                }
            }
        } else {
            //站内
            reqData.xhrFields = {
                withCredentials: true //携带cookie
            }
        }
        if (!wf.userRecommendState) {
            $.ajax(reqData)
        }
        return wf.userRecommendState
    },
    // 社区消息通知
    workOrderNotice: function(data) {
        var _this = this
        if (data.notice)
            $.each(data.notice, function(i, item) {
                _this.http.post(
                    _this.apiServer() + '/sns/app_send_chat', { targetUid: item.uid, content: item.content },
                    function(resData, response) {
                        //- console.log(resData);
                    },
                    function(error) {
                        console.error(error)
                    }
                )
            })
    },

    isIosFun: function() {
        var regexIos =/(WFPUB-APP-iOS-)/i
        var isIos = (regexIos).test(navigator.userAgent)
        return isIos
    },
    isAndroidFun: function() {
        var regexAndroid = /(WFPUB-APP-Android-)/i
        var isAndroid = (regexAndroid).test(navigator.userAgent)
        return isAndroid
    },
    isMobileBrowserFun: function() {
        var regexMobileBrowser = /Mobile/i
        var isMobileBrowser = (regexMobileBrowser).test(navigator.userAgent)
        return isMobileBrowser

    },
    user: {}, //用户相关内容
    favorite: {}, //收藏夹相关
    acsPackage: {}, //期刊专题资源相关
    comment: {}, //评论
    notify: {}, //消息通知
    emit: {}, //专门用来传递组件与顶层业务逻辑通讯的数据
    academic:{},//学术圈
    sns:{} //社区
}
function mathJax() {
    window.MathJax = {
        startup: {
            ready: function() {
                // console.log('MathJax is loaded, but not yet initialized')
                MathJax.startup.defaultReady()
                // console.log('MathJax is initialized, and the initial typeset is queued')
            }
        },

        tex: {
            inlineMath: [
                ['$', '$'],
                ['\\(', '\\)']
            ],
            displayMath: [
                ['$$', '$$'],
                ['\\[', '\\]']
            ],
            processEscapes: true,
            tags: 'ams',
            macros: {
                href: '{}'
            }
        },
        options: {
            ignoreHtmlClass: 'tex2jax_ignore|dno',
            skipHtmlTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']
        }
    }
}
//调第三方插件
function thirdPlugsFun() {
    //全部插件
    var third_all_plugs = [
        {
            attr: 'thin',
            url: 'https://com.wf.pub/thin.js'
        },
        {
            attr: 'dialog',
            url: wf.comServer() + '/dialog/dialog.js',
            css: wf.comServer() + '/dialog/dialog.css'
        },
        {
            attr: 'Swiper',
            id: 'swiper-carousel',
            css: wf.comServer() + '/swiper/swiper-bundle.min.css',
            url: wf.comServer() + '/swiper/swiper-bundle.min.js'

        },
        {
            attr: 'xss',
            url: 'https://com.wf.pub/xss/xss.min.js'
        }
    ]
    //调用插件
    var transfer_plugs = []
    third_all_plugs.forEach(function(item, i) {
        if (!window[item.attr]) {
            transfer_plugs.push(item)
        }
    })
    //相当于遍历 transfer_plugs数组 ，不用$.each ，forEach 因为遍历是异步的，没走到onload，就开始新的循环了
    // (function plugsLoad(i) {
    function plugsLoad(i) {
        if (i == transfer_plugs.length) {
            return false
        } else if (i == 0) {
            createEleFun(transfer_plugs[i])
            plugsLoad(i + 1)
        } else {
            var createEle = createEleFun(transfer_plugs[i])
            createEle.onload = function() {
                //为了保证幂等特性，thirdPlugsFun这个函数调用多次和调用一次没有区别
                if(transfer_plugs[i].attr){
                    if(!window[transfer_plugs[i].attr]){
                        window[transfer_plugs[i].attr] = true
                    }
                }
                plugsLoad(i + 1)
            }

        }
    }
    plugsLoad(0)
}

function createEleFun(item) {
    var createEle
    if (item.css) {
        createEle = document.createElement('link')
        createEle.setAttribute('rel', 'stylesheet')
        createEle.setAttribute('href', item.css)

        document.head.appendChild(createEle)
    }

    createEle = document.createElement('script')
    createEle.setAttribute('src', item.url)
    if (item.async) {
        createEle.setAttribute('async', item.async)
    }
    document.head.appendChild(createEle)

    return createEle
}
//渲染组件
function renderComponent(){
    // 分享
    $(document).shareInit()
    $(document).share()
    $(document).sns()
    // 第三方评论
    $(document).comment()
    // wf.renderWfComment()
    //收藏
    $(document).favorite()

    //我的收藏展示组件
    $(document).favoriteDetail()

    //悬浮卡片
    wf.user.postcard()
    //本地卡片
    $(document).render_usercard()
    //别人卡片
    $(document).render_other_usercard()
    //元数据搜索
    $(document).oaisubmit()
    //搜索结果页
    wf.search()
    // 推荐组件
    $(document).recommend()
    $(document).adBanner()
    // $(document).appstore();
    // $(document).pagination();
    // acsConformityResourcePackage、acsPackage、acc需要按顺序加载
    // 资源包整合
    $(document).acsConformityResourcePackage()
    //资源包
    $(document).acsPackage()
    // 账务组件
    wf.acc();
    // 学术圈
    $(document).academic()
}
thirdPlugsFun()

$(document).ready( function (){
    renderComponent()
    //监听新增组件标签
    $(document).observerComponents();
});


$(document).ready(function() {
    var documentReferrer
    if (wf.development) {
        documentReferrer = document.referrer.match(/[http|https]:\/\/d.wf.pub/)
    } else {
        documentReferrer = document.referrer.match(/[http|https]:\/\/wf.pub/)
    }

    var message = { message: { title: document.title, url: window.location.href }, messageAim: 'history' }
    if (top !== self) {
        if (documentReferrer || document.referrer !== window.location.href) {
            window.parent.postMessage(message, wf.wfPubServer())
            window.parent.postMessage(message, wf.appsServer())
        } else {
            // console.log('no message')
        }
        (function(history) {
            var pushState = history.pushState
            history.pushState = function(state, title, url) {
                if (typeof history.onpushstate == 'function') {
                    history.onpushstate(state, title, url)
                }
                return pushState.apply(history, arguments)
            }
            history.replaceState = function(state, title, url) {
                if (typeof history.onreplacestate === 'function') {
                    history.onreplacestate(state, title, url)
                }
            }
        })(window.history)
        history.onpushstate = function(state, title, url) {
            if (new RegExp('^' + window.location.protocol + '//' + window.location.hostname).test(url)) {
                message.message.url = url
            } else {
                if (/^#/.test(url)) {
                    url = location.pathname + url
                }
                message.message.url = window.location.protocol + '//' + window.location.hostname + url
            }

            window.parent.postMessage(message, wf.wfPubServer())
            window.parent.postMessage(message, wf.appsServer())
        }
        history.onreplacestate = function(state, title, url) {
            if (new RegExp('^' + window.location.protocol + '//' + window.location.hostname).test(url)) {
                message.message.url = url
            } else {
                if (/^#/.test(url)) {
                    url = location.pathname + url
                }
                message.message.url = window.location.protocol + '//' + window.location.hostname + url
            }
            window.parent.postMessage(message, wf.wfPubServer())
            window.parent.postMessage(message, wf.appsServer())
        }
    }
    // renderComponent()

})
//子页面重写window.open方法，防止页面跳出框架
// window.onmessage = function (data) {
//     if (data.title && data.title === 'parent_domain') {
//         var parent_domain = data.domain
//         if (top !== self) {
//             window.open = (function (nativeOpen) {
//                 return function (url, windowName, windowFeatures) {
//                     if (new RegExp(parent_domain).test(url)) {
//                         return nativeOpen(url, windowName, windowFeatures)
//                     } else {
//                         location.href=url
//                     }
//                 }
//             })(window.open)
//             $(document).find('a').each(function () {
//                 if ($(this).attr('target') !== '_self' && !(new RegExp(parent_domain)).test($(this).attr('href'))) {
//                     $(this).attr('target', '_self')
//                 }
//             })
//         }
//     }
// }
//兼容IE
Number.isInteger =
    Number.isInteger ||
    function(value) {
        return typeof value === 'number' && isFinite(value) && Math.floor(value) === value
    }
    //兼容IE
if (typeof Object.assign != 'function') {
    Object.assign = function(target) {
        'use strict'
        if (target == null) {
            throw new TypeError('Cannot convert undefined or null to object')
        }

        target = Object(target)
        for (var index = 1; index < arguments.length; index++) {
            var source = arguments[index]
            if (source != null) {
                for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key]
                    }
                }
            }
        }
        return target
    }
}


//  jsbuilder/wf/wf.pop.js

wf.pop = function(p) {
    var popmask
   
    $(document.body).render({
        template: {
            'wf-pop': [function(a) { popmask = a.container }, //截获popmask
                {
                    'wf-popwindow': [
                        { 'wf-closeicon': 'x', click: close },
                        {
                            'wf-popbody': [
                                function(a) { a.container.close = close }, //将close函数附着到容器
                                {
                                    if: p.render !== undefined,
                                    then: p.render,
                                    else: p.template
                                }
                            ]
                        }
                    ],
                    style: p.style,
                    id: p.id,
                    class: p.class,
                    a: p.a,
                    width: p.width,
                    height: p.height
                }
            ]
        }
    })

    function close(para) {
        if (p.onclose) { p.onclose(para) }
        $(popmask).remove()
    }
}

//  jsbuilder/wf/wf.replace.js

wf.replace = {
    at: function (content) {
        //匹配@开头，空格或以下特殊字符结尾的字符串（包含@，不包含特殊字符）
        return content.replace(/@[a-zA-Z0-9_\u4e00-\u9fa5-_]+/g, function (word) {
            //word为匹配的内容 例如：@powerwanfang
            //在wf-user标签和跳转客观主页url中设置昵称需要去掉@
            var nickname = word.substring(1)
            return '<a class="replaceAt"  target="_blank" href="' + wf.wfPubServer() + '/u/' + nickname + '"><wf-user data-nickname=' + nickname + '>' + word + '</wf-user></a>'
        })
    },

    topic: function (content) {
        // 判断含不含有a标签的链接
        if(content.match(/<a[^>]+href=['"]([^'"]*)['"]>*/g)){
            // 按照</a>把字符串切分成数组
            var contentArr = content.split('</a>')
            var newContent
            // $.each 不用这个方法 是因为他是异步的
            // 遍历切分的数组contentArr
            for(var i=0;i<contentArr.length;i++){
                // 数组的每一项再按照'<a' 去切分新的数组，得到</a><a中间的内容
                var aBeforeArr =contentArr[i].split('<a')
                // 取新数组中的第一项,去匹配话题
                aBeforeArr[0].replace(/#[^\s|#]((?!#|(@[a-zA-Z0-9_\u4e00-\u9fa5-_])).)*#/g, function (match) {
                    // 替换话题标签
                    aBeforeArr[0]=aBeforeArr[0].replace(match, '<wf-topic>'.concat(match, '</wf-topic>'))

                })
                // 按照<a 链接之前拆分的字符串
                var newABeforeArr = aBeforeArr.join('<a')
                contentArr[i]= newABeforeArr

            }
            // 按照</a> 链接之前拆分的字符串
            newContent = contentArr.join('</a>')
            return newContent
        }else{

            return content.replace(/#[^\s|#]((?!#|(@[a-zA-Z0-9_\u4e00-\u9fa5-_])).)*#/g, function (match) {
                return ('<wf-topic>'.concat(match, '</wf-topic>'))
            })
        }


    },

    url: function (content) {
        return content.replace(/(http|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?/g, function (match) {
            return ('<a  href="'.concat(match, '" target="_blank" >', match, '</a>'))
        })
    },

    makeImageViewable: function (content) {
        var sourceUrlRegx = wf.snsOssServer() + '/.+?_pic'
        var imgDataLocation = new RegExp('<a href="' + sourceUrlRegx + '" target="_blank">' + sourceUrlRegx + '<\\/a>', 'g')
        var imgDatas = content.match(imgDataLocation)
        if (!imgDatas) {
            return content
        }

        for (var i = 0; i < imgDatas.length; i++) {
            var source = imgDatas[i]
            var url = source.match(new RegExp(sourceUrlRegx))[0]
            var replacement = '<img src="' +  wf.comServer() + '/img/img-viewing.png' + '" alt="图片"> '
                + '<a href="javascript:viewImage(\'' + url + '\')">查看图片</a>'
            content = content.replace(source, replacement)
        }
        return content
    },
    dateDiff: function (dateTime) {

        dateTime = dateTime.replace(/-/g, '/') //兼容IE11
        dateTime = dateTime.substring(0, 19) //兼容IE11
        var publishTime = new Date(dateTime).getTime() / 1000,
            date = new Date(publishTime * 1000),
            Y = date.getFullYear(),
            M = date.getMonth() + 1,
            D = date.getDate(),
            H = date.getHours(),
            m = date.getMinutes(),
            s = date.getSeconds()
        //小于10的在前面补0
        if (M < 10) {
            M = '0' + M
        }
        if (D < 10) {
            D = '0' + D
        }
        if (H < 10) {
            H = '0' + H
        }
        if (m < 10) {
            m = '0' + m
        }
        if (s < 10) {
            s = '0' + s
        }

        return Y + '-' + M + '-' + D + ' ' + H + ':' + m + ':' + s
    },

    all: function (content,ele) {
        if (!content) return ''
        if(!window['marked']){
            function pluginLoad(callback){
                //社区插件
                var load_plugs = [
                    {
                        attr: 'marked',
                        url: 'https://com.wf.pub/mark/marked.min.js'
                    }
                ]
                function plugsLoad(i) {
                    if (i == load_plugs.length) {
                        //插件加载完成后
                        callback()
                        return ;
                    }else {
                        var createEle = createEleFun(load_plugs[i])
                        createEle.onload = function() {
                            plugsLoad(i + 1)
                        }

                    }
                }
                plugsLoad(0)
            }
            pluginLoad(markedFunction)
        }else{
            markedFunction()
        }


        function markedFunction(){
            var renderer = new marked.Renderer() //自定义marked renderder

            renderer.code = function (code, language) {

                if (language == 'functionPlot') {
                    code = filterXSS(code);
                    return '<div class="functionPlot"><define>' + code + '</define><pre><code>' + hljs.highlightAuto(code).value + '</code></pre></div>'
                } else if (code.match(/^sequenceDiagram/) ||
                    code.match(/^graph/) ||
                    code.match(/^classDiagram/) ||
                    code.match(/^stateDiagram-v2/) ||
                    code.match(/^erDiagram/) ||
                    code.match(/^journey/) ||
                    code.match(/^gantt/) ||
                    code.match(/^gitGraph/) ||
                    code.match(/^pie/)) {
                    return '<div class="mermaid">' + filterXSS(code) + '</div>'
                } else {
                    return false
                }
            }

            //重写link,tokenizer已经替换过链接，这里直接返回即可
            renderer.link = function (href, title, text) {
                return '<a href="'+href+'" target="_blank">'+text+'</a>'
            }

            renderer.paragraph = function (text) {
                /* var aLinkRep = /<a.*?href="(.*?)".*?>(.*?)<\/a>/g;
                var codeLinkRep = /<code.*?>(.*?)<\/code>/g;
                var cleanText = text.replace(aLinkRep,'$$alink$$').replace(codeLinkRep,'$$codeLink$$');*/
                text = wf.replace.topic(text)
                text = wf.replace.at(text)
                return '<p>' + text + '</p>\n'
            }


            // 让marked兼容mathjax
            var tokenizer = {
                escape: function (src) { // 自定义 escape tokenizer
                    var match = src.match(/\$+([^\$]+?)\$+/)
                    if (match) { //判断是否是latex公式,
                        return {
                            type: 'escape',
                            raw: src,
                            text: src
                        }
                    } else
                        //如果不是返回false,会使用默认tokenizer
                        return false
                },
                url:function(src, mangle) {
                    var urlRep = /^(http|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?/
                    var cap = urlRep.exec(src)
                    if (cap) {
                        return {
                            type: 'link',
                            raw: cap[0],
                            text: cap[0],
                            href: cap[0],
                            tokens: [{
                                type: 'text',
                                raw: cap[0],
                                text: cap[0]
                            }]
                        }
                    }
                }
            }

            function highlight(code) {
                return hljs.highlightAuto(code).value
            }

            marked.use({
                //walkTokens,
                tokenizer: tokenizer,
                renderer: renderer,
                highlight: highlight,
                //防止xss攻击
                sanitize:true,
                targetBlank: true
            })

            content = marked(content)

        }
        return content
    }


}


//  jsbuilder/wf/academic/wf.academic.js


$.fn.extend({
    academic: function() {
        $('wf-academic', this).each(function(i, element) {
            wf.academic.init(element)
        })
    }
})
wf.academic.init = function(element){
    
   
    $(element).empty().render({
        data: {},
        template: {
            e: 'wf-academic-init',
            
            t: [
                {
                    tab:{
                            nav: {
                                '检索认领': { hashpath: '#searchClaim',click:wf.academic.searchClaim },
                                '我的成果': { hashpath: '#myResults',click:wf.academic.myResults},
                                '我的申诉': { hashpath: '#myAppeal',click:wf.academic.myAppeal},
                            },
                            default: 2
                        }
                },
                { e: 'academic-container' },
                
            ]
        }
    })
   
}

//  jsbuilder/wf/academic/wf.academic.myAppeal.js

wf.academic.myAppeal = function (e){
    var academicEle = $('academic-container')
    var curPage = 1
    var pageCount =1
    var req ={}
    academicEle.empty().render({
        data:{},
        template:{
            e:'search-claim',
            t:[
                {
                    e:"search-con",
                    t:[
                        {
                            e:"select",
                            a:{
                                name:"select_status"
                            },
                            t:[
                                '<option value="">全部</option>',
                                '<option value="0">待处理</option>',
                                '<option value="1">已通过</option>',
                                '<option value="2">已驳回</option>',
                                '<option value="3">已取消</option>'
                            ]
                        },
                        {
                            e:"wf-button",
                            t:'查询',
                            click:function(e){
                              req.page =1;
                              if(e.new_data.select_status === ''){
                                if(req.status){
                                  delete req.status
                                }
                              }else{
                                req.status = e.new_data.select_status
                              }
                              var listCon = $(e.sender).parents("search-con").siblings('list-con')
                              getClaimData(listCon,req)
                            }

                        }
                    ]


                },
                {
                    e:"list-con",
                    class:'myAppeal',
                    t:function(e){
                        req.page =1;
                      
                        getClaimData($(e.container),req)
                    }
                },
                {
                    e:"wf-page"
                },
            
            
            ]
        }
    })
    
    function renderAcademic(container,data){
        container.empty().render({
            data:data.achievement,
            template:[
                {
                    e:"list-item",
                    t:{
                        e:"list-item-con",
                        t:[
                            {
                                e:"list-item-title",
                              
                                t:[
                                    {
                                        e:'item-status',
                                        t:function(e){
                                            if (e.data.status == '1'){
                                                return '已通过'
                                            }else if (e.data.status == '2'){
                                                return '已驳回'
                                            }else  if (e.data.status == '3'){
                                                return '已取消'
                                            }else{
                                                return '待处理'
                                            }
                                        }
                                    },
                                    {
                                        e:"item-title-con",
                                        datapath:'jdata',
                                        t:"[[title]]",
                                        click:function(e){
                                           
                                            var url= wf.wfPubServer()+'/perios/article:'+ encodeURIComponent(e.org_data.textDoi)
                                            window.open( url)

                                        }
                                    
                                    }
                                ]
                            },
                            
                            {
                                e:"list-item-des",
                                
                                t:[
                                    {
                                        e:'wf-span',
                                        t:'申诉理由：'
                                    },
                                    {
                                        e:'wf-span',
                                        datapath:'jdata',
                                        class:"des",
                                        t:'[[description]]'
                                    },
                                ]
                            },
                            {
                                if:function(e){
                                
                                    if(parseInt(e.data.status)==2){
                                        return true
                                    }
                                },
                                then:{
                                    e:"list-item-explain", 
                                    t:[
                                        {
                                            e:'wf-span',
                                            t:'驳回说明：'
                                        },
                                        {
                                            e:'wf-span',
                                            datapath:'jdata',
                                            t:function(e){
                                              return e.data.rejectExplain? e.data.rejectExplain:'无'

                                            }
                                        },
                                    ]

                                }
                            },
                            {
                                e:"item-handle",
                                
                                t:[
                                    {
                                    if:function(e){
                                        if(parseInt(e.data.status)===0 ||parseInt(e.data.status)==3){
                                            return true
                                        }

                                    },
                                    then:{
                                        e:"wf-button",
                                        t:function(e){
                                            return (parseInt(e.data.status)==0) ?'编辑申诉资料':'重新申诉 '
                                           
                                        },
                                        click:function(e){
                                            wf.academic.renderEditAppealMaterials(e, getClaimData,container,req)
                                        }

                                    }
                                        

                                    },
                                    {
                                        if:function(e){
                                            if(parseInt(e.data.status)<=0){
                                                return true
                                            }

                                        },
                                        then:{
                                            e:"wf-button",
                                            t:'取消申诉',
                                            click:function(e){
                                                cancelAppeal(e)
                                                

                                            }
                                        }
                                        

                                    }
                                ]
                            },
                        ]
                     }
                }
            ]
        })
    }
    function getClaimData(container,req){
        wf.http.post(
            wf.apiServer() + '/sns/achievement_appeal_list',
            req,
            function(data) {
               
                if(data.code===200){
                  
                    if(data.achievement){
                        if(data.achievement.length>0){
                            renderAcademic(container,data)
                            var pageEle = $(container).siblings('wf-page')
                            pageCount = data.pageCount
                            curPage = data.page
                            if(parseInt(pageCount)>1){
                                pageFun(pageEle)
                                pageEle.show()
                            }else{
                                pageEle.hide()
                            }
                        }else{
                            $(container).siblings('wf-page').hide()
                            container.empty().render({
                                data:{},
                                template:{
                                    e:"wf-p",
                                    t:'暂无数据！'
                                }
                            })
                            
                           
                        }
                    }
                }
              
               
              
            },
            function(err){
                
                if((err.err_code === 40001) && (err.sub_msg =='缺少token令牌参数')){
                    var url = wf.getRelativeUrl()
                    window.location.href =wf.oauthServer() + '/login?redirectUri=' + encodeURIComponent(url);
                }else{
                    wf.error(err)
                }
            }
        )
    }
    function pageFun(element) {
    
        
        if(pageCount>1){
            var renderContainer = $(element).siblings('list-con')
            var renderData = {
                container:renderContainer,
                reqData:req
            }
           
        
            var pageInfo ={
                page:curPage,
                maxPage:pageCount
            }
            wf.page(element,pageInfo,renderData,getClaimData)
        }
    }

    function cancelAppeal(e){
        dialog.sendDialog({
            title:'取消申诉',
            content:'您确定要取消这条申诉内容吗？',
            button:['取消','确定'],
            },
            function(){
    
            },
            function(){
                
                wf.http.post(
                    wf.apiServer()+'/sns/achievement_appeal_cancel',
                    {
                        resourceId:e.org_data.resourceId
                    },
                    function(data) {
                        if(data.code===200){
                            // 刷新页面
                            req.page =curPage;
                            var container = $(e.sender).closest('list-con')
                            getClaimData(container,req)
                        }
                        
                    },
                    function(){

                    })
            
                })





    }

}

//  jsbuilder/wf/academic/wf.academic.myResults.js

wf.academic.myResults=function (e){
    var academicEle = $('academic-container')
    var curPage = 1
    var pageCount =1
    academicEle.empty().render({
        data:{},
        template:{
            e:'search-claim',
            t:[
                {
                    e:"list-con",
                    class:'myClaim',
                    t:function(e){
                        getClaimData($(e.container),{
                            page:curPage
                        })
                    }
                },
                {
                    e:"wf-page"
                },
                {
                    e:"handle-con",
                    t:[
                        {
                            e:"handle-checkboxAll",
                            t:[
                                {
                                    e:'input',
                                    a:{
                                        type:"checkbox",
                                        name:'checkboxAll',
                                        class:'checkboxAll',
                                        value:'全选'
                                       
                                    },
                                    
                                    click:function(e){
                                        var checkedType = $(e.sender).prop("checked")
                                        
                                        $(".searchResultCheckbox").each(function(i,item){
                                           
                                            if(!(item.disabled)){
                                                // 除了禁用的，全部选中 
                                                item.checked = checkedType
                                            }
                                           

                                        })

                                    }
                                },
                                "全选"
                            ]
                        },
                        {
                            e:"handle-claim",
                            t:[
                                {
                                    e:"wf-button",
                                    t:'退领',
                                    click:function(e){
                                       
                                        
                                        if(e.new_data.searchResultCheckbox.length>0){
                                            claimDelete(e)
                                        }else{
                                            dialog.fail('请选择要退领的内容！')
                                        }
                                       
                                        

                                    }
                                }
                                

                            ]

                        }
                    ]

                 
                }
               
            ]


        }
    })
   
    
    function claimDelete(e){
        var reqData = {
           
            url:wf.apiServer() + '/sns/achievement/claim/delete',
            data:e.new_data.searchResultCheckbox
        }
        wf.http.post(reqData,
            function(data) {
                if(data.code !==200){
                    dialog.fail(data.message)
                }else{
                    $(".checkboxAll").prop("checked",false)
                    var handleConEle = $(e.sender).parents('handle-con')
                    var container =  handleConEle.siblings('list-con')
                    handleConEle.hide()
                    container.siblings('wf-page').hide()
                    dialog.success('退领成功！')
                    // 刷新页面
                    getClaimData(container,{
                        page:curPage
                    })
                  

                }
            },
            function(err) {
                wf.error(err)
            }
        )
    }
    function getClaimData(container,req){
        wf.http.get(
            wf.apiServer() + '/sns/achievement/claim/my',
            req,
            function(data) {
                if(data.code===200){
                  
                    if(data.achievement){
                        if(data.achievement.length>0){
                           
                            wf.academic.renderAcademic(container,data,"true")
                            var pageEle = $(container).siblings('wf-page')
                           
                            pageCount = data.pageCount
                            curPage= data.page
                          
                            if(parseInt(pageCount)>1){
                                pageFun(pageEle)
                                pageEle.show()
                            }
                            
                            $(container).siblings('handle-con').show()
                        }else{
                            container.empty().render({
                                data:{},
                                template:{
                                    e:"wf-p",
                                    t:[
                                        '暂无数据！快去',
                                        {  
                                            e:'a',
                                            t:'检索认领',
                                            click:function(e){
                                               var tabEle =  $(e.sender).parents('academic-container').siblings('tab')
                                               tabEle.find('tab-nav')[0].click()
                                            }
                                        },
                                        '你的成果吧！'
                                    ]
                                }
                            })
                        }
                    }
                }
              
               
              
            },
            function(err){
                
                if((err.err_code === 40001) && (err.sub_msg =='缺少token令牌参数')){
                    var url = wf.getRelativeUrl()
                    window.location.href =wf.oauthServer() + '/login?redirectUri=' + encodeURIComponent(url);
                }else{
                    wf.error(err)
                }
            }
        )
    }

    function pageFun(element) {
       
        
        if(pageCount>1){
            var renderContainer = $(element).siblings('list-con')
            var renderData = {
                container:renderContainer,
                reqData:{
                    page:curPage
                }
            }
        
          
            var pageInfo ={
                page:curPage,
                maxPage:pageCount
            }
            wf.page(element,pageInfo,renderData,getClaimData)
        }
    }
}

//  jsbuilder/wf/academic/wf.academic.renderAcademic.js

wf.academic.renderAcademic = function(container,data,isMyType){

    var loginUser = data.user
    var curUid = data.uid
    var realName = data.realNameInfo?data.realNameInfo.realname:null
    container.empty().render({
        data:data.achievement,
        template:[
            {
                e:"list-item",
                t:{
                    if:function(e){
                       
                        if(e.data.JMETA.creator.length>0){
                            return 'true'
                        }

                    },
                    then:{
                        e:"list-item-con",
                        datapath:'JMETA',
                        class:'clearfloat',
                        t:[
                            {
                                if:function(){
                                    if(isMyType){
                                        return true
                                    }
                                },
                                then:{
                                    e:"list-item-con-left",
                                    t: {
                                        e:"input",
                                        a:{
                                            type:"checkbox",
                                            name:'searchResultCheckbox',
                                            class:"searchResultCheckbox",
                                            value:function(e){
                                                return e.data.identifier[0].id||e.data.identifier[0].text
                                            }
                                        },
                                       
                                        click:function(e){
                                            if($(e.sender).prop("checked")){
                                                $(e.sender).prop("checked",true)
                                            }else{
                                                $(e.sender).prop("checked",false)
                                            }
                                            var allLength = $('.searchResultCheckbox').length
                                            var disabledLength = $('.searchResultCheckbox:disabled').length
                                            var checkedLength =$('.searchResultCheckbox:checked').length
                                            if(allLength===disabledLength+checkedLength){
                                                $('.checkboxAll').prop("checked",true)
                                            }else{
                                                $('.checkboxAll').prop("checked",false)
                                            }
                                        }
                                     
                                    },
                                }
                               
                            },
                            {
                                e:"list-item-con-right",
                                
                                t:[
                                    {
                                        e:"list-item-title",
                                    
                                        t:[
                                           
                                            {
                                                e:"item-title-con",
                                                a:{
                                                    'data-textdoi':function(e){
                                                        return e.data.identifier[0].id||e.data.identifier[0].text

                                                    },
                                                    'literid':function(e){
                                                         if(e.data.identifier[0].url.slice(15, 21)==='thesis'){
                                                            return 'thesis'
                                                         }
                                                         else{
                                                            return 'perios'
                                                         }
                                                        // return e.data.type
                                                        
                                                        
                                                    }
                                                },
                                                t:[
                                                    // {
                                                    //     e:'item-status',
                                                    //     t:"已认领"
                                                    // },
                                                    function(e){
                                                        var titles =  e.data.title
                                                        $.each(titles,function(i,item){
                                                            if(item.lang=='zh'&&item.text){
                                                               $(e.container).render({
                                                                   data:item,
                                                                   template:{
                                                                    e:'item-title-zh',
                                                                    t:"[[text]]",
                                                                  }
                                                               })
                                                               return false;
                                                            }
                                                            else if(item.lang=='en'){
                                                                $(e.container).render({
                                                                    data:item,
                                                                    template:{
                                                                     e:'item-title-en',
                                                                     t:"[[text]]",
                                                                     
                                  
                                                                   }
                                                                })
                                                                return false;
        
                                                            }
        
                                                        })
                                                       
        
                                                    },
                                                 
                                                ],
                                                click:function(e){
                                                   var textDoi =  $(e.sender).data('textdoi')
                                                   var source=$(e.sender).attr('literid')
                                                   if(source==='perios'){
                                                    var url= wf.wfPubServer()+'/perios/article:'+ encodeURIComponent(textDoi)
                                                   }
                                                   else{
                                                    var url= wf.wfPubServer()+'/thesis/article:'+ encodeURIComponent(textDoi)
                                                   }
                                                   window.open( url)

                                                }
                                                
                                            },
                                          
                                         

                                        ],
                                        
                                    },
                                    {
                                        e:'list-item-more-info',
                                        t:[
                                            {
                                                e:"item-other",
                                                class:'clearfloat',
                                                t:[
                                                    {
                                                        e:"item-Source",
                                                      
                                                        
                                                        t:{
                                                            e:"a",
                                                            // t:'[[name]]'
                                                            a:{
                                                                href:function(e){
                                                                    var url
                                                                    var newUrl
                                                                    $.each(e.data,function(i,item){
                                                                        console.log('222',e.data.identifier[0].url.slice(15, 21))
                                                                        if(e.data.identifier[0].url.slice(15, 21)==='perios'){
                                                                            $.each(e.data.contributor,function(i,item){
                                                                                if(item.type =='perioInfo'){
                                                                                    url =  item.id
                                                                                return false
                                                                                }
                                                                            })
                                                                             newUrl =  wf.wfPubServer()+'/perios/qcode:'+ url
                                                                            return  newUrl
                                                                        }
                                                                        else{
                                                                            $.each(e.data.creator,function(i,item){
                                                                                
                                                                                    url =  item.application
                                                                                return false
                                                                            })
                                                                             newUrl =  wf.wfPubServer()+'/thesis/unit:'+ url
                                                                            return  newUrl
                                                                        }
                                                                    })
                                                                    // $.each(e.data.contributor,function(i,item){
                                                                       
                                                                    //     if(item.type =='perioInfo'){
                                                                    //         url =  item.id
                                                                    //         newUrl =  wf.wfPubServer()+'/perios/qcode:'+ url
                                                                    //     return false
                                                                    //     }
                                                                    //     else{
                                                                    //         newUrl =  wf.wfPubServer()+'/thesis/unit:'+ url
                                                                    //     }
                                                                    // })
                                                                   
                                                                    return  newUrl

                                                                }
                                                            },
                                                           
                                                            t:function(e){
                                                                var name
                                                                $.each(e.data,function(i,item){
                                                                 if(e.data.identifier[0].url.slice(15, 21)==='perios'){
                                                                     $.each(e.data.contributor,function(i,item){
                                                                         if(item.type =='perioInfo'){
                                                                             name =  '(期刊)'+item.name
                                                                             return false
                                                                             }
                                                                     })
                                                                     return  name
                                                                 }
                                                                 else{
                                                                     $.each(e.data.creator,function(i,item){
                                                                             name =  '(学位)'+item.application
                                                                             return false
                                                                     })
                                                                     return  name
                                                                 }
                                                             })
                                                             return  name
    
                                                            }
                                                        },
            
                                                    },
                                                    
                                                    
                                                    {
                                                        e:"item-volume",
        
                                                        t:function(e){
                                                           
                                                            var year = e.data.publisher[0].year
                                                            var issue = e.data.publisher[0].issue
                                                            if(issue!=='' && issue!== undefined ){
                                                                return  year+'年'+issue+'期'
                                                            }else{
                                                                return  year+'年'
                                                            }
                                                         
                                                            
                                                          
        
                                                        }
                                                    }
            
                                                ]
            
            
            
                                            },
                                            {
                                                e:"item-author",
                                              
                                                t:[
                                                    {
                                                      e:"item-author-title",
                                                      t:'作者：'
                                                    },
                                                    {
                                                        if:function(e){
                                                            
                                                            if(e.data.creator.length>0){
                                                               
                                                                return true
                                                            }
                                                            
        
                                                        },
                                                        then:{
                                                            e:'item-author-name',
                                                            datapath:'creator',
                                                            t:[
                                                                {
                                                                    e:'wf-span',
                                                                    t:'[[name]]'+'&nbsp;'
                                                                }
                                                                   
                                                               
                
                                                            ]
                                                        }
                                                       
                                                    }
                                                   
            
            
                                                ]
                                            },
                                            {
                                                e:'item-handle',
                                                t:[
                                                    {
                                                        if:function(e){
                                                            // if(isMyType){
                                                            //     return true
                                                            // }else{
                                                            //     // 客观页面
                                                            //     if(loginUser){
                                                            //         if( loginUser.uid == curUid){
                                                            //             //本人自己的客观页面是可以自己下载的
                                                            //             return true
                                                            //         }else{
                                                            //             // 看看文章的标识
                                                            //             return (e.data.isPublic && e.data.isPublic==1) ? true :false
                                                            //         }
                                                                    
                                                                    
                                                            //     }else{
                                                            //        return false
                                                            //     }
                                                               
                                                            // }
                                                            if(e.data.title.length<=0){
                                                                return false
                                                            }else{
                                                                return isMyType?isMyType:(loginUser? ((loginUser.uid == curUid)?true:( (e.data.isPublic && e.data.isPublic==1) ? true :false)): false)
                                                            }
                                                           
                                                            
                                                        },
                                                        then:  {
                                                            e:"wf-button",
                                                            class:'fullDownload',
                                                            t:{
                                                                e:"a",
                                                                a:{
                                                                  href:function(e){
                                                                    var articleId 
                                                                    var title = e.data.title[0].text
                                                                    var sort 
                                                                   if(e.data.identifier[0].url.slice(15, 21)==='thesis'){
                                                                    articleId= e.data.identifier[0].id||e.data.identifier[0].text
                                                                    sort='thesis'
                                                                   }else{
                                                                    articleId= e.data.publisher[0].id
                                                                    sort='perios'
                                                                }
                                                                   

                                                                    if(isMyType || (loginUser? ((loginUser.uid == curUid)?true:false):false)){
                                                                        return wf.snsServer() + '/achievement/download?articleId='+articleId+'&title='+ title+'&author='+realName+'&sort='+sort
                                                                    }else{
                                                                        return wf.snsServer() + '/achievement/download?articleId='+articleId+'&title='+ title+'&author='+realName+'&public='+e.data.isPublic+'&sort='+sort
                                                                       
                                                                    }
                                                                      

                                                                  },
                                                                  
                                                                 
                                                                },
                                                                t:"全文下载",
                                                            }
                                                        }
                                                    },
                                                    {
                                                        if:function(e){
                                                            if(!loginUser){
                                                                return false
                                                            }
                                                            if( loginUser.uid == curUid){
                                                                return true
                                                            }
                                                            return false
                                                        },
                                                        then:{
                                                            e:"wf-button",
                                                            a:{
                                                               'data-isPublic':'[[isPublic]]'
                                                            },
                                                            t:function(e){
                                                                return   (!e.data.isPublic || e.data.isPublic==0) ? '公开':'私密'
        
                                                            },
                                                            click:function(e){
                                                               
                                                                setPublicType(e)
                                                                
            
                                                            }
                                                        }
                                                        
                                                    },
                                                 
                                                ]
                                            },
                                          
                                        ]
            
            
                                    }
                                ]
                            },
                            
                           
                           
    
                        ]
                    },
                 }
                
              
                

            }

        ]
    })

    function setPublicType (e){
        var isPublic = $(e.sender).data('ispublic')
        isPublic = (isPublic && isPublic== 1) ? 0: 1
        if(isPublic==0){
            privateTypeTip(e,isPublic)

        }else{
            publicTypeTip(e,isPublic)
        }

        
    }
    function privateTypeTip(e,isPublic){
        dialog.sendDialog(
            {
                title:'成果设置私密状态',
                content:'您确定将成果设置私密状态吗？设置私密状态，其他用户不可以在您的学术成果页面下载该文献！',
                button:['取消','确定'],
            },
            function(){
    
            },
            function(){
               
               changePublicTypeFun(e,isPublic)
            }
        )
    }
    function publicTypeTip(e,isPublic){
        dialog.sendDialog(
            {
                title:'成果设置公开状态',
                content:'您确定将成果设置公开状态吗？设置公开状态，其他用户可以在您的学术成果页面下载该文献！',
                button:['取消','确定'],
            },
            function(){
    
            },
            function(){
               
               changePublicTypeFun(e,isPublic)
            }
        )
    }
    function changePublicTypeFun(e,isPublic){
        var reqData = {
            url:wf.apiServer() + '/sns/achievement/claim/setPublicType',
            data:{
                resourceId:e.org_data.identifier[0].id,
                author:$('wf-academic').data('name'),
                isPublic:isPublic
            }
        }
        wf.http.post(reqData,
            function(data) {
                if(data.code !==200){
                    dialog.fail(data.message)
                }else{
                    if(data.isPublic==0){
                        dialog.success('私密状态设置成功')
                        $(e.sender).text('公开')
                       
                    }else if(data.isPublic ==1){
                        dialog.success('公开状态设置成功')
                        $(e.sender).text('私密')
                    }
                    $(e.sender).data('ispublic',data.isPublic)
                }
            },
            function(err) {
                wf.error(err)
            }
        )
    }
  
  
}

//  jsbuilder/wf/academic/wf.academic.renderAppealMaterials.js

wf.academic.renderEditAppealMaterials =function(e,initListFun,listContainer,listReq){
  
    var header = (parseInt(e.org_data.status)==3) ? '重新申诉' : '编辑申诉资料'
   
    poplayer({
        header:header,
        class:'appeal_materials',
        data:e.org_data,
        template: {
            e: 'appeal-materials-con',
            t: [
                {
                    e: 'textarea',
                    datapath:"jdata",
                    name: 'appeal_description',
                    a: {
                        'placeholder': '请输入申诉理由',
                        'value':'[[description]]'
                    },
                    t:"[[description]]"
                },
                {
                    e:"wf-handle",
                    t:[
                        {
                            e:'input',
                            a:{
                                type:"file",
                                name:"files",
                                multiple:"multiple",
                                accept:"*/*",
                                class:'appeal_input'
                            },
                            style:{
                                display:'none'
                            }
                            
                        },
                        {
                            e:"appeal_con",
                            t:[
                                {
                                    e:'wf-span',
                                    t:'请上传能证明此篇论文为您的证明材料'
                                },
                                {
                                    e:"wf-button",
                                    t:'上传',
                                    click:function(e){
                                        var resourceId = e.org_data.resourceId
                                        var appealInputEle =  $(e.sender).parents("appeal_con").siblings('.appeal_input')
                                        appealInputEle.click()
                                        
                                        appealInputEle.fileupload({
                                            //支持拖拽上传
                                            // dropZone: $(p.container).find('.image-dropzone'),
                                            'url': wf.snsServer() + '/achievement/appeal/materials',
                                            xhrFields: {
                                                withCredentials: true
                                            },
                                            //按顺序上传
                                            sequentialUploads: true,
                                            //多个文件一起上传
                                            singleFileUploads: false,
                                            add: function(event, data) {
                                                
                                                var progressCon = $(event.target).closest('wf-handle').siblings('wf-materials-progress')
                                                progressCon.empty().render(
                                                    [
                                                        {
                                                        e: 'h4',
                                                        class: 'upload-schedule',
                                                        t: [
                                                            { 'wf-p': '正在上传...' },
                                                            {
                                                                e: "upload-progress",
                                                                t: [
                                                                    {
                                                                        e: "upload-progress-ing",
                                                                    },
                                                                    {
                                                                        e: "upload-progress-init",
                                                                    },
                                                                ]
                                                            }
                                                        ]
                                                    }])
                                                data.submit()
                                                
                                            },
                                            submit: function(event, data) {
                                               
                                                data.url = wf.snsServer() + '/achievement/appeal/materials'
                                                data.formData = {
                                                    resourceId:resourceId

                                                };
                                            },
                                            progressall: function(event, data) {
                                                var progressCon = $(event.target).closest('wf-handle').siblings('wf-materials-progress')
                                                var progress = parseInt(data.loaded / data.total * 100, 10)
                                                progressCon.find('.upload-schedule upload-progress-ing').css('width', progress + '%')
                                                progressCon.find('.upload-schedule wf-p').text('正在上传中，已上传：' + progress + '%')
                            
                                            },
                                            done: function(event, data) {
                                              
                                                // 整理数据
                                               
                                                if(data.result.code==200){
                                                    
                                                    var materialsCon =  $(event.target).closest('wf-handle').siblings('wf-materials-con')
                                                    $.each(data.result.fileList,function(i,item){
                                                        var itemArr = item.name.split('/')
                                                        var localName = itemArr[itemArr.length-1]
                                                        item.localName = localName
                                                        $("item-materials item-name").each(function(j,jtem){
                                                            var name= $(jtem).text()
                                                           
                                                            if(name===item.localName){
                                                                item.isRepeat = 'true'
                                                              }
                                                         })
                                                        
                                                    })
                                                    renderMaterialsCon(data.result.fileList,materialsCon)
                                                    // $(materialsCon).render({
                                                    //     data:,
                                                    //     template:[
                                                    //         {
                                                    //             e:"item-materials",
                                                    //             a:{
                                                    //                 id:"[[name]]"
                                                    //             },
                                                    //             style:{
                                                    //                 display:'block',
                                                    //                 'text-align':'left'
                                                    //             },
                                                    //             t:[
                                                    //                 {
                                                    //                     e:"item-name",
                                                                        
                                                    //                     t:'[[localName]]'
                                                    //                 },
                                                    //                 {
                                                    //                     if:function(e){
                                                    //                         if(e.data.isRepeat){
                                                    //                             return 'true'
                                                    //                         }
        
                                                    //                     },
                                                    //                     then:{
                                                    //                         e:"item-repeat",
                                                    //                         t:'！重复提交'
                                                    //                     }
                                                                       
                                                    //                 },
                                                    //                 {
                                                    //                     e:"wf-button",
                                                    //                     t:"删除",
                                                    //                     click:function(e){
                                                                           
                                                    //                         $(e.sender).closest('item-materials').remove()
             
                                                    //                     }
                                                    //                 }
                                                    //             ]
                                                    //         }
                                                    //     ]
                                                    // })
                                                }else{
                                                    
                                                }
                                                
                                            }
                                        })
                                    }
                                },
                            ]

                        },
                    
                       
                    ]

                },
                {
                    e:"wf-materials-progress",
                    class:'wf_materials_progress',
                   
                },
                {
                    e:"wf-materials-con",
                    class:'wf_materials_con',
                    
                    
                    t:function(e){
                        var fileIds = e.data.jdata.fileIds
                        var newFiles =[]
                        if(fileIds.length>0){
                            $.each(fileIds,function(i,item){
                                var itemArr = item.split('/')
                                var localName = itemArr[itemArr.length-1]
                                var itemData = {
                                    name:item,
                                    localName:localName


                                }
                                $("item-materials item-name").each(function(j,jtem){
                                    var name= $(jtem).text()
                                   
                                    if(name===localName){
                                        itemData.isRepeat = 'true'
                                    }
                                 })
                                newFiles.push(itemData)
                                
                                
                            })
                            renderMaterialsCon(newFiles,e.container)
                        }
                       
                       
                      



                    }
                },
                {
                    e:"wf-materials-submit",
                    t:'提交',
                    click: function (e) {
                       
                        var req = {
                            title:e.org_data.jdata.title,
                            resourceId:e.org_data.resourceId,
                            description:e.new_data.appeal_description,
                            textDoi:e.org_data.jdata.textDoi


                        }
                        var fileIds =[]
                        $('item-materials').each(function(i,item){
                            fileIds.push($(item).attr("id"))
                        })
                        req.fileIds=fileIds
                        wf.http.post(
                            wf.apiServer() + '/sns/achievement_appeal_edit', req,
                            function(res) {
                                if(res.code == '200'){
                                    $(e.sender).closest('popmask').remove()
                                    dialog.success('编辑成功！已重新申诉')
                                    // 刷新页面
                                    // searchData(container,searchReqData)
                                    initListFun(listContainer,listReq)
                                   
                                }else{
                                    dialog.fail('编辑失败')
                                }
                               
                                
                            },
                            function(err){
                                wf.error(err)
                            }
                        )
                    }
                }
                
               
            ]
        }
    })

    function renderMaterialsCon(data,materialsCon){
        $(materialsCon).render({
            data:data,
            template:[
                {
                    e:"item-materials",
                    a:{
                        id:"[[name]]"
                    },
                    style:{
                        display:'block',
                        'text-align':'left'
                    },
                    t:[
                        {
                            e:"item-name",
                            
                            t:'[[localName]]'
                        },
                        {
                            if:function(e){
                                if(e.data.isRepeat){
                                    return 'true'
                                }

                            },
                            then:{
                                e:"item-repeat",
                                t:'！重复提交'
                            }
                           
                        },
                        {
                            e:"wf-button",
                            t:"删除",
                            click:function(e){
                               
                                $(e.sender).closest('item-materials').remove()

                            }
                        }
                    ]
                }
            ]
        })
    }

}

//  jsbuilder/wf/academic/wf.academic.searchClaim.js

wf.academic.searchClaim = function (e) {
    // var tabEle = $(e.sender).closest('tab')
    // var academicEle = tabEle.siblings('academic-container')
    var academicEle = $('academic-container')
    var pageInfo = {}
    
    var searchReqData ={                       
        // url:wf.apiServer() + '/sns/achievement/search',
        data:{
            page:pageInfo.page ? pageInfo.page :'1',
        }
    }
    academicEle.empty().render({
        data:{},
        template:{
            e:'search-claim',
            t:[
                {
                    e:"search-con",
                    t:[
                        {
                            e:"select",
                            a:{
                                class:"search-select search-select-type",
                                name:'search_select_type'
                            },
                            t:[
                                {
                                    e:"option",
                                    a:{
                                        value:"all",
                                        selected:"selected",
                                    },
                                    t:'全部',
                                },
                                
                                {
                                    e:"option",
                                    a:{
                                        value:"periodical",
                                       
                                       
                                    },
                                    t:'期刊'
                                },
                                {
                                    e:"option",
                                    a:{
                                        value:"thesis",
                                        
                                    },
                                    t:'学位',
                                },
                               
                               
                            ],
                        },
                        {
                            e:"select",
                            a:{
                                class:"search-select search-select-name",
                                name:'search_select_name'
                            },
                           
                            t:[ 
                                
                                {
                                    e:"option",
                                    a:{
                                        value:"author"
                                    },
                                    t:'作者'
                                },
                                {
                                    e:"option",
                                    a:{
                                        value:"title"
                                    },
                                    t:'标题',
                                },
                                //隐藏id
                                // {
                                //     e:"option",
                                //     a:{
                                //         value:"id"
                                //     },
                                //     t:'id'
                                // },
                               
                            ],
                            event:{
                                change:function(e){
                                    var searchInputEle = $(e.sender).siblings('.search-input')
                                    if(e.new_data.search_select_name==='author'){
                                        searchInputEle.attr('disabled',true)
                                        var realName =$(e.sender).parents('wf-academic').data('name')
                                        searchInputEle.val(realName)
                                        searchInputEle.text(realName)
                                    }else if(e.new_data.search_select_name==='id'){
                                        searchInputEle.attr('placeholder','请输入id,多个id以逗号间隔')
                                        searchInputEle.val('')
                                        searchInputEle.attr('disabled',false);
                                        searchInputEle.text('')
                                    }
                                    else{
                                        searchInputEle.attr('disabled',false);
                                        searchInputEle.attr('placeholder','请输入内容')
                                        searchInputEle.val('')
                                        searchInputEle.text('')
                                    }

                                }
                            }

                        },
                        {
                            e:"input",
                            a:{
                                placeholder:'请输入内容',
                                class:'search-input',
                                name:'search_input_name',
                                disabled:'disabled',
                                value:function(e){
                                    console.log('cccc',e)
                                  return $(e.container).parents('wf-academic').data('name')

                                }
                            },
                            // t:function(e){
                            //     return $(e.container).parents('wf-academic').data('name')
                            // }
                            
                            
                        },
                        {
                            e:"wf-button",
                            a:{
                              
                                class:'search-btn',
                            },
                            t:'搜索',
                            click:function(e){
                                // 搜索
                                var container =$(e.sender).parents('search-con').siblings('list-con')
                                if(e.new_data.search_input_name!==''){
                                    var selectName = e.new_data.search_select_name
                                    // console.log('e.new_data.search_select_name',e.new_data)
                                    var inputName = e.new_data.search_input_name
                                    searchReqData.data.type = e.new_data.search_select_type
                                    searchReqData.data.page = 1
                                    if(selectName ==='title'){
                                        searchReqData.data.title = inputName
                                        if(searchReqData.data.author||searchReqData.data.id){
                                            delete searchReqData.data.author
                                            delete searchReqData.data.id
                                        }
                                    }
                                    if(selectName ==='author'){
                                      searchReqData.data.author = inputName
                                      if(searchReqData.data.title||searchReqData.data.id){
                                        delete searchReqData.data.title
                                        delete searchReqData.data.id
                                      }
                                    }
                                    if(selectName ==='id'){
                                        var regex = /,/;
                                        var ids=''
                                        id=inputName
                                        if (inputName) {
                                            var strAry = inputName.split(regex);
                                            for (m = 0; m < strAry.length; m++) {
                                                if(searchReqData.data.type ==='periodical'){
                                                   id="702_"+strAry[m]
                                                }
                                                else if(searchReqData.data.type ==='thesis'){
                                                    id="658_"+strAry[m]
                                                }
                                                else{
                                                    id="702_"+strAry[m]+",658_"+strAry[m]
                                                }
                                                ids=ids+id+','
                                            }
                                        }
                                            searchReqData.data.id = ids.substring(0, ids.length - 1);
                                        if(searchReqData.data.title||searchReqData.data.author){
                                            delete searchReqData.data.author
                                            delete searchReqData.data.title
                                        }
                                    }
                                    // console.log('searchReqData',searchReqData)
                                    searchData(container,searchReqData)
                                }else{
                                    // dialog.success('移除置顶成功')
                                    dialog.fail('搜索内容是必填项！')
                                }
                              
                                // 发请求
                                // 渲染页面

                            }

                        }
                    ]


                },
                {
                    e:"list-con",
                    t:[
                       function(e){
                          $(e.container).siblings('search-con').find('.search-btn').click()
                        }
                    ]
                },
                {
                    e:"wf-page",
                    
                },
                {
                    e:"handle-con",
                    t:[
                        {
                            e:"handle-checkboxAll",
                            t:[
                                
                                {
                                    e:'input',
                                    a:{
                                        type:"checkbox",
                                        name:'checkboxAll',
                                        class:'checkboxAll',
                                        value:'全选'
                                       
                                    },
                                    
                                    click:function(e){

                                        var checkedType = $(e.sender).prop("checked")
                                        
                                        $(".searchResultCheckbox").each(function(i,item){
                                           
                                            if(!(item.disabled)){
                                                // 除了禁用的，全部选中 
                                                item.checked = checkedType
                                            }
                                           

                                        })

                                    }
                                },
                                "&nbsp;全选"
                            ]
                        },
                        {
                            e:"handle-claim",
                            t:[
                                {
                                    e:"wf-button",
                                    t:'认领',
                                    click:function(e){
                                        
                                        if(e.new_data.searchResultCheckbox.length>0){
                                            claimAdd(e)
                                        }else{
                                            dialog.fail('请选择认领资源')
                                        }
                                       
                                        

                                    }
                                },
                                {
                                    e:'claim-warning',
                                    t:[
                                        "<em></em>请确保<em>成果为本人所有</em>，认领他人成果<em>会被作者本人申诉！</em>"
                                    ]

                                }

                            ]

                        }
                    ]

                 
                }
            ]


        }
    })
    
    
    function searchData(container,searchReqData){
        var reqData= searchReqData.data?searchReqData.data:searchReqData
        console.log('reqData',reqData)
        wf.http.post(
            {                       
            url:wf.apiServer() + '/sns/achievement/search',
            // url:"http://localhost:80/achievement/search",
            data:reqData},
            function(data) {
                if(data.length===0){
                    dialog.fail('查询无数据,请确认查询类型及id')
                }
                if(data){
                    if(reqData.id){
                        var hits=[]
                        for(i=0;i<=data.length-1;i++){
                            let arr={}
                            arr.JMETA=data[i].metadata.JMETA_DC
                            arr.claimd=data[i].claimd
                            arr.isAppeal=data[i].isAppeal  
                            hits.push(arr);
                        }
                        data.hits=hits
                     
                    }
                    // if(reqData.id){
                    //     let jdata={}
                    //     let hits=[]
                    //     for(i=0;i<=data.length-1;i++){
                    //       let  JMETA=data[i].metadata.JMETA_DC
                    //       jdata.JMETA=JMETA
                    //        hits.push(jdata);
                    //        console.log('')
                    //        JMETA='',jdata=''
                    //     }
                    //  data.hits=hits
                    // jdata={}, hits=[]
                    // }
                    pageInfo.page = parseInt(data.pageNum)||1
                    pageInfo.maxPage = parseInt(data.maxPage)||1
                    if(data.hits.length>0||data){
                        container.siblings('handle-con').show()
                        renderList(container,data)
                        var allLength = $('.searchResultCheckbox').length
                        var disabledLength = $('.searchResultCheckbox:disabled').length
                        if(allLength===disabledLength){
                          $('.checkboxAll').prop("disabled",true)
                        }else{
                          $('.checkboxAll').prop("disabled",false)
                        }
                        if( pageInfo.maxPage>1){
                            var pageEle = container.siblings('wf-page')
                            pageEle.show()
                            page(pageEle)
                        }
                       
                    }else{
                        container.empty().render({
                            data:{},
                            template:{
                                e:'wf-p',
                                t:'暂无数据！快去搜索内容吧！'
                            }
                        })
                        container.siblings('wf-page').hide()
                        container.siblings('handle-con').hide()
                    }
                }
               
                
            },
            function(err) {
                wf.error(err)
            }
        )
        

    }
    function renderList(container,data){
        // var realName='111'
        var realName = data.realName||data[0].realName
        let hits =data.hits
        var curUid = data.uid
        console.log('data',data)
        console.log('hits',hits)
            container.empty().render({
                data:data.hits,
                template:[
                    {
                        e:"list-item",
                        a:{
                            "data-status":function(e){
                            }
                        },
                        t:{
                            if:function(e){
                                var creators = e.data.JMETA.creator||e.data.JMETA_DC.creator
                                if( creators.length>0){
                                    if(parseInt(e.data.claimd)>=0){
                                        if(parseInt(e.data.claimd) === 0){
                                           $(e.container).data('type','已认领')
                                        }else{
                                            $(e.container).data('type','他人认领')
                                        }
                                    }else{
                                        $(e.container).data('type','未认领')
                                    }
                                }else{
                                    $(e.container).data('type','未认领')
                                }
                               if(e.data.isAppeal){
                                    if(parseInt(e.data.isAppeal)==2){
                                        $(e.container).data('appeal','已驳回')
                                    }else if(parseInt(e.data.isAppeal)== 1){
                                        $(e.container).data('appeal','已申诉')

                                    }else if(parseInt(e.data.isAppeal)== 3){
                                        $(e.container).data('appeal','已取消')

                                    }
                               }
                                
                                return 'true'
                            },
                            then:{
                                e:"list-item-con",
                                datapath:'JMETA',
                                class:'clearfloat',
                                t:[
                                    {
                                        e:'list-item-con-left',
                                        t: [
                                            {
                                                e:"input",
                                                a:{
                                                    type:"checkbox",
                                                    name:'searchResultCheckbox',
                                                    class:"searchResultCheckbox",
                                                    value:function(e){
                                                        return JSON.stringify(e.data)
                                                    },
                                                },
                                                t:function(e){
                                                    if($(e.container).parents('list-item').data('type')!=='未认领'){
                                                        $(e.container).attr("disabled","disabled")
                                                     }else{
                                                        var names=[]
                                                        var creators = e.data.creator||e.data.JMETA_DC.creator
                                                        
                                                        $.each(creators,function(i,item){
                                                            names.push(item.name)
                                                        })
                                                        var isCreator = $.inArray(realName,names)
                                                       
                                                        if(isCreator===-1){
                                                            // 不是作者本人
                                                            $(e.container).attr("disabled","disabled")
                                                        }else{
                                                            $(e.container).css("display",'inline-block')
                                                        }
                                                     }
    
                                                },
                                                click:function(e){
                                                    
                                                    if($(e.sender).prop("checked")){
                                                        $(e.sender).prop("checked",true)
                                                    }else{
                                                        $(e.sender).prop("checked",false)
                                                    }
                                                    var allLength = $('.searchResultCheckbox').length
                                                    var disabledLength = $('.searchResultCheckbox:disabled').length
                                                    var checkedLength =$('.searchResultCheckbox:checked').length
                                                    if(allLength===disabledLength+checkedLength){
                                                        $('.checkboxAll').prop("checked",true)
                                                    }else{
                                                        $('.checkboxAll').prop("checked",false)
                                                    }
                                                }
                                            },
                                            {
                                                e:"item-handle",
                                                t:[
                                                    {
                                                        if:function(e){
                                                            var listItemEle =$(e.container).parents('list-item')
                                                            appealType = listItemEle.data('appeal')
                                                            if(listItemEle.data('type')==='他人认领'){
                                                                if(!appealType){
                                                                    return 'true'
                                                                }else if(appealType==='已取消'){
                                                                    return 'true'
                                                                }else{
                                                                    return
                                                                }
                                                            
                                                            }
                                                        },
                                                        then:{
                                                            
                                                            e:"wf-button",
                                                           
                                                            t:'申诉',
                                                            // t:function(e){
                                                               
                                                            //     var listItemEle =$(e.container).parents('list-item')
                                                            //     appealType = listItemEle.data('appeal')
                                                            //     if(appealType==='已取消'){
                                                            //         return '重新申诉'
                                                            //     }else{
                                                            //         return '申诉'
                                                            //     }

                                                            // },
                                                            click:function(e){
                                                                var listItemEle =$(e.sender).parents('list-item')
                                                                appealType = listItemEle.data('appeal')
                                                                var container = $(e.sender).parents('list-con')
                                                                if(appealType!='已取消'){
                                                                    wf.appealMaterials(e,searchData, container,searchReqData)
                                                                }else{
                                                                   
                                                                    //请求重新申诉接口
                                                                    wf.http.post(
                                                                        wf.apiServer() + '/sns/achievement_appeal_query_resource',
                                                                        {
                                                                            resourceId:e.org_data.identifier[0].id
                                                                        },
                                                                        function(data) {
                                                                            //构造数据
                                                                            e.org_data=data
                                                                            wf.academic.renderEditAppealMaterials(e,searchData, container,searchReqData)
                                                                          
                                                                           
                                                                          
                                                                        },
                                                                        function(err){
                                                                            
                                                                            if((err.err_code === 40001) && (err.sub_msg =='缺少token令牌参数')){
                                                                                var url = wf.getRelativeUrl()
                                                                                window.location.href =wf.oauthServer() + '/login?redirectUri=' + encodeURIComponent(url);
                                                                            }else{
                                                                                wf.error(err)
                                                                            }
                                                                        }
                                                                    )
                                                                }
                                                            }
                                                        },
                                                        

                                                    },
                                                    {
                                                        if:function(e){
                                                            var listItemEle =$(e.container).parents('list-item')
                                                            appealType = listItemEle.data('appeal')

                                                            if(appealType && (listItemEle.data('type')==='他人认领' )){
                                                                if(appealType!="已取消"){
                                                                    return 'true'
                                                                }
                                                                
                                                            }
                                                        },
                                                        then:{
                                                            e:'item-appeal',
                                                            t:function(e){
                                                                var listItemEle =$(e.container).parents('list-item')
                                                                appealType = listItemEle.data('appeal')
                                                                return appealType 
                                                            }
                                                           

                                                        }
                                                    }
                                                    
                                                
                                                ]
                                            }
                                        ]

                                    },
                                    {
                                        e:"list-item-con-right",
                                        t:[
                                            {
                                                e:"list-item-title",
                                                t:[
                                                    {
                                                        e:"item-title-con",
                                                        a:{
                                                            'data-textdoi':function(e){
                                                                return e.data.identifier[0].text
        
                                                            },
                                                            'data-uri':function(e){
                                                                return e.data.identifier[0].url
                                                            }
                                                        },
                                                        t:[
                                                            {
                                                                e:'item-status',
                                                                a:{
                    
                                                                },
                                                                t:function(e){
                                                                    var listItemEle = $(e.container).parents('list-item')
                                                                    var newType = listItemEle.data('type')
                                                                    return newType
                    
                                                                },
                                                               
                                                            },
                                                            function(e){
                                                                var titles =  e.data.title
                                                                console.log('sssss',e.data)
                                                                $.each(titles,function(i,item){
                                                                    if(item.lang=='zh'){
                                                                       $(e.container).render({
                                                                           data:item,
                                                                           template:{
                                                                            e:'item-title-zh',
                                                                            t:"[[text]]",
                                                                            click:function(e){
                                         
                                                                            }
                                         
                                                                          }
                                                                       }) 
                                                                    }else if(item.lang=='en'){
                                                                        $(e.container).render({
                                                                            data:item,
                                                                            template:{
                                                                             e:'item-title-en',
                                                                             t:"[[text]]",
                                                                            
                                          
                                                                           }
                                                                        })
                
                                                                    }
                                                                    else{
                                                                        $(e.container).render({
                                                                            data:item,
                                                                            template:{
                                                                             e:'item-title-zh',
                                                                             t:"[[text]]",
                                                                            
                                          
                                                                           }
                                                                        })
                                                                    }
                
                                                                })
                                                               
                
                                                            }
                                                            
                                                        ],
                                                        click:function(e){
                                                            var textDoi =  $(e.sender).data('textdoi')
                                                            var sort=$(e.sender).attr("data-uri")

                                                            if(sort.slice(15, 21)==='thesis'){
                                                                var url= wf.wfPubServer()+'/thesis/article:'+ encodeURIComponent(textDoi)
                                                                
                                                                window.open(url)
                                                               }
                                                               else{
                                                                var url= wf.wfPubServer()+'/perios/article:'+ encodeURIComponent(textDoi)
                                                               
                                                                window.open(url)
                                                               }
                                                            
                                                            // if(hits[0].JMETA.type[0]){
                                                            //     if(hits[0].JMETA.type[0]==='期刊论文'){
                                                            //         var url= wf.wfPubServer()+'/perios/article:'+ encodeURIComponent(textDoi)
                                                            //         // window.open(url)
                                                            //        }
                                                            //        else{
                                                            //         var url= wf.wfPubServer()+'/thesis/article:'+ encodeURIComponent(textDoi)
                                                            //         // window.open(url)
                                                            //        }
                                                            // }
                                                         }
                                                    },
                                                  
                                                   
                                                   
                                                
                                                ]
                    
                                            },
                                            
                                            {
                                                e:'list-item-more-info',
                                                t:[
                                                    {
                                                        e:"item-other",
                                                      
                                                        class:'clearfloat',
                    
                                                        t:[
                                                            {
                                                                e:"item-Source",
                                                              
                                                                
                                                                t:{
                                                                    e:"a",
                                                                    a:{
                                                                        href:function(e){
                                                                            var url
                                                                            var newUrl
                                                                            $.each(e.data,function(i,item){
                                                                                console.log('222',e.data.identifier[0].url.slice(15, 21))
                                                                                if(e.data.identifier[0].url.slice(15, 21)==='perios'){
                                                                                    $.each(e.data.contributor,function(i,item){
                                                                                        if(item.type =='perioInfo'){
                                                                                            url =  item.id
                                                                                        return false
                                                                                        }
                                                                                    })
                                                                                     newUrl =  wf.wfPubServer()+'/perios/qcode:'+ url
                                                                                    return  newUrl
                                                                                }
                                                                                else{
                                                                                    $.each(e.data.creator,function(i,item){
                                                                                        
                                                                                            url =  item.application
                                                                                        return false
                                                                                    })
                                                                                     newUrl =  wf.wfPubServer()+'/thesis/unit:'+ url
                                                                                    return  newUrl
                                                                                }
                                                                            })
                                                                            return  newUrl

                                                                        }
                                                                    },
                                                                    t:function(e){
                                                                       var name
                                                                       $.each(e.data,function(i,item){
                                                                        if(e.data.identifier[0].url.slice(15, 21)==='perios'){
                                                                            $.each(e.data.contributor,function(i,item){
                                                                                if(item.type =='perioInfo'){
                                                                                    name =  '(期刊)'+item.name
                                                                                    return false
                                                                                    }
                                                                            })
                                                                            return  name
                                                                        }
                                                                        else{
                                                                            $.each(e.data.creator,function(i,item){
                                                                                    name =  '(学位)'+item.application
                                                                                    return false
                                                                            })
                                                                            return  name
                                                                        }
                                                                    })
                                                                    return  name
                                                                    //    $.each(e.data.contributor,function(i,item){
                                                                    //        if(item.type =='perioInfo'){
                                                                    //            name =  item.name
                                                                    //           return false
                                                                    //        }
                                                                    //    })
                                                                    //    return  name 
            
                                                                    },
                                                                   
                                                                },
                    
                                                            },
                                                            
                                                            {
                                                                e:"item-volume",
                
                                                                t:function(e){
                                                                    
                                                                    var year = e.data.publisher[0].year
                                                                    var issue = e.data.publisher[0].issue
                                                                    if(issue!=='' && issue!== undefined ){
                                                                        return  year+'年'+issue+'期'
                                                                    }else{
                                                                        return  year+'年'
                                                                    }
                                                                 
                                                                    
                                                                  
                
                                                                }
                                                            }
                    
                                                        ]
                    
                    
                    
                                                    },
                                                    {
                                                        if:function(e){
                                                            return e.data.creator.length>0 ? true :false
                                                        },
                                                        then:{
                                                            e:"item-author",
                                                            t:[
                                                                {
                                                                  e:"item-author-title",
                                                                  t:'作者：'
                                                                },
                                                                {
                                                                    if:function(e){
                                                                        if(e.data.creator.length>0){
                                                                            return true
                                                                        }
                                                                        
                    
                                                                    },
                                                                    then:{
                                                                        e:'item-author-name',
                                                                        datapath:'creator',
                                                                        t:[
                                                                            {
                                                                                e:'wf-span',
                                                                                t:'[[name]]'+'&nbsp;'
                                                                            }
                                                                               
                                                                           
                            
                                                                        ]
                                                                    }
                                                                   
                                                                }
                                                               
                        
                        
                                                            ]
                                                        }
                                                       
                                                    }
                                                ]
                    
                    
                                            }
                                        ]
                                    }
                                   
                                   
                                   
            
                                ]
                            },
                         }
                        
                      
                        
    
                    }
    
                ]
            })
    
          
    }
    function claimAdd(e){
       console.log(1111)
        var reqData = {
           
            url:wf.apiServer() + '/sns/achievement/claim/add',
            // url:"http://localhost:80/achievement/claim/add",
            data:{
                
            }
        }
        var JMETASub =[]
       
        $.each(e.new_data.searchResultCheckbox,function(i,item){
            
            var newItem = JSON.parse(item)
            
            JMETASub.push({
                JMETA:newItem
            })
        })
      
        reqData.data = JMETASub
        wf.http.post(reqData,
            function(data) {
                if(data.code !==200){
                    dialog.fail(data.message)
                }else{
                    dialog.success('认领成功,在我的成果查看详情！')
                    var container = $(e.sender).parents('handle-con').siblings('list-con')
                    $(".checkboxAll").prop("checked",false)
                    searchData(container,searchReqData)
                    
                }
            },
            function(err) {
                wf.error(err)
            }
        )
    }
    function page(element) {
       
        var renderContainer = $(element).siblings('list-con')
        var renderReq =  searchReqData.data
        var renderData = {
            container:renderContainer,
            reqUrl:searchReqData.url,
            reqData:renderReq

        }
        wf.page(element,pageInfo,renderData,searchData)
        // if(pageInfo.maxPage>1){
        //     $(element).empty().render({
        //         data: pageInfo,
        //         template: [
        //             {
        //                 e: 'wf-button',
        //                 t: '首页',
        //                 click: function (e) {
        //                     searchReqData.data.page ='1'
                            
        //                     var container = $(e.sender).parents('wf-page').siblings('list-con')
        //                     searchData(container,searchReqData)
                            
        //                 }
        //             },
        //             {
        //                 if:function(e){
        //                     if((pageInfo.page-1) >0){
        //                         return 'true'
        //                     }
        //                 },
        //                 then:{
        //                     e: 'wf-button',
        //                     t: '上一页',
        //                     a: {
        //                     },
        //                     click: function (e) {
        //                         searchReqData.data.page = (pageInfo.page-1)+''
        //                         var container = $(e.sender).parents('wf-page').siblings('list-con')
        //                         searchData(container,searchReqData)
                                
        //                     }
        //                 },
        //             },
        //             {
        //                 if:function(e){
        //                     if((pageInfo.page+1) <pageInfo.maxPage){
        //                         return 'true'
        //                     }
        //                 },
        //                 then:{
        //                     e: 'wf-button',
        //                     t: '下一页',
        //                     a: {},
        //                     click: function (e) {
        //                         // if((pageInfo.page+1) <pageInfo.maxPage){
                                   
                                   
        //                         // }else{
        //                         //     searchReqData.data.page = pageInfo.maxPage
        //                         // }
        //                         searchReqData.data.page = (pageInfo.page+1) +''
        //                         var container = $(e.sender).parents('wf-page').siblings('list-con')
        //                         searchData(container,searchReqData)
        //                     }
        //                 },
        //             },
        //             {
        //                 e: 'wf-button',
        //                 t: '尾页',
        //                 a: {},
        //                 click: function (e) { 
        //                     searchReqData.data.page =(pageInfo.maxPage) +''
                            
        //                     var container = $(e.sender).parents('wf-page').siblings('list-con')
        //                     searchData(container,searchReqData)
        //                 }
        //             },
        //             {
        //                 e: 'wf-span',
        //                 t: '[[page]]/[[maxPage]]'
        //             }, {
        //                 e: 'input',
        //                 t: '',
        //                 a:{
        //                     placeholder:'请输入页数'
        //                 }
        //             },
        //             {
        //                 e: 'wf-button',
        //                 t: '跳转',
        //                 click: function (e) {
        //                      var page = $(e.sender).prev().val(); 
        //                      searchReqData.data.page = page +''
        //                      var container = $(e.sender).parents('wf-page').siblings('list-con')
        //                      searchData(container,searchReqData)
        //                 }
        //             }
        
        //         ]
        //     })
        // }
        
       
    }
}

//  jsbuilder/wf/academic/wf.academic.userResults.js

wf.academic.userResults = function (element){
   
    var curPage = 1
    var pageCount =1
    var req ={}
    // wf.pub的客观页
    var nickname = $(element).attr('nickname')
    // 老社区的客观页
    var unionId = $(element).attr('union_id')
    if (nickname) {
        req.nickname = nickname
    }
    if (unionId) {
        req.unionId = unionId
    }
    $(element).empty().render({
        data:{},
        template:{
            e:"academic-container",
            t:{
                e:'search-claim',
                t:[
                    {
                        e:"list-con",
                        class:'myClaim',
                        t:function(e){
                            req.page =1;
                            req.pageSize = 5;
                            getClaimData($(e.container),req)
                        }
                    },
                    {
                        e:"wf-page"
                    },
                
                
                ]
            }
           


        }
    })



function getClaimData(container,reqData){
    wf.http.post(
        wf.apiServer() + '/sns/achievement_claim_list_user',
        reqData,
        function(data) {
            if(data.code===200){
                if(data.achievement){
                    if(data.achievement.length>0){
                        wf.academic.renderAcademic(container,data)
                        var pageEle = $(container).siblings('wf-page')
                       
                        pageCount = data.pageCount
                        curPage= data.page
                      
                        if(parseInt(pageCount)>1){
                            pageFun(pageEle)
                            pageEle.show()
                        }
                        
                       
                    }else{
                        container.empty().render({
                            data:{},
                            template:{
                                e:"wf-p",
                                t:'暂无数据！'
                            }
                        })
                    }
                }
            }
          
           
          
        },
        function(err){
            
            if((err.err_code === 40001) && (err.sub_msg =='缺少token令牌参数')){
                var url = wf.getRelativeUrl()
                window.location.href =wf.oauthServer() + '/login?redirectUri=' + encodeURIComponent(url);
            }else{
                wf.error(err)
            }
        }
    )
}

    function pageFun(element) {
    
        
        if(pageCount>1){
            var renderContainer = $(element).siblings('list-con')
            var renderData = {
                container:renderContainer,
                reqData:req
            }
           
        
            var pageInfo ={
                page:curPage,
                maxPage:pageCount
            }
            wf.page(element,pageInfo,renderData,getClaimData)
        }
    }
}

//  jsbuilder/wf/academic/wf.appealMaterials.js

wf.appealMaterials = function(e,searchData,container,searchReqData){
    var resourceId = e.org_data.identifier[0].id
    var textDoi  = e.org_data.identifier[0].text
    var title = ''
    $.each( e.org_data.title,function(i,item){
        title += item.text
    })
    var new_multipart_params ={
        resourceId :resourceId,
    }
    poplayer({
        header: '申诉',
        class:'appeal_materials',
        template: {
            e: 'appeal-materials-con',
            t: [
                {
                    e: 'textarea',
                    name: 'appeal_description',
                    a: {
                        'placeholder': '请输入申诉理由'
                    },
                },
                {
                    e:"wf-handle",
                    t:[
                        {
                            e:'input',
                            a:{
                                type:"file",
                                name:"files",
                                multiple:"multiple",
                                accept:"*/*",
                                class:'appeal_input'
                            },
                            style:{
                                display:'none'
                            }
                            
                        },
                        {
                            e:"appeal_con",
                            t:[
                                {
                                    e:'wf-span',
                                    t:'请上传能证明此篇论文为您的证明材料'
                                },
                                {
                                    e:"wf-button",
                                    t:'上传',
                                    click:function(e){
                                       
                                        var appealInputEle =  $(e.sender).parents("appeal_con").siblings('.appeal_input')
                                        appealInputEle.click()
                                        
                                        appealInputEle.fileupload({
                                            //支持拖拽上传
                                            // dropZone: $(p.container).find('.image-dropzone'),
                                            'url': wf.snsServer() + '/achievement/appeal/materials',
                                            xhrFields: {
                                                withCredentials: true
                                            },
                                            //按顺序上传
                                            sequentialUploads: true,
                                            //多个文件一起上传
                                            singleFileUploads: false,
                                            add: function(event, data) {
                                                
                                                var progressCon = $(event.target).closest('wf-handle').siblings('wf-materials-progress')
                                                progressCon.empty().render(
                                                    [
                                                        {
                                                        e: 'h4',
                                                        class: 'upload-schedule',
                                                        t: [
                                                            { 'wf-p': '正在上传...' },
                                                            {
                                                                e: "upload-progress",
                                                                t: [
                                                                    {
                                                                        e: "upload-progress-ing",
                                                                    },
                                                                    {
                                                                        e: "upload-progress-init",
                                                                    },
                                                                ]
                                                            }
                                                        ]
                                                    }])
                                                data.submit()
                                                
                                            },
                                            submit: function(event, data) {
                                               
                                                data.url = wf.snsServer() + '/achievement/appeal/materials'
                                                data.formData = new_multipart_params;
                                            },
                                            progressall: function(event, data) {
                                                var progressCon = $(event.target).closest('wf-handle').siblings('wf-materials-progress')
                                                var progress = parseInt(data.loaded / data.total * 100, 10)
                                                progressCon.find('.upload-schedule upload-progress-ing').css('width', progress + '%')
                                                progressCon.find('.upload-schedule wf-p').text('正在上传中，已上传：' + progress + '%')
                            
                                            },
                                            done: function(event, data) {
                                              
                                                // 整理数据
                                               
                                                if(data.result.code==200){
                                                    
                                                    var materialsCon =  $(event.target).closest('wf-handle').siblings('wf-materials-con')
                                                    $.each(data.result.fileList,function(i,item){
                                                        var itemArr = item.name.split('/')
                                                        var localName = itemArr[itemArr.length-1]
                                                        item.localName = localName
                                                        $("item-materials item-name").each(function(j,jtem){
                                                            var name= $(jtem).text()
                                                           
                                                            if(name===item.localName){
                                                                item.isRepeat = 'true'
                                                              }
                                                         })
                                                        
                                                    })
                                                  
                                                    $(materialsCon).render({
                                                        data:data.result.fileList,
                                                        template:[
                                                            {
                                                                e:"item-materials",
                                                                a:{
                                                                    id:"[[name]]"
                                                                },
                                                                style:{
                                                                    display:'block',
                                                                    'text-align':'left'
                                                                },
                                                                t:[
                                                                    {
                                                                        e:"item-name",
                                                                        
                                                                        t:'[[localName]]'
                                                                    },
                                                                    {
                                                                        if:function(e){
                                                                            if(e.data.isRepeat){
                                                                                return 'true'
                                                                            }
        
                                                                        },
                                                                        then:{
                                                                            e:"item-repeat",
                                                                            t:'！重复提交'
                                                                        }
                                                                       
                                                                    },
                                                                    {
                                                                        e:"wf-button",
                                                                        t:"删除",
                                                                        click:function(e){
                                                                           
                                                                            $(e.sender).closest('item-materials').remove()
             
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    })
                                                }else{
                                                    
                                                }
                                                
                                            }
                                        })
                                    }
                                },
                            ]

                        },
                    
                       
                    ]

                },
                {
                    e:"wf-materials-progress",
                    class:'wf_materials_progress',
                   
                },
                {
                    e:"wf-materials-con",
                    class:'wf_materials_con',
                    
                    t:[
                       

                    ]
                },
                {
                    e:"wf-materials-submit",
                    t:'提交',
                    click: function (e) {
                       
                        var req = {
                            title:title,
                            resourceId:resourceId,
                            description:e.new_data.appeal_description,
                            textDoi:textDoi


                        }
                        var fileIds =[]
                        $('item-materials').each(function(i,item){
                            fileIds.push($(item).attr("id"))
                        })
                        req.fileIds=fileIds

                        wf.http.post(
                            wf.snsServer() + '/achievement/appeal', req,
                            function(res) {
                                if(res.code == '200'){
                                    $(e.sender).closest('popmask').remove()
                                    dialog.success(res.message)
                                    // 刷新页面
                                    searchData(container,searchReqData)
                                   
                                }else{
                                    dialog.fail(res.message)
                                }
                               
                                
                            },
                            function(err){
                                wf.error(err)

                            }
                        )
                    }
                }
                
               
            ]
        }
    })
   
   

}

//  jsbuilder/wf/acc/wf.acc.js

wf.acc = function(container) {
    /*
        定义标签下的所有可用视图。
        格式：
            视图名：渲染函数。
        使用方式：
            添加html标签，格式为
            <wf-acc view='[视图名]'></wf-acc>
        */
    var views = {
        //couponlist模块 要求data-* appid：应用id，必填  url：显示去使用按钮 点击跳转至url，不填则显示已领取
        couponlist: wf.acc.couponlist
    };

    $(function() {
        $("wf-acc", container).each(function(i, element) {
            var result = $(element).attr("render");
            if (!result) {
                var view = element.getAttribute("view") || element.getAttribute("data-view");
                var _emit = element.getAttribute("emit");
                if (views[view]) views[view](element, _emit);
                else console.log("render of view[".concat(view, "] not found!"));
                $(element).attr("render","true");
            }
        });
    });
};

//  jsbuilder/wf/acc/modules/wf.acc.couponModule.js

// couponMoudle({
//     appId: 获取券表关键参数,当前appid所属优惠券（数字，非必填）,
//     container: 优惠券列表渲染容器（必填）,
//     cb: 成功领取该优惠券后回调函数（必填）,
//     url: 是否显示去使用按钮（非必填， 默认为领取成功后显示已领取，填url为领取成功后跳转至url）
// });

var couponMoudle = function(data) {
    var openTime = new Date().toLocaleString("zh", { hour12: false, hourCycle: "h23" });
    var url = data.url;

    function renderCouponList() {
        new Promise(function(resolve, reject) {
                wf.http.post(
                    wf.apiServer() + "/acs/acs_coupon_rule_show", {
                        appId: data.appId,
                        openTime: openTime
                    },
                    function(res) {
                        res.dlist = res.dlist.filter(function(item) { return !(item.used > 0); });
                        resolve(res);
                    },
                    function(error) {
                        reject(error);
                    }
                );
            })
            .then(function(result) {
                $(data.container)
                    .empty()
                    .render({
                        data: result,
                        template: [{
                            e: "ul",
                            a: {
                                class: "couponList"
                            },
                            t: {
                                e: "li",
                                a: {
                                    class: "couponBox"
                                },
                                datapath: "dlist",
                                t: [{
                                        e: "div",
                                        a: {
                                            class: "couponInfo"
                                        },
                                        t: [{
                                                e: "p",
                                                a: {
                                                    class: "info_title",
                                                    title: "[[package]]"
                                                },
                                                t: [
                                                    "<i>折扣券</i>",
                                                    {
                                                        if: function(p) {
                                                            if (p.data.package) {
                                                                return true;
                                                            } else {
                                                                return false;
                                                            }
                                                        },
                                                        then: {
                                                            e: "span",
                                                            t: function(r) {
                                                                $(r.container).text('适用于'.concat(r.data.package));
                                                            }
                                                        },
                                                        else: {
                                                            e: "span",
                                                            t: "适用于个人套餐"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                e: "p",
                                                a: {
                                                    class: "info_period"
                                                },
                                                t: function(r) {
                                                    var norTime = function(input) {
                                                        input = input && input.replace(/-|\//g, ".");
                                                        return input;
                                                    };
                                                    $(r.container).text(norTime(r.data.startDate).concat('-').concat(norTime(r.data.endDate)));
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        e: "div",
                                        a: {
                                            class: "op"
                                        },
                                        t: [{
                                                e: "div",
                                                a: {
                                                    class: "offtip"
                                                },
                                                t: function(r) {
                                                    $(r.container).text((Math.round(r.data.jdata.ratio * 1000) / 100) + '折');
                                                }
                                            },
                                            {
                                                if: function(p) {
                                                    return !p.data.collected;
                                                },
                                                then: {
                                                    if: function(p) {
                                                        return !p.data.remain;
                                                    },
                                                    then: { div: "已领完" },
                                                    else: {
                                                        e: "div",
                                                        a: {
                                                            class: "pickbtn"
                                                        },
                                                        t: "立即领取",
                                                        click: function(r) {
                                                            Object.prototype.toString.call(data.cb) === "[object Function]" ?
                                                                data.cb(couponGet(r.org_data, r.sender)) :
                                                                alert("回调函数不能为空！");
                                                        }
                                                    }
                                                },
                                                else: {
                                                    if: function(p) {
                                                        return p.data.used
                                                    },
                                                    then: {
                                                        div: "已使用"
                                                    },
                                                    else: {
                                                        if: function() {
                                                            return url;
                                                        },
                                                        then: {
                                                            e: "div",
                                                            a: {
                                                                class: "pickbtn"
                                                            },
                                                            t: "去使用",
                                                            click: function(r) {
                                                                window.location.href =
                                                                    wf.accServer().concat(
                                                                        "/pay/v2/acsentry?appid=",
                                                                        encodeURIComponent(data.appId),
                                                                        "&return_url=",
                                                                        encodeURIComponent(url)
                                                                    )
                                                            }
                                                        },
                                                        else: {
                                                            div: "已领取"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    function(r) {
                                        //判断当前优惠券是否存在自动领取隐藏条件； 0展示/1隐藏
                                        if (r.data.visible) {
                                            $(r.container).remove();
                                        }
                                    }
                                ]
                            }
                        }]
                    });
            })
            .catch(function(error) {
                console.log(error);
            });
    }

    //优惠券领取
    function couponGet(org_data, element) {
        return new Promise(function(resolve, reject) {
            var _data = org_data;
            _data.channel = "站内应用";
            wf.http.post(
                wf.apiServer() + "/acs/acs_coupon_get",
                _data,
                function(result) {
                    if (result.code) {
                        reject({
                            status: 99,
                            message: result.msg
                        });
                    } else {
                        resolve({
                            status: 0,
                            message: result
                        });
                        if (url) {
                            $(element)
                                .removeClass("pickbtn")
                                .empty()
                                .render({
                                    template: {
                                        e: "form",
                                        style: {
                                            display: "inline-block"
                                        },
                                        a: {
                                            // action: wf.accServer() + "/acspayentry",
                                            // method: "post"
                                        },
                                        t: [{
                                                e: "input",
                                                a: {
                                                    type: "hidden",
                                                    name: "appDetails",
                                                    value: data.appId
                                                }
                                            },
                                            {
                                                e: "input",
                                                a: {
                                                    type: "hidden",
                                                    name: "return_url",
                                                    value: url
                                                }
                                            },
                                            {
                                                e: "input",
                                                style: {
                                                    height: "initial"
                                                },
                                                a: {
                                                    class: "pickbtn",
                                                    type: "button",
                                                    value: "去使用"
                                                },
                                                click: function(r) {
                                                    window.location.href =
                                                        wf.accServer().concat(
                                                            "/pay/v2/acsentry?appid=",
                                                            encodeURIComponent(data.appId),
                                                            "&return_url=",
                                                            encodeURIComponent(url)
                                                        )
                                                    window.event.stopPropagation();
                                                    //$(r.sender).parents("form").submit();
                                                }
                                            }
                                        ]
                                    }
                                });
                        } else {
                            $(element)
                                .removeClass("pickbtn")
                                .empty()
                                .render({
                                    template: {
                                        div: "已领取",
                                        click: function(r) {
                                            window.event.stopPropagation();
                                        }
                                    }
                                });
                        }
                    }
                },
                function(e) {
                    reject({
                        status: 99,
                        message: e
                    });
                }
            );
        });
    }
    renderCouponList();

};


//  jsbuilder/wf/acc/modules/wf.acc.couponlist.js

wf.acc.couponlist = function(element, emit) {
    var appId = element.getAttribute("data-appid");
    var url = element.getAttribute("data-url");
    var couponData = {
        appId: appId,
        url: url,
        container: element,
        cb: function(pres) {
            pres.then(
                function(res) {
                    var validDay = res.message.jdata && res.message.jdata.validDay;
                    dialog.success(validDay ? "领取成功！\n请在".concat(validDay, "天内使用") : "领取成功！");
                    if (emit) {
                        wf.emit[emit] && wf.emit[emit](res);
                    }
                },
                function(err) {
                    if (emit) {
                        wf.emit[emit] && wf.emit[emit](res);
                    }
                    if (!wf.cookie.get("uid")) {
                        // window.location.href = wf.wfPubServer().concat("/login?redirectUri=").concat(encodeURIComponent("/".concat(url.split("/").slice(3).join("/"))));
                        window.location.href = wf.wfPubServer().concat("/login?redirectUri=").concat(encodeURIComponent(url));
                    } else {
                        dialog.fail(err.message.err_message);
                        console.log(err);
                    }
                }
            );
        }
    };
    couponMoudle(couponData);
};

//  jsbuilder/wf/acc/modules/wf.acc.packagelist.js

wf.acc.packagelist = function(element) {
    $(element).render({
        template: [{
                e: 'message-list',
                class: 'message-list',
                t: function(e) {
                    var messageListEle = $(e.container)

                    loaddata(messageListEle)

                }

            },

        ]
    })

}

//  jsbuilder/wf/acc/workorderCreator/wf.acc.workorderCreator.js

wf.acc.workorderCreator = function(param) {
    poplayer({
        header: '新建工单', // e.org_data.caseType,
        width: '600px',
        height: '600px',
        template: [{
            form: [{
                    fieldset: [
                        { legend: '申请类型' },
                        {
                            e: 'label',
                            t: param.docType
                        }
                    ]
                },
                {
                    fieldset: [{ legend: '申请信息' }, {
                        e: 'div',
                        id: 'apply-body',
                        t: function(e) {
                            var p = {
                                container: $('#apply-body'),
                                data: {
                                    docType: param.docType
                                }
                            };
                            wf.workOrder.creator.option(p);
                        }
                    }]
                },
                {
                    footerbar: [
                        { button: '确定', click: submit },
                        {
                            button: '取消',
                            click: function(e) {
                                $(e.sender).closest('popmask').remove();
                            }
                        }
                    ]
                }
            ],
            id: 'form_create'
        }]
    });

    function submit(ebtn) {
        var data = $('#form_create').serializeObject();
        wf.http.post('/api/order_create', data, function(resData, response) {
            if (!response.code && !response.err_code) {
                // 社区私信通知
                wf.workOrder.common.notice(resData);
                wf.workOrder.common.email(resData);
                // 短信通知
                // wf.workOrder.common.SMSSend({ caseId: e.org_data.caseId, caseType: e.org_data.caseType, mobile: e.org_data.contact, opinion: data.opinion });
                alert('工单提交成功!');
                $(ebtn.sender).closest('popmask').remove();
                var p = {
                    container: $('workorder-body')[0],
                    data: {
                        docType: $("[name='doctype']").val(),
                        status: $("[name='status']").val(),
                        result: $("[name='result']").val()
                    }
                };
                if (behavior === 'organization' && returnUrl) {
                    window.location.href = returnUrl;
                }
                if ($('wf-workorder').attr('view') == 'admin') {
                    wf.workOrder.admin.orderRender(p);
                    wf.workOrder.admin.orderDetail(e);
                } else if ($('wf-workorder').attr('view') == 'user') {
                    wf.workOrder.user.orderRender(p);
                    wf.workOrder.user.orderDetail(e);
                }
            } else {
                alert('订单信息提交失败,' + (!!response.sqlMessage ? response.sqlMessage : response.err_message));
                $(ebtn.sender).closest('popmask').remove();
            }
        });
    }

    wf.acc.workorderCreator.option = function(e) {
        var docType = e.data.docType;
        switch (e.data.docType) {
            case '机构购买申请单':
                $(e.container).parent().render({
                    data: e.data,
                    template: [
                        { span: '机构名称' },
                        { input: 'name', id: 'name', a: { type: 'text' } },
                        '<br />',
                        { span: '证件类型' },
                        { input: 'IDType', id: 'IDType', a: { type: 'text' } },
                        '<br />', // 营业执照、税务登记证、组织机构代码证
                        { span: '证件号码' },
                        { input: 'IDNo', id: 'IDNo', a: { type: 'text' } },
                        '<br />',
                        { span: '地址' },
                        { input: 'address', id: 'address', a: { type: 'text' } },
                        '<br />',
                        { span: '联系方式' },
                        { input: 'contract', id: 'contract', a: { type: 'text' } },
                        '<br />',
                        { span: '说明备注' },
                        '<br />',
                        { textarea: 'memo' }
                    ]
                });
                break;
            default:
                break;
        }


    };
}

//  jsbuilder/wf/acc/workorderCreator/modules/wf.acc.workorderCreator.customerIP.js

wf.acc.workorderCreator.customerIP = function(param) {
    var limit = 2;
    // 本机IP
    var hostIp;
    $.getScript('https://pv.sohu.com/cityjson?ie=utf-8', function(data) {
        //localIP = returnCitySN["cip"];
        hostIp = returnCitySN.cip;
    });
    // 加载购买列表
    wf.http.post(wf.apiServer() + '/acs/acs_customer_info', {},
        function(data) {
            if (data.res && data.res.level) {
                if (data.res.level == 1) {
                    limit = 8;
                } else if (data.res.level == 2) {
                    limit = 4;
                } else {
                    limit = 2;
                }

                poplayer({
                    header: '个人配置-机构IP配置', // e.org_data.caseType,
                    width: '600px',
                    height: '600px',
                    template: [{
                        form: [{
                                fieldset: [
                                    { legend: '类型' },
                                    {
                                        e: 'h3',
                                        t: "机构用户IP配置" // param.docType
                                    }
                                ]
                            }, {
                                div: function(param) {
                                    param.ips = data.ips;
                                    renderIpConfig(param);
                                },
                                class: 'ipConfigContainer'
                            },
                            {
                                e: 'div',
                                t: [{
                                        e: 'f1',
                                        t: [{
                                                label: '本机IP'
                                            },
                                            {
                                                e: 'span',
                                                t: hostIp
                                            }
                                        ]
                                    },
                                    {
                                        e: 'a',
                                        a: {
                                            href: 'javascript:;',
                                            title: '作为参考，本机IP只为其中一条链路的IP，若您的网络有多条IP链路，请视情况添加多个IP。'
                                        },
                                        t: '<svg t="1611738644479" class="icon" style="vertical-align:-3px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2063" width="16" height="16"><path d="M511.6 63.6c-247.4 0-448 200.6-448 448s200.6 448 448 448 448-200.6 448-448-200.6-448-448-448zM508.7 825c-36.5 0-66.1-29-66.1-64.8 0-35.7 29.6-64.8 66.1-64.8 36.5 0 66.1 29.1 66.1 64.8 0 35.9-29.5 64.8-66.1 64.8z m177.5-366.5c-13 20.4-40.4 48.1-82.7 83.2-21.8 18.2-35.5 32.8-40.7 43.9-5.2 11-7.7 30.8-7.2 59.3h-94.1l-0.4-24.7c0-30.5 5-55.6 15.1-75.2s30.3-41.8 60.5-66.3c30.1-24.6 48.3-40.7 54.1-48.3 9.1-12 13.7-25.3 13.7-39.7 0-20.1-8.1-37.3-24.2-51.7-16.1-14.3-37.9-21.5-65.2-21.5-26.4 0-48.4 7.5-66.1 22.4-17.7 15-33 47.9-36.5 68.3-3.4 19.3-96.2 27.4-95-11.6 1.1-39 21.4-81.4 56.2-112.1 34.8-30.7 80.6-46.1 137.1-46.1 59.5 0 106.8 15.6 142.1 46.7 35.2 31 52.7 67.2 52.7 108.5 0 22.9-6.5 44.6-19.4 64.9z m0 0" p-id="2064" fill="#76a8e4"></path></svg>'
                                    }
                                ]
                            },
                            {
                                e: 'div',
                                class: 'popFooter',
                                t: [{
                                        e: 'button',
                                        t: '确定',
                                        click: function(e) {
                                            var ipConfigItem = $('.ipConfigItem');
                                            var ips = [];
                                            var ip, subnetMask;
                                            var flag = false;
                                            $.each(ipConfigItem, function(i, ele) {
                                                ip = $(ele).find("input[name='IP']").val();
                                                subnetMask = $(ele).find("input[name='subnetMask']").val();
                                                if (ip === '') {
                                                    flag = false;
                                                } else {
                                                    var ipObj = {
                                                        ip: ip,
                                                        subnetMask: subnetMask,
                                                        networkAddr: getNetworkBroadcastAddr(subnetMask, ip)[0]
                                                    };
                                                    ips.push(ipObj);
                                                    flag = true;
                                                }
                                            });
                                            if (flag) {
                                                wf.http.post(wf.apiServer() + '/acs/acs_customer_ip_config', { ips: ips },
                                                    function(data) {
                                                        alert("IP配置成功");
                                                        $(e.sender).closest('popmask').remove();
                                                    },
                                                    function(error) {
                                                        console.log(error);
                                                        alert(error.err_message);
                                                    }
                                                );
                                            } else {
                                                alert('IP地址不能为空！');
                                            }
                                        }
                                    },
                                    {
                                        e: 'button',
                                        t: '取消',
                                        click: function(e) {
                                            $(e.sender).closest('popmask').remove();
                                        }
                                    }
                                ]
                            }
                        ],
                        id: 'form_create'
                    }]
                });
            } else {
                alert("不是机构用户不能进行此操作");
            }
        },
        function(error) {
            console.log(error);
        }
    );


    // 渲染初始IP配置项
    function renderIpConfig(param) {
        if (param.ips && param.ips.length > 0) {
            $.each(param.ips, function(i, ele) {
                $(param.container).render({
                    data: ele,
                    template: {
                        div: [{
                                e: 'f1',
                                t: [{
                                        label: 'IP地址' + (i + 1) + ' *'
                                    },
                                    {
                                        e: 'input',
                                        a: {
                                            name: 'IP',
                                            value: '[[ip]]'
                                        }
                                    }
                                ]
                            },
                            {
                                e: 'f1',
                                t: [{
                                        label: '子网掩码'
                                    },
                                    {
                                        e: 'input',
                                        a: {
                                            name: 'subnetMask',
                                            value: '[[subnetMask]]'
                                        }
                                    }
                                ]
                            },
                            {
                                e: 'button',
                                t: '+',
                                style: {
                                    height: '16px',
                                    color: '#fff',
                                    width: '16px',
                                    padding: '0',
                                    'border-radius': '50%',
                                    'background-color': '#81c5ba',
                                    margin: '0 5px 0 0',
                                    cursor: 'pointer'
                                },
                                click: function() {
                                    if ($('.ipConfigItem').length + 1 <= limit) {
                                        renderIpConfigItem(param.container, 'sub');
                                    } else {
                                        alert('超出机构等级限制IP条目！');
                                    }
                                }
                            },
                            {
                                e: 'button',
                                t: '-',
                                style: {
                                    height: '16px',
                                    color: '#fff',
                                    width: '16px',
                                    padding: '0',
                                    'border-radius': '50%',
                                    'background-color': '#81c5ba',
                                    margin: '0 5px 0 0',
                                    cursor: 'pointer',
                                    'line-height': '14px'
                                },
                                click: function(param) {
                                    if ($('.ipConfigItem').length != 1) {
                                        $(param.sender).parent().remove();
                                    } else {
                                        alert('不能删除最后一条');
                                    }
                                }
                            }
                        ],
                        class: 'ipConfigItem'
                    }
                });
            });
        } else {
            renderIpConfigItem(param.container, 'add');
        }
    }

    // 渲染新加IP配置子项
    function renderIpConfigItem(container) {
        var num = $('.ipConfigItem').length;
        $(container).render({
            template: {
                div: [{
                        e: 'f1',
                        t: [{
                                label: 'IP地址' + (num + 1) + ' *'
                            },
                            {
                                e: 'input',
                                a: {
                                    name: 'IP'
                                }
                            }
                        ]
                    },
                    {
                        e: 'f1',
                        t: [{
                                label: '子网掩码'
                            },
                            {
                                e: 'input',
                                a: {
                                    name: 'subnetMask'
                                }
                            }
                        ]
                    },
                    {
                        e: 'button',
                        t: '+',
                        style: {
                            height: '16px',
                            color: '#fff',
                            width: '16px',
                            padding: '0',
                            'border-radius': '50%',
                            'background-color': '#81c5ba',
                            margin: '0 5px 0 0',
                            cursor: 'pointer'
                        },
                        click: function() {
                            if ($('.ipConfigItem').length + 1 <= limit) {
                                renderIpConfigItem(container, 'sub');
                            } else {
                                alert('超出机构等级限制IP条目！');
                            }
                        }
                    },
                    {
                        e: 'button',
                        t: '-',
                        style: {
                            height: '16px',
                            color: '#fff',
                            width: '16px',
                            padding: '0',
                            'border-radius': '50%',
                            'background-color': '#81c5ba',
                            margin: '0 5px 0 0',
                            cursor: 'pointer',
                            'line-height': '14px'
                        },
                        click: function(param) {
                            if ($('.ipConfigItem').length != 1) {
                                $(param.sender).parent().remove();
                            } else {
                                alert('不能删除最后一条');
                            }
                        }
                    }
                ],
                class: 'ipConfigItem'
            }
        });
    }

    /***　　把IP地址转换成二进制格式*　　@param string  ip  待转换的IP的地址*/
    function ipToBinary(ip) {
        if (ip_reg.test(ip)) {
            var ip_str = '',
                ip_arr = ip.split('.');

            for (var i = 0; i < 4; i++) {
                curr_num = ip_arr[i];
                number_bin = parseInt(curr_num);
                number_bin = number_bin.toString(2);
                count = 8 - number_bin.length;
                for (var j = 0; j < count; j++) {
                    number_bin = '0' + number_bin;
                }
                ip_str += number_bin;
            }
            return ip_str;
        }

        return '';
    }

    /***　　把二进制格式转换成IP地址*　　@param string  binary  待转换的二进制　　*/
    function binaryToIp(binary) {
        if (binary.length == 32) {
            a = parseInt(binary.substr(0, 8), 2);
            b = parseInt(binary.substr(8, 8), 2);
            c = parseInt(binary.substr(16, 8), 2);
            d = parseInt(binary.slice(-8), 2);

            return a + '.' + b + '.' + c + '.' + d;
        }
        return '';
    }
    // 验证IP的正则
    var ip_reg = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;

    // 验证子网掩码的正则
    var mask_reg = /^(254|252|248|240|224|192|128|0)\.0\.0\.0|255\.(254|252|248|240|224|192|128|0)\.0\.0|255\.255\.(254|252|248|240|224|192|128|0)\.0|255\.255\.255\.(254|252|248|240|224|192|128|0)$/;

    /***　　根据子网掩码和网关计算网络地址和广播地址*　　@param string  mask  子网掩码*　　@param string  gateway 网关*/
    function getNetworkBroadcastAddr(mask, ip) {
        var networkBroadcast = [];
        var networkAddr = '';

        var maskArr = mask.split('.');
        var ipArr = ip.split('.');

        // 计算IP的网络地址 与(&)运算
        if (mask === '') {
            networkBroadcast.push(ip);
        } else {
            for (var i = 0; i < 4; i++) {
                var number1 = parseInt(maskArr[i]);
                var number2 = parseInt(ipArr[i]);
                networkAddr += number1 & number2;
                if (i < 3) {
                    networkAddr += '.';
                }
            }
            networkBroadcast.push(networkAddr);
        }

        // 计算广播地址
        // 子掩码后面有几个0，就去掉IP地址后几位再补1
        var maskBinary = ipToBinary(mask);
        var gatewayBinary = ipToBinary(ip);

        var maskZero = maskBinary.split(0).length - 1;
        var oneNumber = new Array(maskZero + 1).join('1'); // IP地址后位补1
        var gatewayHouWeiBuYi = gatewayBinary.slice(0, -maskZero) + oneNumber;

        networkBroadcast.push(binaryToIp(gatewayHouWeiBuYi));

        return networkBroadcast;
    }

}

//  jsbuilder/wf/acsConformityResourcePackage/acsConformityResourcePackage.js

$.fn.extend({
    acsConformityResourcePackage: function () {
        // 个人中心
        $('wf-acs-conformity-resource-package', this).each(function (i, element) {
            var result = $(element).attr('render')
            if (!result) {
                renderResourcePackage(element)
                $(element).attr('render', 'true')
            }
        })


        function renderResourcePackage(element) {
            var returnUrl = $(element).attr('returnurl')//返回url
            render(element)

            function render(element) {
                $(element).empty().render({ //注意这里是element
                    data: {},
                    template: [
                        {
                            e: 'wf-acs-head',
                            t: [
                                {
                                    span: '个人用户专享套餐',
                                    style: {color: '#999', 'font-size': '16px'}
                                },
                                {
                                    div: {span: '用户须知'},
                                    class: 'user-notice',
                                    click: function (e) {
                                        window.open(wf.wfPubServer() + '/memberServiceAgreement', '_blank')
                                    }
                                },
                            ],
                            style: {
                                display: 'inline'
                            }
                        },
                        {
                            e: 'wf-acs-body',
                            style: {
                                'margin-top': '20px'
                            },
                            t: [
                                {
                                    e: 'wf-acs-package',
                                    a: {
                                        'returnUrl': returnUrl,
                                        'location': 'userCenter'
                                    }
                                },
                            ]
                        },
                    ]
                })
            }
        }
    }
})



//  jsbuilder/wf/acsPackage/acsPackage.js

$.fn.extend({
    acsPackage: function () {
        var searchPackageArray = ['periodical', 'thesis', 'patent', 'check']
        var userCenterPackageArray = ['periodical', 'thesis', 'patent', 'check']
        var packages = wf.development ?
            {
                'periodical': { 'appId': 1405, 'packageName': '期刊畅读卡' },
                'thesis': { 'appId': 1572, 'packageName': '学位畅读卡' },
                'patent': { 'appId': 1556, 'packageName': '专利畅读卡' },
                'check': { 'appId': 251, 'packageName': '文献检测优享版' }
            }
            :
            {
                'periodical': { 'appId': 6, 'packageName': '期刊畅读卡' },
                'thesis': { 'appId': 7, 'packageName': '学位畅读卡' },
                'patent': { 'appId': 661, 'packageName': '专利畅读卡' },
                'check': { 'appId': 627, 'packageName': '文献检测优享版' }
            }
        //此变量用于只渲染一次 因智搜加了两个标签 但现在只需要渲染一次
        // 下次智搜修改可删掉一个标签 同时删除此变量及其判断
        var render
        $('wf-acs-package', this).each(function (i, element) {
            if (render) {
                return
            }
            render = true
            var result = $(element).attr('render')
            if (result) {
                return
            }

            //智搜
            let location = $(element).attr('location')
            if (!location) {
                var verticalRow = $(element).attr('verticalRow')
                if (verticalRow == 1) {
                    location = 'detail'
                }
            }
            if (location) {
                renderAcsPackage(element, location)
            } else {
                renderOldPackage(element)
            }

            $(element).attr('render', 'true')
        })


        function renderAcsPackage(element, location) {
            var returnUrl = $(element).attr('returnUrl')
            if (!returnUrl) {
                $(element).attr('parentUrl')
            }
            switch (location) {

                case 'search':
                    var checkResult = checkOrgLogin();
                    if (checkResult) {
                        searchPackageArray = ["check"];
                    }
                    renderPackageByName(searchPackageArray)
                    $('.wfPubAcc .package-wrap').attr('style', 'border-width: 1px;border-color: rgb(238, 238, 238);border-style: solid;');
                    break
                case 'detail':
                    var checkResult = checkOrgLogin();
                    var packageType = $(element).attr('namecategory')
                    var packageArray = [packageType, 'check']
                    if (checkResult) {
                        packageArray = ["check"];
                    }
                    returnUrl = 'https://my.wanfangdata.com.cn/user/index';
                    renderPackageByName(packageArray)
                    $('.wfPubAcc .package-wrap').attr('style', 'margin-top: 20px;margin-bottom: 20px;')
                    break
                case 'userCenter':
                    var promise = queryContract()
                    promise.then(function (data) {
                        renderUserCenter(userCenterPackageArray, data)
                    })
                    break
            }

            //用户中心套餐包
            function renderUserCenter(packageArray, contractList) {
                $(element).empty().render({
                    template: {
                        class: 'package-wrap-row',
                        'div': {
                            foreach: packageArray,
                            t: {
                                'div': function (e) {
                                    renderUserCenterCard(e, contractList)
                                },
                            }
                        }
                    }
                })
            }

            //个人中心套餐卡片
            function renderUserCenterCard(e, contractList) {
                var appId = packages[e.data].appId
                var render
                var endDay
                for (let i = 0; i < contractList.length; i++) {
                    var item = contractList[i]
                    if (item.appId != appId) {
                        continue
                    }
                    var today = getFormatDate(new Date)
                    endDay = item.endDate
                    if (endDay >= today) {
                        buyInfo(item.package, endDay, e)
                        render = true
                        break
                    }
                }

                if (!render) {
                    renderCard(e)
                }
            }

            //已购买卡片
            function buyInfo(packageName, endDay, e) {

                $(e.container).render({
                    template: {
                        class: 'package-card-wrap',
                        'div': {
                            class: 'card-detail-wrap',
                            div: [{ span: '- ' + packageName + ' -', class: 'package-name' },
                            { span: '有效期至 ' + endDay, class: 'expire-time' },
                            {
                                if: e.data == 'check',
                                then: {
                                    span: '立即使用',
                                    class: 'use-button',
                                    click: function (e) {
                                        window.open('https://apps.wanfangdata.com.cn/check', '_blank')
                                    },
                                    style: {
                                        'margin-top': '5px',
                                        'color': '#0769f4fc',
                                        cursor: 'pointer'
                                    }
                                }
                            },

                            ]
                        }
                    }
                })
            }

            //渲染套餐
            function renderPackageByName(packageArray) {
                $(element).empty().render({
                    template: {
                        class: 'package-wrap',
                        'div': [
                            {
                                foreach: packageArray,
                                t: {
                                    'div': renderCard
                                }
                            },
                            { div: '开通阅读并同意', style: { 'font-size': '12px', 'margin-top': '20px' } },
                            {
                                span: '《万方数据会员(个人)服务协议》',
                                click: function (e) {
                                    window.open(wf.wfPubServer() + '/memberServiceAgreement', '_blank')
                                },
                                style: {
                                    'font-size': '12px',
                                    'margin-bottom': '20px',
                                    color: 'rgb(219, 117, 18)',
                                    cursor: 'pointer'
                                }
                            }
                        ]
                    }
                })
            }

            //渲染卡片
            function renderCard(e) {
                var appId = packages[e.data].appId

                var cardPromise = getAcsPackageList(appId);
                cardPromise.then(function (data) {
                    if (!data) {
                        return
                    }
                    //第一个肯定是价格最低的
                    let cardInfo = data[0];
                    $(e.container).render({
                        template: {
                            class: 'package-card-wrap cursor-pointer',
                            'div': [
                                {
                                    class: 'card-unit-wrap',
                                    div: [
                                        { span: cardInfo.unit + "卡", class: 'unit-text' },
                                        { span: '', class: 'arrow-1' },
                                        { span: '', class: 'arrow-2' }
                                    ]
                                },
                                {
                                    class: 'card-detail-wrap',
                                    div: [{ span: '- ' + cardInfo.package + ' -', class: 'package-name' },
                                    {
                                        class: 'card-detail-price',
                                        div: [
                                            { span: '¥', class: 'price-unit' },
                                            { span: cardInfo.price.toString(), class: 'price-text' }
                                        ]
                                    }
                                    ]
                                }
                            ],
                            click: function () {
                                var targetUrl = wf.accServer() + '/pay/v2/acsentry?appid=' + appId + '&return_url=' + encodeURIComponent(returnUrl)
                                if (e.data === 'check') {
                                    targetUrl = 'https://apps.wanfangdata.com.cn/check?from=' + location
                                }
                                window.open(targetUrl, '_blank')
                            }
                        }
                    })

                })
            }
        }

        //旧版本样式  目前主站交易页面和检测还在使用
        function renderOldPackage(element) {
            var _this = $(element)
            var appId = _this.attr('appId')//按appId 或者nameCategory为必填
            var nameCategory = _this.attr('nameCategory')//按名称类别区分标题和描述内容
            var verticalRow = _this.attr('verticalRow')//值为1 说明是竖版
            var dataUrl = _this.attr('dataUrl')
            var notifyUrl = _this.attr('notifyUrl')
            var title
            var describe
            var memberServiceAgreementUrl = 'https://wf.pub/memberServiceAgreement'//底部条款跳转URL
            var packageMemo = _this.attr('memo')
            var scope = _this.attr('scope')
            if (verticalRow == '1') {
                // 竖版
                _this.addClass('verticalRow')
            } else {
                // 横版
                _this.removeClass('verticalRow')
            }

            if (appId != packages['check'].appId){
                var checkResult = checkOrgLogin();
                if (checkResult) {
                    return
                }
            }

            if (nameCategory && nameCategory.length > 0) {
                getNameCategoryInfo(nameCategory)
            } else {
                // 按照正常逻辑走
                title = _this.attr('title')
                describe = _this.attr('describe')
            }
            if (!appId || appId == undefined || appId == '') {
                return
            }

            var promise = queryContract()
            promise.then(function (data) {
                renderSetMeal(data)
            })

            //渲染套餐
            function renderSetMeal(contractList) {
                $(element).empty().render({
                    template: {
                        'wf-acs-package-content': {
                            'wf-acs-package-bottom': function (e) {
                                renderSetMealCard(e, contractList)
                            }
                        }
                    }
                })
            }
            //渲染套餐卡片
            function renderSetMealCard(e, contractList) {
                //如果购买了套餐
                if (contractList && contractList.length) {
                    var packageCard = [];
                    for (var i = 0; i < contractList.length; i++) {
                        var item = contractList[i];
                        if (item.appId != appId) {
                            continue;
                        }
                        if (scope) {
                            item.trialInfo.forEach(ele => {
                                if (ele.scope == scope) {
                                    var today = getFormatDate(new Date)
                                    var endDay = item.endDate
                                    if (endDay >= today) {
                                        packageCard.push({ package: item.package, endDay })
                                    }
                                }
                            });
                            continue;
                        }
                        //没有scope,就按appid判断
                        var today = getFormatDate(new Date)
                        var endDay = item.endDate
                        if (endDay >= today) {
                            packageCard.push({ package: item.package, endDay })
                        }
                    }
                    if (packageCard.length) {
                        //回显已购买套餐卡片
                        renderBuyedCard(packageCard, e);
                        return;
                    }
                }

                //渲染全部套餐
                var cardPromise = getAcsPackageList(appId, scope);
                cardPromise.then(function (data) {
                    renderFrame()
                    renderL($(element).find('wf-acs-package-l'), { packageCard: data })
                    renderR($(element).find('wf-acs-package-r'))
                    renderB($(element).find('wf-acs-package-b'))
                })
            }

            //渲染已购买的套餐
            function renderBuyedCard(packageCard, e) {
                $(e.container).render({
                    template: {
                        'wf-acs-package-l': function (d) {
                            renderL($(element).find('wf-acs-package-l'), { packageCard: packageCard })
                        }
                    }
                })
            }

            function renderFrame() {
                $(element).empty().render({
                    template: [
                        { e: 'wf-acs-package-title', t: title },
                        {
                            e: 'wf-acs-package-content',
                            class: ((!title) && (verticalRow == '1')) ? 'topBorder' : '',
                            t: [
                                {
                                    e: 'wf-acs-package-wrap-top',
                                    t: {
                                        e: 'wf-acc',
                                        a: {
                                            view: 'couponlist',
                                            'data-appid': appId,
                                            'data-url': dataUrl
                                        }
                                    }
                                },
                                {
                                    e: 'wf-acs-package-wrap-bottom',
                                    t: [
                                        { e: 'wf-acs-package-l', },
                                        { e: 'wf-acs-package-r', }
                                    ]
                                },
                                {
                                    if: function () {
                                        if (describe && describe.length > 0) {
                                            return true
                                        }
                                    },
                                    then: { e: 'wf-acs-package-describe', t: describe }
                                },
                                { e: 'wf-acs-package-b' }
                            ]
                        }
                    ]
                })
            }

            //渲染内容
            function renderL(ele, data) {
                ele.empty().render({
                    data: data,
                    template: [{
                        e: 'ul',
                        a: { class: 'b2c' },
                        t: [
                            {
                                e: 'li',
                                datapath: 'packageCard',
                                a: { type: 'radio', name: 'packagetype', package: '[[package]]', priceType: '[[priceName]]' },
                                t: [
                                    {
                                        e: 'div',
                                        a: { class: 'price-con' },
                                        t: [
                                            { e: 'span', a: { class: 'package-name' }, t: '[[package]]' },
                                            { e: 'br' },
                                            {
                                                if: function (d) {
                                                    if (d.data.endDay) {
                                                        $('wf-acs-package-l ul li').css('border', '1px solid #af701c');
                                                    }
                                                    return d.data.endDay
                                                },
                                                then: {
                                                    e: 'span',
                                                    a: { class: 'package-amount-prompt' },
                                                    t: [{ e: 'span', a: { class: 'expire-time' }, t: '有效期至' + '[[endDay]]' }]
                                                },
                                                else: {
                                                    e: 'span',
                                                    a: { class: 'package-amount-prompt' },
                                                    t: [{ e: 'span', t: '¥' },
                                                    { e: 'span', a: { class: 'recharge-money' }, t: '[[price]]' },
                                                    { e: 'span', a: { class: 'recharge-dot' } },
                                                    { e: 'span', t: '元/[[unit]]卡' }
                                                    ]
                                                }
                                            },
                                            {
                                                div: function (e) {
                                                    var packageName = e.data.package
                                                    if (packageMemo) {
                                                        var memo = JSON.parse(packageMemo)
                                                        return memo[packageName]
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    { e: 'i', a: { class: 'fa fa-check' } }
                                ],
                                click: function (e) {
                                    if (!e.org_data.endDay) {
                                        $(e.sender).addClass('active').siblings().removeClass('active')
                                    }
                                }
                            }
                        ]
                    }]
                })
                //判断是否添加了过期时间的样式
                var flag = $('wf-acs-package-l ul li div.price-con span.package-amount-prompt span').hasClass('expire-time')
                if (!flag) {
                    //默认选中第一个
                    $('wf-acs-package-l ul li:first-child').addClass('active').siblings().removeClass('active')
                }
            }

            function renderR(ele) {
                ele.empty().render({ //注意这里是element
                    template: [{
                        e: 'wf-acs-package-r',
                        t: [{
                            e: 'a',
                            a: { class: 'open-sale-link', target: '_blank', },
                            t: { e: 'span', t: '开通' },

                            click: function () {
                                var parentUrl = _this.attr('parenturl')
                                var returnUrl = _this.attr('returnUrl')
                                var newUrl = parentUrl ? parentUrl : returnUrl

                                var package = $('.b2c li.active').attr('package')
                                var priceType = $('.b2c li.active').attr('priceType')

                                var href = wf.accServer() + '/transaction?type=b2c&appid=' + appId
                                    + '&return_url=' + encodeURIComponent(newUrl);
                                if (package) {
                                    href = href + '&package=' + package
                                }
                                if (priceType) {
                                    href = href + '&pricetype=' + priceType
                                }
                                if (notifyUrl) {
                                    href = href + '&notify_url=' + encodeURIComponent(notifyUrl)
                                }
                                parent.location.href = href;
                            }
                        }]
                    }]
                })
            }

            function renderB(ele) {
                //渲染底部条款
                ele.empty().render({
                    template: [{
                        style: { 'font-size': '10px', 'text-align': 'center' },
                        e: 'div',
                        t: {
                            if: function () {
                                return verticalRow == '1'
                            },
                            then: [{
                                e: 'div',
                                t: [
                                    { e: 'span', t: '开通前阅读并同意' },
                                    { e: 'br' },
                                    {
                                        e: 'a',
                                        a: { target: '_blank', href: memberServiceAgreementUrl },
                                        t: '《万方数据会员(个人)服务协议》'
                                    }
                                ]
                            }],
                            else: [{
                                e: 'div',
                                style: { 'float': 'left' },
                                t: [
                                    { e: 'span', t: '开通前阅读并同意' },
                                    {
                                        e: 'a',
                                        a: { target: '_blank', href: memberServiceAgreementUrl },
                                        t: '《万方数据会员(个人)服务协议》'
                                    }]
                            }]
                        }
                    }]
                })
            }



            // 名称类别请求appId
            function getNameCategoryInfo(nameCategory) {
                var orgCheck = 0
                //同步的请求
                var reqData = {
                    type: 'POST',
                    crossDomain: true,
                    contentType: 'application/json;charset=utf-8',
                    url: wf.wfApiServer() + '/wfacc/ascPackage',
                    data: JSON.stringify({
                        type: nameCategory,
                        orgCheck: orgCheck
                    }),
                    xhrFields: {
                        withCredentials: true
                    },
                    async: false, //同步
                    success: function (res) {
                        if (res && res.appId && res.online) {
                            appId = res.appId
                            title = res.title
                            describe = res.description
                        }
                    }
                }
                $.ajax(reqData)
            }
        }

        function getAcsPackageList(appId, scope) {
            var df = $.Deferred()
            wf.http.post(
                wf.apiServer() + '/acs/acs_package_sale_list',
                {
                    'appId': appId,
                    headers: {
                        'Content-Type': 'application/json',
                        'Referer': wf.accServer()
                    },
                },
                function (data) {
                    var packageList = data.packageList;
                    var packageCard = [];
                    var cardMapping = [
                        { type: 'month', closeName: "priceMonthClose", priceName: "priceMonth", unit: "月" },
                        { type: 'season', closeName: "priceSeasonClose", priceName: "priceSeason", unit: "季" },
                        { type: 'year', closeName: "priceYearClose", priceName: "priceYear", unit: "年" }];
                    for (var i = 0; i < packageList.length; i++) {
                        var scopeList = packageList[i].scope.split(",");
                        for (var j = 0; j < cardMapping.length; j++) {
                            var isClose = packageList[i].jdata[cardMapping[j].closeName];
                            if (isClose == 1) {
                                continue;
                            }
                            if (scope && $.inArray(scope, scopeList) == -1) {
                                continue;
                            }
                            var card = {};
                            card.appId = packageList[i].appId;
                            card.package = packageList[i].package;
                            card.scope = packageList[i].scope;
                            card.type = cardMapping[j].type;
                            card.priceName = cardMapping[j].priceName;
                            card.price = packageList[i][cardMapping[j].priceName];
                            card.unit = cardMapping[j].unit;
                            packageCard.push(card);
                        }
                    }
                    if (!packageCard.length > 0) {
                        return
                    }
                    df.resolve(packageCard)
                },
                function (err) {
                    console.log(err)
                }
            )
            return df
        }

        function queryContract() {
            var df = $.Deferred()
            wf.http.post(
                wf.apiServer() + '/acs/acs_contract_list',
                {},
                function (data) {
                    df.resolve(data.contractList)
                },
                function (data) {
                    df.resolve(data)
                }
            )
            return df
        }
        function checkOrgLogin() {
            let orgLogin = false
            $.ajax({
                type: 'POST',
                crossDomain: true,
                contentType: 'application/json;charset=utf-8',
                url: wf.wfApiServer() + '/wfacc/orgLoginCheck',
                xhrFields: {
                    withCredentials: true
                },
                async: false, //同步
                success: function (res) {
                    if (res) {
                        orgLogin = true
                    }
                }
            })
            return orgLogin
        }

        function getFormatDate(date) {
            var seperator1 = '-'
            var year = date.getFullYear()
            var month = date.getMonth() + 1
            var strDate = date.getDate()
            if (month >= 1 && month <= 9) {
                month = '0' + month
            }
            if (strDate >= 0 && strDate <= 9) {
                strDate = '0' + strDate
            }
            var currentdate = year + seperator1 + month + seperator1 + strDate
            return currentdate
        }
    }
})


//  jsbuilder/wf/acsPackage/package.js

$.fn.extend({
    acsPackageTest: function () {

        $('wf-acs-package-test', this).each(function (i, element) {

            $(element).empty().render({
                template: [
                    {
                        div:'test-wrap',
                        class:'test-wrap',
                        style:{
                            position: "fixed",
                            left: "0",
                            top: '0',
                            "background-color": "#333",
                            opacity:'.6',
                            width: "100%",
                            height: "100%"
                        }
                    },
                    {
                        e:'div',
                        class: 'test-wrap-body',
                        t:{
                            e:"div",
                            class: 'test-wrap-content',
                            t:[
                                {
                                    e:'div',
                                    class:'head-wrap',
                                    style: {height: "100px", "background-color": "#e2a00069"},
                                    t:[
                                        {
                                            'wf-user':'',
                                            class:'avatar',
                                            a:{
                                                'data-nickname':'尚永龙'
                                            }
                                        }
                                    ]
                                },
                                {
                                    e: 'div',
                                    class: 'package-name-wrap',
                                    t: [
                                        {
                                            e:'div',
                                            class:"package-name-body"

                                        },
                                        {},
                                        {}
                                    ],
                                },
                                {
                                    e:'div',
                                    class:'package-list-wrap',
                                    t:""
                                },
                                {
                                    e:'div',
                                    class:'pay-wrap',
                                    t:""
                                }
                            ]
                        }
                    }
                ]
            })
        })
    }

})


//  jsbuilder/wf/ad_banner/wf.ad_banner.js

$.fn.extend({
    adBanner: function() {
        $('wf-ad_banner', this).each(function (i, element) {
            console.log(444444)
            wf.adBanner(element)
        })
    }
})

wf.adBannerItem = function (p) {
    console.log(p)
    $(p.container).render({
        data: p.data,
        template: {
            li: [{
                e: 'a',
                a: {
                    href: '[[href]]',
                    target: '_blank'
                },
                t: {
                    e: 'img',
                    a:{src: '[[imgUrl]]'}
                }
            }]
        }
    })
}
wf.adBannerIndex = function (p) {
    console.log(p.data)
    $(p.container).render({
        data: p.data,
        template: {
            e: 'li'
        }
    })
}

wf.adBanner = function (element) {
    getAdList(element)
    function getAdList(ele) {
        wf.http.post(
            wf.apiServer() + '/apps/banner_sidebar_online_list',
            {},
            function (data) {
                $(ele).empty().render({
                    data: data,
                    template:  [
                        {
                            e: 'ul',
                            class: 'ad_banner-container',
                            t: {
                                foreach: 'banners',
                                t: wf.adBannerItem,
                            }

                        },
                        {
                            e: 'ul',
                            class: 'ad_banner-index-container',
                            t: {
                                foreach: 'banners',
                                t: wf.adBannerIndex,
                            }
                        }
                    ]
                })
                var index = 0
                var length = data.banners.length
                var a = null
                $('wf-ad_banner .ad_banner-index-container li').eq(index).addClass('active')
                function move() {
                    if (length === 1) {
                        return
                    }
                    clearTimeout(a)
                    if (index == length) {
                        index = 0
                    }
                    $('wf-ad_banner .ad_banner-container li').eq(index).stop().fadeIn(200).siblings().stop().fadeOut(200)
                    $('wf-ad_banner .ad_banner-index-container li').eq(index).addClass('active').siblings().removeClass('active')
                    index++
                    a = setTimeout(function () {
                        move()
                    }, 3000)
                }
                move()
                $(document).on('click', 'wf-ad_banner .ad_banner-index-container li', function () {
                    index = $(this).index()
                    move()
                })
                $(document).on('mouseover', 'wf-ad_banner .ad_banner-container li', function () {
                    clearTimeout(a)
                })
                $(document).on('mouseleave', 'wf-ad_banner .ad_banner-container li', function () {
                    setTimeout(move, 3000)
                })
            }, function (error) {
                console.log(error)
            })
    }
}

//  jsbuilder/wf/appstore/wf.appstore.js

$.fn.extend({
    appstore: function () {
        $('wf-appstore', this).each(function (i, element) {
            wf.appstore(element)
        })
    }
})
wf.appstore = function (element) {
    if (wf.getInsideOrOutsideStatus()) {
        //站外
        var headers = {}
        var wfpub_token = wf.cookie.get('sync_login_wfpub_token')
        headers['X-Ca-AppKey'] = wf.appFalg()
        if (wfpub_token) {
            headers['x-ca-token'] = wfpub_token
        }
    }
    wf.http.post({
        url: wf.apiServer() + '/apps/appstore_query',
        data: { pageSize: 16 },
        headers: headers
    }, function (d) {
        var page = { page: d.page, pageSize: d.pageSize, pageCount: d.pageCount }
        d.pageInfo = page
        $(element).empty().render({
            data: d,
            template: [
                {
                    e: 'wf-appstore-title',
                    t: '应用市场'
                }, {
                    e: 'tab',
                    t: [
                        {
                            e: 'tab-nav',
                            t: '综合排序',
                            a: {
                                class: 'active sort',
                                'data-sort': ''
                            },
                            click: function (e) { $(e.sender).addClass('active').siblings().removeClass('active'); wf.searchAppstore() }
                        },
                        {
                            e: 'tab-nav',
                            t: '最新上架',
                            a: {
                                class: 'sort',
                                'data-sort': 'online'
                            },
                            click: function (e) { $(e.sender).addClass('active').siblings().removeClass('active'); wf.searchAppstore() }
                        },
                        {
                            e: 'tab-nav',
                            t: '最多收藏',
                            a: {
                                class: 'sort',
                                'data-sort': 'star'
                            },
                            click: function (e) { $(e.sender).addClass('active').siblings().removeClass('active'); wf.searchAppstore() }
                        }
                    ]
                },
                {
                    e: 'container',
                    t: {
                        foreach: 'apps',
                        t: wf.appstoreItem
                    }
                },
                {
                    e: 'wf-pagination',
                    datapath: 'pageInfo',
                    t: function (e) { wf.pagination(e) }
                }
            ]
        })
    })

}
wf.searchAppstore = function (param) {
    var page = param && param.page || 1
    var pageSize = param && param.pageSize || 16

    if (isNaN(Number(page))) {
        page = 1
    }
    if (Number(page) < 0) {
        page = 1
    }
    $('wf-appstore wf-appstore-pagination').remove()
    var sort = $('wf-appstore tab-nav.sort.active').attr('data-sort')
    $('wf-appstore container').empty().html('loading...')
    var headers = {}
    if (wf.getInsideOrOutsideStatus()) {
        //站外
        var wfpub_token = wf.cookie.get('sync_login_wfpub_token')
        headers['X-Ca-AppKey'] = 'g3uhs3vsx0zi'
        if (wfpub_token) {
            headers['x-ca-token'] = wfpub_token
        }
    }
    //page: data && data.page ? data.page : 1
    wf.http.post({
        url: wf.apiServer() + '/apps/appstore_query',
        data: { sort: sort || '', page: page, pageSize: pageSize },
        headers: headers
    }, function (d) {
        d.pageInfo = {
            page: d.page,
            pageSize: d.pageSize,
            pageCount: d.pageCount
        }
        $('wf-appstore container').empty().render({
            data: d.apps,
            template: wf.appstoreItem
        })
        $('wf-appstore wf-pagination').empty().render({
            data: d,
            template: function (e) { wf.pagination(e) }
        })
    }, function (err) {
        console.log(err)
    })
}
wf.appstoreItem = function (p) {
    $(p.container).render({
        data: p.data,
        template: {
            app: [
                {
                    if: function () {
                        var flag
                        if (p.data.tag) {
                            flag = p.data.tag.isRecommend
                        } else {
                            flag = p.data.isRecommend
                        }
                        return flag === 1
                    },
                    then: {
                        e: 'recommend-app',
                        t: '荐',
                        a: { class: 'recommended-app' },
                    }
                },
                {
                    e: 'a',
                    a: {
                        href: function (p) {
                            return wf.wfPubServer() + '/' + p.data.indexUrl
                        }
                    },
                    t: {
                        if: function (p) { return p.data.logoUrl ? true : false },
                        then: {
                            e: 'image',
                            style: {
                                'background-image': function (p) { return 'url("' + p.data.logoUrl + '")' },
                                'background-size': '170px 106px'
                            }
                        },
                        else: {
                            e: 'no-img',
                            t: '[[appName]]'
                        }
                    }
                },
                {
                    e: 'app-info',
                    t: [{
                        e: 'a',
                        t: { e: 'app-name', t: '[[appName]]' },
                        a: {
                            href: function (p) {

                                // if ($('#domainUrl').length) {
                                //     return ($('#domainUrl').val() + 'apps/' + p.data.indexUrl)
                                // }
                                return wf.wfPubServer() + '/apps/' + p.data.indexUrl
                            }, title: '查看简介'
                        }
                    },
                    {
                        e: 'app-desc',
                        t: '[[introduction]]'
                    },
                    {
                        e: 'wf-user',
                        a: { 'data-nickname': '[[developer]]' },
                        t: {
                            e: 'a', a: {
                                href: function (p) {
                                    // if ($('#domainUrl').length) {
                                    //     return ($('#domainUrl').val() + 'u/' + p.data.developer)
                                    // }
                                    return wf.wfPubServer() + '/u/' + p.data.developer
                                }

                            }, t: '@[[developer]]'
                        }
                    },
                    {
                        if: function (p) { return p.data.star || p.data.star === 0 ? true : false },
                        then: {
                            e: 'favorite-info',
                            t: [
                                wf.appfavoriteicon,
                                {
                                    e: 'star-number',
                                    t: '(<number>[[star]]</number>)'
                                },
                            ]
                        },
                        else: wf.appfavoriteicon

                    },
                    '<br/>',
                    {
                        if: function (p) { return p.data.buyers ? true : false },
                        then: {
                            e: 'sold',
                            t: '[[buyers]]人已购买'
                        }
                    },
                    ]
                },
            ]
        }
    })

}
wf.appfavoriteicon = function (p) {
    $(p.container).render({
        data: p.data,
        template: {
            e: 'img',
            a: {
                src: function (p) {
                    return (p.data.added === false) ? wf.comServer() + '/img/g-star.png' : wf.comServer() + '/img/o-star.png'
                }
            },
            click: favorite
        },
    })
    function favorite(d) {
        var headers = {}
        if (wf.getInsideOrOutsideStatus()) {
            //站外
            var wfpub_token = wf.cookie.get('sync_login_wfpub_token')
            headers['X-Ca-AppKey'] = 'g3uhs3vsx0zi'
            if (wfpub_token) {
                headers['x-ca-token'] = wfpub_token
            }
        }
        wf.http.post({
            url: wf.apiServer() + '/apps/appstore_favorite_add',
            data: { appId: d.org_data.appId },
            headers: headers
        }, function (r) {
            if (r.added === true) {
                // d.sender.setAttribute("src", wf.comServer()+"/img/g-star.png");
                d.sender.setAttribute('src', wf.comServer() + '/img/o-star.png')
                if ($(d.sender).siblings('star-number').length) {
                    var number = Number($(d.sender).siblings('star-number').find('number').text())
                    $(d.sender).siblings('star-number').find('number').text(number + 1)
                }
            } else {
                // d.sender.setAttribute("src", wf.comServer()+"/img/o-star.png" );
                d.sender.setAttribute('src', wf.comServer() + '/img/g-star.png')
                if ($(d.sender).siblings('star-number').length) {
                    var number = Number($(d.sender).siblings('star-number').find('number').text())
                    $(d.sender).siblings('star-number').find('number').text(number - 1)
                }
            }
        },
        function (err) {
            console.log(err)
        })

    }

}

//  jsbuilder/wf/comment/wf.comment.js

$.fn.extend({
    comment: function() {
        wf.renderWfComment()
    }
})
wf.renderWfComment = function(){
    $('wf-comment').each(function(i, element) {
        commentPlugsFun(element,wf.comment)

    })
}

function commentPlugsFun(ele,callback) {
    //全部插件
    var comment_all_plugs = [
        {
            flag:'_sns_comment',
            attr:'WfSns',
            url:wf.comServer()+'/jsbuilder/sns.js'
        },
        {
            attr: 'feature-component',
            id: 'feature-component-script',
            url: 'https://com.wf.pub/android_ios_component/feature_component.js'
        },
        {
            attr: 'MathJax',
            id: 'mathJax-script',
            async: true,
            // url: 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js'
            url:'https://com.wf.pub/mathjax/tex-mml-chtml.min.js'
        },
        {
            attr: 'mermaid',
            // url: 'https://cdn.jsdelivr.net/npm/mermaid@8.8.4/dist/mermaid.min.js'
            url:'https://com.wf.pub/mermaid/mermaid.min.js'
        },
        {
            attr: 'hljs',
            id: 'highlight-script',
            css: 'https://com.wf.pub/highlight/highlight.min.css',
            url: 'https://com.wf.pub/highlight/highlight.min.js'
            // css: 'https://cdn.wf.pub/highlight_monokai_sublime.min.css',
            // css: 'https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.18.5/build/styles/default.min.css',
            // url: 'https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.18.5/build/highlight.min.js'
        },
        {
            attr: 'marked',
            // url: 'https://cdn.jsdelivr.net/npm/marked@1.2.7/marked.min.js'
            url: 'https://com.wf.pub/mark/marked.min.js'
        },
        {
            attr: 'xss',
            // url: 'https://cdn.jsdelivr.net/npm/marked@1.2.7/marked.min.js'
            url: 'https://com.wf.pub/xss/xss.min.js'
        },
        {
            attr: 'd3',
            id: 'd3-script',
            // url: 'https://com.wf.pub/d3/d3.min.js'
            url:'https://cdn.wf.pub/d3.min.js'
            // url: 'https://cdn.jsdelivr.net/npm/d3@6.3.1/dist/d3.min.js',//IE 十一报错
        },
        {
            attr: 'functionPlot',
            id: 'plot-script',
            url: 'https://cdn.wf.pub/function-plot.js',
            // url: 'https://com.wf.pub/functionplot/function-plot.min.js'
            // url: 'https://cdn.jsdelivr.net/npm/function-plot@1.22.4/dist/function-plot.js',//IE 十一报错
        },
        {
            attr: 'Viewer',
            id: 'viewer-script',
            url: 'https://com.wf.pub/viewer/viewer.min.js'
            // url: 'https://cdn.jsdelivr.net/npm/viewerjs@1.9.0/dist/viewer.min.js'
        },
        {
            attr: 'viewer',
            id: 'jquery-viewer-script',
            url: 'https://com.wf.pub/viewer/jquery-viewer.min.js',
            // url: 'https://cdn.jsdelivr.net/npm/jquery-viewer@1.0.1/dist/jquery-viewer.min.js'
        },
        {
            // 页面二维码插件
            attr: '$.fn.qrcode',
            url: 'https://com.wf.pub/qrcode/jquery.qrcode.min.js',
            // url: 'https://cdn.jsdelivr.net/npm/jquery.qrcode@1.0.3/jquery.qrcode.min.js'
        },
        {
            attr: 'file-upload',
            id: 'jquery-ui-widget-script',
            url: 'https://com.wf.pub/fileupload/jquery.ui.widget.min.js'
        },
        {
            attr: 'file-upload',
            id: 'jquery-fileupload-script',
            url: 'https://com.wf.pub/fileupload/jquery.fileupload.min.js'
        },
        {
            attr: 'file-upload',
            id: 'jquery-fileupload-script',
            url: 'https://com.wf.pub/fileupload/jquery.fileupload.min.js'
        },
    ]

    //调用插件
    var transfer_plugs = []

    comment_all_plugs.forEach(function(item, i) {
        if (!window[item.attr]) {
            if (item.attr === 'MathJax') {
                mathJax()
            }
            transfer_plugs.push(item)
        }
    })

    //相当于遍历 transfer_plugs数组 ，不用$.each ，forEach 因为遍历是异步的，没走到onload，就开始新的循环了
    // (function plugsLoad(i) {
    function plugsLoad(i) {
        if (i == transfer_plugs.length) {
            callback(ele)//引用插件结束后渲染标签
            hljs.initHighlightingOnLoad()

            return false
        } else if (i == 0) {
            createEleFun(transfer_plugs[i])
            plugsLoad(i + 1)
        } else {
            var createEle = createEleFun(transfer_plugs[i])
            createEle.onload = function() {
                if (transfer_plugs[i].attr === 'mermaid') {
                    if (window.mermaid) {
                        mermaid.initialize({ startOnLoad: true })
                    }
                }
                //为了保证幂等特性，thirdPlugsFun这个函数调用多次和调用一次没有区别
                if(transfer_plugs[i].attr){
                    if(!window[transfer_plugs[i].attr]){
                        window[transfer_plugs[i].attr] = true
                    }
                }
                plugsLoad(i + 1)
            }

        }
    }
    plugsLoad(0)
}

wf.comment = function(element) {
    var thirdCommentsType = true //第三方评论标识

    $(element).empty()
    var data = {
        appKey:element.getAttribute('app_key') || element.getAttribute('data-app_key'),//用于公司内部,由于网关就不好解决暂时，暂时用于查询appinfo信息
        audioUrl:element.getAttribute('audio_url') || element.getAttribute('data-audio_url') ,
        periodicalIdentity:element.getAttribute('periodical_identity') || element.getAttribute('data-periodical_identity') ,
        loginUrl:element.getAttribute('loginurl') || element.getAttribute('data-loginurl'),
        icon: element.getAttribute('icon') || element.getAttribute('data-icon') ,
        iconHref: element.getAttribute('icon_href') || element.getAttribute('data-icon_href'),
        videoTitle: element.getAttribute('video_title') || element.getAttribute('data-video_title'),
        videoPoster: element.getAttribute('video_poster') || element.getAttribute('data-video_poster'),
        // videoUrl: element.getAttribute('video_url') || element.getAttribute('data-video_url') || $('video').attr('src') || $('video source').attr('src'),
        videoUrl: element.getAttribute('video_url') || element.getAttribute('data-video_url'),
        thirdCommentsType: thirdCommentsType, //第三方评论标识
        title: element.getAttribute('title') || element.getAttribute('data-title') || document.title,
        url: element.getAttribute('url') || element.getAttribute('data-url') || ((top === self) ? window.location.href : document.referrer),
        description: element.getAttribute('description') || element.getAttribute('data-description') || $('meta[name=description]').attr('content')
    }

    function initRender(data) {

        // if(data.loginUrl){

        //     var wfpub_token = wf.cookie.get('wfpub_token')
        //     // wf.isLogin(false, wfpub_token)
        //     wf.isLogin(false,wfpub_token)
        // }else{
        //     //站内应用
        //     wf.isLogin(true)
        // }
        // if(wf.loginState && wf.loginState.uid){
        //     //登录
        //     data.uid = wf.loginState.uid


        // }

        wf.isLogin()
        if(wf.loginState &&wf.loginState.uid){

            //登录
            data.uid = wf.loginState.uid
        }
        renderComment(data)
    }

    initRender(data)



    function renderComment(data) {
        //登录
        $(element).empty().render({
            data: data,
            template: {
                e: 'wf-sns',
                t: [
                    function(e) {

                        if (e.data.uid) {
                            wf.sns.messageSender(e)
                        } else {
                            unlogin(e.container, data)
                        }
                    },
                    {
                        e: 'message-list',
                        class: 'message-list',
                        t: function(Ele) {

                            var messageListEle = $(Ele.container)
                            renderCommentList(messageListEle )
                        }
                    },
                    {
                        e: 'wf-button',
                        a: {
                            id: 'more',
                            'fromId': '[[minId]]'
                        },

                        t: '点击加载更多...',
                        click:function(Ele){
                            var messageListEle = $(Ele.sender).siblings('message-list.message-list')
                            renderCommentList(messageListEle)
                        }

                    }
                ]
            }
        })
    }

    function unlogin(container, data) {

        $(container).render({
            data: data,
            template: {
                e: 'wf-no-login',
                t: [{
                    e: 'wf-span',
                    t: '您当前未登录！'
                },
                {

                    e: 'a',
                    a: {

                        href: function(e) {
                            //不存在就走新平台的
                            var url = wf.getRelativeUrl()
                            url = encodeURIComponent(url)
                            return wf.oauthServer() + '/login?redirectUri=' + url

                        },
                        target:'_blank'
                    },
                    t: '去登录',

                }
                ]
            }
        })
    }
    function renderCommentList(messageListEle) {
        var moreEle = messageListEle.siblings('wf-button')

        var reqData ={

            fromId: moreEle.attr('fromId'),
            url: data.url,
        }
        if(data.periodicalIdentity){
            var periodicalIdentity = eval('(' + data.periodicalIdentity + ')')
            reqData.periodicalIdentity = periodicalIdentity
        }

        wf.http.post(wf.apiServer() + '/sns/wf_comment',reqData,
            function(data) {

                    // 添加第三方标识数据
                    data.thirdCommentsType = thirdCommentsType
                    // 获取收藏数据，渲染内容
                    wf.sns.timeline.getFavouriteData(data,renderMessageList,messageListEle)


            },
            function(err) {
                console.log({ err: err })
            }
        )
    }

    function renderMessageList(messageListEle,data){
        messageListEle.render({
            data: data.messages,

            template: function(e) {
                e.thirdCommentsType = thirdCommentsType

                wf.sns.timeline.message(e)
            }
        })
        // 加载更多逻辑处理

        wf.sns.timeline.loadmore(messageListEle,data)
    }
}





//  jsbuilder/wf/favorite/fav.js

// //收藏信息
$.fn.extend({
    favorite: function() {
        $('wf-favourite', this).each(function(i, element) { // 注意this，这里是是在selector指定的节点下查找wf-favourite元素进行渲染。注意jquery each 参数
            var _this = $(this)
            var title = _this.attr('title') || _this.data('title') || document.title
            var url = _this.attr('url') || _this.data('url') || window.location.href;

            // var defaultUrl = wf.oauthServer() + '/login?redirectUri=' + encodeURIComponent('/' + url.split('/').slice(3).join('/'))
            var defaultUrl = wf.oauthServer() + '/login?redirectUri=' + encodeURIComponent(url)
            var login_url = _this.attr('loginurl') || _this.data('loginurl') || defaultUrl

            var api_url = wf.cookie.get('token') ? wf.apiServer() + '/favourite/user_statistic' : wf.apiServer() + '/favourite/statistic' // 注意三元表达式
            var user_api_url = wf.apiServer() + '/favourite/statistic'

            var message_id = _this.attr('messageid') || _this.data('messageid');

            var app_id = _this.attr('appid') || _this.data('appid');
            var icon_text = _this.attr('icon_text') || _this.data('icon_text') || '';
            //图标展示样式-目前可设置为blue
            var icon_color = _this.attr('icon_color') || _this.data('icon_color') || '';
            var type = _this.attr('type') || _this.data('type') || '';
            // 主站功能新增字段
            var literatureId = _this.attr('literature_id') || _this.data('literature_id') || '';
            var literatureDes = _this.attr('literature_des') || _this.data('literature_des') || '';
            var literatureType = _this.attr('literature_type') || _this.data('literature_type') || '';
            var literatureAuthor = _this.attr('literature_author') || _this.data('literature_author') || '';

            //发送ajax
            wf.http.post(
                api_url, {
                    url: url
                },
                function(data) {
                    renderCollect($(element), data)
                },
                function() {
                    wf.http.post(
                        user_api_url, {
                            url: url
                        },
                        function(data) {
                            renderCollect($(element), data)
                        }
                    )
                }
            )

            function click(data) {
                var favourite_url = data.state === '已收藏' ? wf.apiServer() + '/favourite/delete' : wf.apiServer() + '/favourite/add'
                var reqData = {
                    title: title,
                    url: url,
                    appId: app_id,
                    // type:'2'
                }
                if (message_id) {
                    reqData.messageId = message_id
                    reqData.type = 2 //为了整合数据
                }
                if (type) {
                    reqData.type = type
                }
                if (literatureId) {
                    reqData.literatureId = literatureId
                }
                if (literatureDes) {
                    reqData.literatureDes = literatureDes
                }
                if (literatureType) {
                    reqData.literatureType = literatureType
                }
                if (literatureAuthor) {
                    reqData.literatureAuthor = literatureAuthor
                }

                wf.http.post(
                    favourite_url, reqData,
                    function(data) {
                        renderCollect($(element), data);
                        if (data.state === '已收藏') {
                            wf.favorite.addLabelPopupView(data.urlmd5)
                        }
                    },
                    function(err) {
                        if (err.data !== undefined && err.data.err_message) {
                            dialog.fail(err.data.err_message)
                        } else if (err.err_code == 40001 && (err.sub_code == 'isv.missing-token' || err.sub_code == 'isv.invalid-token')) {
                            // console.log('token过期，请重新登陆')
                            //window.open(login_url)
                            window.location.href = login_url //暂时本窗口进行跳转，登陆完返回跳转前页面
                        } else {
                            // console.log(JSON.stringify(err))
                            dialog.fail('收藏失败！')
                        }
                    }
                )
            }

            //渲染内容
            function renderCollect(ele, data) {
                ele.empty().render({ //注意这里是element
                    // data: data,
                    template: {
                        e: 'wf-favourite-statistic',
                        t: [function() {
                                return icon_text;
                            },
                            {
                                e: 'img',
                                style: {
                                    "vertical-align": "middle"
                                },
                                a: icon_color == 'blue' ? {
                                    src: (data.state === '已收藏') ? wf.comServer() + '/img/o-b-star.png' : wf.comServer() + '/img/g-b-star.png'
                                } : {
                                    src: (data.state === '已收藏') ? wf.comServer() + '/img/o-star.png' : wf.comServer() + '/img/g-star.png'
                                }

                            },

                            // {
                            //     e: 'span',
                            //     t: '收藏状态：'
                            // },
                            // {
                            //     e: 'span',
                            //     a: {
                            //         id: 'state'
                            //     },
                            //     t: (data.state === '已收藏') ? '是' : '否'
                            // },
                            // {
                            //     e: 'span',
                            //     t: '&nbsp;&nbsp;收藏量：'
                            // },
                            icon_color == 'blue' ? {
                                e: 'span',
                                t: '收藏',
                                style: {
                                    'padding': '1px 5px',
                                    'font-size': '14px',
                                    'cursor': 'pointer',
                                    'top': '1px',
                                    'position': 'relative',
                                    'color': '#2162bb'

                                },
                            } : {
                                e: 'span',
                                t: (data.collect_num === undefined) ? '(0)' : '(' + data.collect_num + ')'
                            }
                        ],
                        click: function() {
                            click(data)
                        }
                    }
                })
            }
        })
    }
})

// 把它放在wf.js中
// $(function() {
//     $(document).favorite()
// })

//  jsbuilder/wf/favorite/wf.fav.detail.js

//根据数据库来源展示收藏列表

$.fn.extend({
    favoriteDetail: function() {
        $('wf-fav-info').each(function(i, element) {
            var _this = $(this);
            var url = _this.attr('url') || _this.data('url') || window.location.href;
            var defaultUrl = wf.oauthServer() + '/login?redirectUri=' + encodeURIComponent('/' + url.split('/').slice(3).join('/'));
            var login_url = _this.attr('loginurl') || _this.data('loginurl') || defaultUrl;
            var resourceId = _this.attr('appid') || _this.data('appid') || '';
            //type属性
            var type = _this.attr('fav_type') || _this.data('fav_type') || '';

            renderList()

            function renderList() {
                $(element).empty().render({
                    template: [{
                        e: 'wf-fav-div',
                        class: 'container',
                        t: [{
                                e: 'wf-fav-admin',
                                class: 'div-box',
                                t: [{
                                        e: 'wf-fav-admin-head',
                                        t: [{
                                            e: 'wf-fav-titleDiv',
                                            t: [{
                                                e: 'wf-fav-titleDiv',
                                                class: "title",
                                                t: "我的收藏",
                                            }, {
                                                e: 'wf-fav-titleNum',
                                                class: 'summary'

                                            }]

                                        }, {
                                            e: 'search-div',
                                            t: [{
                                                    e: 'input',
                                                    a: {
                                                        name: 'search_key',
                                                        id: 'search_key'
                                                    },
                                                },
                                                {
                                                    e: 'button',
                                                    t: '搜索',
                                                    click: searchKey
                                                }
                                            ]
                                        }],
                                    },
                                    {
                                        e: 'resource-div',
                                        t: function() {
                                            resourceList()
                                        }
                                    },
                                    {
                                        e: 'tag-div',
                                        t: function() {
                                            labelNameList()
                                        }
                                    },
                                    {
                                        e: 'type-div',
                                        t: function(e) {

                                            typeName(e)
                                        }
                                    }
                                ]
                            },
                            {
                                e: 'wf-fav-list',
                                class: 'div-box',
                                t: function() {
                                    searchList('', resourceId, '', '')
                                }
                            }
                        ]
                    }]
                });
            }
            //数据库来源列表
            function resourceList() {
                if (resourceId == null || resourceId == '') {
                    wf.http.post(
                        wf.apiServer() + "/favourite/app_name", {},
                        function(data) {
                            // console.log('data:',data)
                            if (data.list && data.list.length && data.list.length > 0) {
                                $('resource-div').empty().render({
                                    template: [{
                                            e: 'resource-div-title',
                                            t: '来源：'
                                        },
                                        {
                                            e: 'fav-tag',
                                            class: 'tag-active',
                                            t: "全部",
                                            click: resourceSearch
                                        }
                                    ]
                                })
                                $('resource-div').render({
                                    data: data,
                                    template: {
                                        foreach: 'list',
                                        t: {
                                            e: 'fav-tag',
                                            a: {
                                                id: '[[appId]]',
                                                name: '[[appId]]'
                                            },
                                            t: "[[appName]]",
                                            click: resourceSearch
                                        }
                                    }
                                })
                            }
                        }
                    )
                }
            }
            //标签来源列表
            function resourceSearch(e) {
                // $('tag-div fav-tag:nth-child(2)').addClass("tag-active").siblings().removeClass("tag-active");
                $(e.sender.parentNode).siblings().children('fav-tag:nth-child(2)').addClass("tag-active").siblings().removeClass("tag-active");
                // console.log('e:',e.sender.id)
                if (e.sender.id && e.sender.id != '') {
                    // $('resource-div fav-tag[name='+e.sender.id+']').addClass("tag-active").siblings().removeClass("tag-active");
                    $(e.sender).addClass("tag-active").siblings().removeClass("tag-active");
                } else {
                    // $('resource-div fav-tag:nth-child(2)').addClass("tag-active").siblings().removeClass("tag-active");
                    $(e.sender.parentNode).children('fav-tag:nth-child(2)').addClass("tag-active").siblings().removeClass("tag-active");
                }
                searchList('', e.sender.id, '', '');
            }
            //标签名
            function labelNameList() {
                //渲染标签名列表
                wf.http.post(
                    wf.apiServer() + "/favourite/label_name", {
                        resourceId: resourceId
                    },
                    function(data) {
                        if (data && data.list && data.list.length && data.list.length > 0) {
                            // console.log('data:',data)
                            $('tag-div').empty().render({
                                template: [{
                                        e: 'tag-div-title',
                                        t: '标签：'
                                    },
                                    {
                                        e: 'fav-tag',
                                        class: 'tag-active',
                                        t: "全部",
                                        click: labelNameSearch
                                    }
                                ]
                            })
                            $('tag-div').render({
                                data: data,
                                template: {
                                    foreach: 'list',
                                    t: {
                                        e: 'fav-tag',
                                        a: {
                                            // id:'[[appId]]',
                                            name: '[[labelName]]'
                                        },
                                        t: "[[labelName]]",
                                        click: labelNameSearch
                                    }

                                }
                            })
                        }
                    }
                )
            }
            //选择标签名
            function labelNameSearch(e) {
                // $('resource-div fav-tag:nth-child(2)').addClass("tag-active").siblings().removeClass("tag-active");
                $(e.sender.parentNode).siblings().children('fav-tag:nth-child(2)').addClass("tag-active").siblings().removeClass("tag-active");
                if (e.org_data.labelName && e.org_data.labelName != '') {
                    // $('tag-div fav-tag[name='+e.org_data.labelName+']').addClass("tag-active").siblings().removeClass("tag-active");
                    $(e.sender).addClass("tag-active").siblings().removeClass("tag-active");
                } else {
                    // $('tag-div fav-tag:nth-child(2)').addClass("tag-active").siblings().removeClass("tag-active");
                    $(e.sender.parentNode).children('fav-tag:nth-child(2)').addClass("tag-active").siblings().removeClass("tag-active");
                }
                searchList('', resourceId, e.org_data.labelId, '')
            }

            //类型名称
            function typeName(e) {
                $(e.container).empty().render({
                    data: {
                        names: [{
                                name: '全部',
                                typeNum: '1',
                                className: 'tag-active'
                            },
                            {
                                name: '帖子',
                                typeNum: '2',
                            },
                            {
                                name: '文献',
                                typeNum: '3',
                            },
                            {
                                name: "其他",
                                typeNum: '0',

                            }
                        ]
                    },
                    template: [{
                            'tag-div-title': "类别："
                        },
                        {
                            'tag-div-body': [{
                                    'fav-tag': '[[name]]',
                                    datapath: 'names',
                                    a: {
                                        class: function(e) {
                                            return e.data.className
                                        }
                                    },
                                    click: function(e) {

                                        $(e.sender).siblings().removeClass('tag-active')
                                        $(e.sender).addClass('tag-active')

                                        searchList('', '', '', e.org_data.typeNum)

                                    }

                                }

                            ],



                        }

                    ]
                })

            }
            //关键字模糊查询
            function searchKey(keyElement) {
                $('tag-div fav-tag:nth-child(2)').addClass("tag-active").siblings().removeClass("tag-active");
                $('resource-div fav-tag:nth-child(2)').addClass("tag-active").siblings().removeClass("tag-active");
                searchList(keyElement.new_data.search_key, '', '', '')
            }

            function searchList(keyWord, resourceId, labelId, messageType) {
                wf.http.post(
                    wf.apiServer() + "/favourite/list", {
                        keyWord: keyWord,
                        resourceId: resourceId,
                        labelId: labelId,
                        type: messageType ? parseInt(messageType) : parseInt(type)
                    },
                    function(data) {
                        // console.log('data2',data)
                        $('wf-fav-titleNum').text('(' + [
                            [data.searchrecord]
                        ] + ')')
                        $('wf-fav-list').empty();
                        renderFav($('wf-fav-list'), data);
                        $(document).sns();
                    },
                    function(err) {
                        if (err.data !== undefined && err.data.err_message) {

                        } else if (err.err_code == 40001 && (err.sub_code == 'isv.missing-token' || err.sub_code == 'isv.invalid-token')) {
                            console.log("token过期，请重新登陆");
                            // window.open(login_url)
                            window.location.href = login_url;
                        } else {
                            console.log(JSON.stringify(err));
                        }
                    }
                );
            }

            //渲染内容
            function renderFav(ele, data) {
                if (data.searchrecord === 0) {
                    ele.render({
                        data: '',
                        template: {
                            e: "fav-content",
                            t: '该筛选条件下无数据哦~'
                        }
                    })
                } else {
                    ele.render({ //注意这里是element
                        data: data,
                        template: {
                            e: "fav-content",
                            a: {
                                class: "favourites"
                            },
                            t: [{
                                foreach: 'favourites',
                                t: {
                                    e: "fav-div",
                                    class: "favourite list-item",
                                    t: [{
                                            if: function(e) {
                                                if (e.data.type == 3) {
                                                    renderLiterature(e)
                                                    return
                                                }
                                                if (e.data.type == 2) {
                                                    renderMessage(e)

                                                    return
                                                }
                                                if (e.data.type == 0 || e.data.type == null) {
                                                    return true
                                                }
                                            },
                                            then: {
                                                e: "h2",
                                                t: [{
                                                        e: "a",
                                                        a: {
                                                            class: 'fav_url',
                                                            href: "[[url]]",
                                                            target: "_blank"
                                                        },
                                                        t: "[[title]]"
                                                    },
                                                    {
                                                        e: 'fav-img',
                                                        a: {
                                                            id: '[[urlmd5]]',
                                                            state: 'true'
                                                        },
                                                        t: [{
                                                                e: 'img',
                                                                a: {
                                                                    src: wf.comServer() + '/img/o-star.png'
                                                                }
                                                            },
                                                            {
                                                                e: 'span',
                                                                t: '(' + '[[collectNum]]' + ')'
                                                            }
                                                        ],
                                                        click: function(e) {
                                                            changeFav(e);
                                                            // if (wf.cookie.get("token") != null && wf.cookie.get("token") != "") {

                                                            // } else {
                                                            //     // window.location.href = login_url;
                                                            // }
                                                        }
                                                    },
                                                    {
                                                        e: 'fav-resource',
                                                        a: {
                                                            'data-id': function(e) {
                                                                return e.data.appId
                                                            },
                                                            'data-name': function(e) {
                                                                return e.data.appName
                                                            }
                                                        },
                                                        t: function(e) {
                                                            return '来源：' + e.data.appName
                                                        }
                                                    },
                                                    {
                                                        e: 'div',
                                                        style: {
                                                            'font-size': "12px",
                                                            'color': '#666',
                                                            'padding-top': '5px'
                                                        },
                                                        t: [{
                                                                e: 'span',
                                                                t: function(e) {

                                                                    if (e.data.jdata && e.data.jdata.literatureType && e.data.jdata.literatureType != 'undefined') {
                                                                        let literatureType = '';
                                                                        if (e.data.jdata.literatureType == 'periodical' || e.data.jdata.literatureType == 'perio') {
                                                                            literatureType = '期刊';
                                                                        } else if (e.data.jdata.literatureType == 'thesis') {
                                                                            literatureType = '学位';
                                                                        } else if (e.data.jdata.literatureType == 'claw') {
                                                                            literatureType = '法规';
                                                                        } else if (e.data.jdata.literatureType == 'standard') {
                                                                            literatureType = '标准';
                                                                        } else if (e.data.jdata.literatureType == 'cstad') {
                                                                            literatureType = '成果';
                                                                        } else if (e.data.jdata.literatureType == 'nstr') {
                                                                            literatureType = '科技报告';
                                                                        } else if (e.data.jdata.literatureType == 'patent') {
                                                                            literatureType = '专利';
                                                                        } else if (e.data.jdata.literatureType == 'conference') {
                                                                            literatureType = '会议';
                                                                        } else {
                                                                            literatureType = '其他';
                                                                        }
                                                                        return '文献类型：' + literatureType
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                e: 'span',
                                                                style: {

                                                                    'padding-left': '20px'
                                                                },
                                                                t: function(e) {
                                                                    if (e.data.jdata && e.data.jdata.literatureAuthor && e.data.jdata.literatureAuthor != 'undefined') {
                                                                        return e.data.jdata.literatureAuthor
                                                                    }
                                                                }
                                                            }
                                                        ]

                                                    }, {
                                                        e: 'p',
                                                        style: {
                                                            'font-size': "12px",
                                                            'color': '#666',
                                                            'overflow': 'hidden',
                                                            'text-overflow': 'ellipsis',
                                                            'display': '-webkit-box',
                                                            '-webkit-box-orient': 'vertical',
                                                            '-webkit-line-clamp': 3,
                                                            'margin-top': '10px',
                                                            'line-height': '20px'
                                                        },
                                                        t: function(e) {
                                                            if (e.data.jdata && e.data.jdata.literatureDes && e.data.jdata.literatureDes != 'undefined') {
                                                                return '摘要：' + e.data.jdata.literatureDes
                                                            }

                                                        }
                                                    }
                                                ]
                                            },
                                        },
                                        {
                                            e: "fav-label",
                                            a: {
                                                class: 'labels',
                                                id: "[[urlmd5]]"
                                            },
                                            t: [{
                                                    foreach: 'labels',
                                                    t: {
                                                        e: "span",
                                                        a: {
                                                            id: '[[labelId]]',
                                                            class: 'label_delete'
                                                        },
                                                        t: [
                                                            '[[labelName]]',
                                                            {
                                                                e: 'i',
                                                                t: '×',
                                                                click: function(e) {
                                                                    labelDelete(e);
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    e: "button",
                                                    a: {
                                                        id: "[[urlmd5]]"
                                                    },
                                                    t: "+ 标签",
                                                    click: function(data) {
                                                        wf.favorite.addLabelPopupView(data.org_data.urlmd5, function() {
                                                                // renderList(element)
                                                                submitLabelSuccessShow($(data.sender).attr('id'), data.sender)
                                                            })
                                                            // if (wf.cookie.get("token") != null && wf.cookie.get("token") != "") {


                                                        // } else {
                                                        //     // window.location.href = login_url;
                                                        // }
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }, {
                                e: 'fav-content-ex',
                                class: 'summary',
                                t: '共找到' + [
                                    [data.searchrecord]
                                ] + '条结果'
                            }]
                        }
                    });
                }
                // // 重新初始化社区中的帖子
                // $(document).sns()

            };

            function renderLiterature(p) {
                $(p.container).render({
                    data: p.data,
                    template: {
                        'literature-div': [{
                                e: "literature-left",
                                t: {
                                    e: "img",
                                    a: {
                                        src: "https://com.wf.pub/img/app-default.png"
                                    }
                                },
                                click: function(e) {
                                    if (p.data.url) {
                                        window.open(p.data.url)

                                    }


                                }
                            },
                            {
                                e: "literature-right",

                                t: [{
                                        'literature-con': [{
                                                'literature-title': '[[title]]',
                                                click: function(e) {
                                                    if (p.data.url) {
                                                        window.open(p.data.url)

                                                    }


                                                }
                                            },
                                            {
                                                'literature-des': '[[literatureDes]]'
                                            }
                                        ],
                                        datapath: "jdata",
                                    },
                                    {
                                        e: 'fav-resource',
                                        a: {
                                            'data-id': function(e) {

                                                return e.data.appId
                                            },
                                            'data-name': function(e) {
                                                return e.data.appName
                                            }
                                        },
                                        t: function(e) {
                                            return '来源：' + e.data.appName
                                        }
                                    }
                                ]
                            },
                        ]
                    }
                })
            }

            function renderMessage(p) {
                $(p.container).render({
                    data: p.data.jdata,
                    template: [{
                            e: 'fav-resource',
                            a: {
                                'data-id': function() {

                                    return p.data.appId
                                },
                                'data-name': function(e) {
                                    return p.data.appName
                                },
                                class: 'message'
                            },
                            t: function(e) {
                                return '来源：' + p.data.appName
                            }
                        },
                        {
                            e: "wf-sns",
                            a: {
                                class: "comment relayDetail",
                                view: "message",
                                messageId: '[[messageId]]',
                                autoopen: '1'
                            },
                            // t: function(e) {

                            //     $(document).sns()
                            // }
                        }

                    ]
                })
            }



            function submitLabelSuccessShow(urlmd5, ele) {

                wf.http.post(
                    wf.apiServer() + "/favourite/label_name_get", {
                        urlmd5: urlmd5
                    },
                    function(data) {

                        $(ele).parents(".labels").empty().render({
                            data: data,
                            template: [{
                                    foreach: 'list2',
                                    t: {
                                        e: "span",
                                        a: {
                                            id: '[[labelId]]',
                                            class: 'label_delete'
                                        },
                                        t: [
                                            '[[labelName]]',
                                            {
                                                e: 'i',
                                                t: '×',
                                                click: function(e) {
                                                    labelDelete(e);
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    e: "button",
                                    a: {
                                        id: "[[urlmd5]]"
                                    },
                                    t: "+ 标签",
                                    click: function(data) {
                                        wf.favorite.addLabelPopupView(data.org_data.urlmd5, function() {
                                                submitLabelSuccessShow($(data.sender).attr('id'), data.sender)
                                            })
                                            // if (wf.cookie.get("token") != null && wf.cookie.get("token") != "") {

                                        // } else {
                                        //     // window.location.href = login_url;
                                        // }
                                    }
                                }
                            ]

                        });
                    }
                )
            }

            function labelDelete(e) {
                wf.http.post(
                    wf.apiServer() + "/favourite/label_delete", {
                        urlmd5: e.org_data.urlmd5,
                        labelId: e.org_data.labelId
                    },
                    function(data) {
                        e.sender.parentNode.remove();
                        labelNameList();
                    },
                    function(err) {
                        if (err.data !== undefined && err.data.err_message) {

                        } else if (err.err_code == 40002 && (err.sub_code == 'isv.missing-token' || err.sub_code == 'isv.invalid-token')) {
                            console.log("token过期，请重新登陆");
                            // window.open(login_url)
                            window.location.href = login_url;
                        } else {
                            console.log(JSON.stringify(err));
                        }
                    }
                )
            }



            //取消收藏
            function changeFav(e) {
                wf.http.post(
                    (e.sender.getAttribute('state') == 'true') ? wf.apiServer() + "/favourite/delete" : wf.apiServer() + "/favourite/add", {
                        url: e.org_data.url,
                        title: e.org_data.title,
                        appId: e.org_data.appId,
                        appName: e.org_data.appName
                    },
                    function(success) {
                        if (success.state == "未收藏") {
                            e.sender.setAttribute('state', 'false');
                            $($(e.sender.parentNode).siblings('fav-label')[0]).children('button').css('pointer-events', 'none');
                        } else {
                            e.sender.setAttribute('state', 'true');
                            $($(e.sender.parentNode).siblings('fav-label')[0]).children('button').css('pointer-events', '');
                        }
                        //变更图片为未收藏图标
                        $(e.sender).empty().render({
                            data: e.org_data,
                            template: [{
                                    e: 'img',
                                    a: {
                                        src: (success.state == "未收藏") ? wf.comServer() + '/img/g-star.png' : wf.comServer() + '/img/o-star.png'
                                    }
                                },
                                {
                                    e: 'span',
                                    t: '(' + success.collect_num + ')'
                                }
                            ]
                        });
                        $($(e.sender.parentNode).siblings('fav-label')[0]).children('.label_delete').remove();
                    },
                    function(err) {
                        if (err.data !== undefined && err.data.err_message) {

                        } else if (err.err_code == 40002 && (err.sub_code == 'isv.missing-token' || err.sub_code == 'isv.invalid-token')) {
                            console.log("token过期，请重新登陆");
                            // window.open(login_url)
                            window.location.href = login_url;
                        } else {
                            console.log(JSON.stringify(err));
                        }
                    }

                )

                // poplayer({
                //     header: "取消收藏",
                //     width: "500px",
                //     height: "100px",
                //     render: render
                // });

                // function render(e) {
                //     console.log(e)
                //     $(e.container).empty().render({
                //         data: data.org_data,
                //         template:{
                //             e:'fav-div',
                //             t:[
                //                 {
                //                     e: "button",
                //                     t: "确定",
                //                     click:function (e) {
                //                         console.log(e);
                //                         console.log(data.sender.parentNode.parentNode);
                //                         index.http.post(
                //                             domain.apiPub+"/favourite/delete",
                //                             {
                //                                 url: e.org_data.url
                //                             },
                //                             function () {
                //                                 //父元素div删除
                //                                 data.sender.parentNode.parentNode.remove();
                //                                 $(e.sender).closest("popmask").remove();
                //                             },
                //                             function (err) {
                //                                 if (err.data !== undefined && err.data.err_message) {
                //                                     console.log(err.data.err_message);
                //                                 } else if (err.err_code == 40002 && (err.sub_code == 'isv.missing-token' || err.sub_code == 'isv.invalid-token')) {
                //                                     console.log("token过期，请重新登陆");
                //                                     // window.open(login_url)
                //                                     window.location.href = login_url;
                //                                 } else {
                //                                     console.log(JSON.stringify(err));
                //                                 }
                //                             }
                //
                //                         )
                //                     }
                //                 },
                //                 {
                //                     e: "button",
                //                     t: "取消",
                //                     click:function (e) {
                //                         $(e.sender).closest("popmask").remove();
                //                     }
                //                 }
                //             ]
                //         }
                //     })
                // }
            }
            /**
             * 显示提示框
             * @param {String} con 提示文本
             */
            function showMessageTip(con) {
                $('.message-tips wf-span').text(con);
                $('.message-tips').show();
                setTimeout(function() { $('.message-tips').hide(); }, 3000);
            }
            //输入框事件
            function searchEvent() {
                $('search-div input').keyup(function(e) {
                    var keyCode = e.keyCode ? e.keyCode : e.which ? e.which : e.charCode;
                    //回车触发搜索函数
                    if (keyCode == "13") {
                        $("search-div button").click();
                    }
                })
            }
            searchEvent();
        })
    }
})

//  jsbuilder/wf/favorite/wf.favorite.addFavorite.js

//收藏成功后添加标签功能
// $.fn.extend({
//     addLabelPopupView:function (urlmd5) {
//         wf.fav.addLabelPopupView(urlmd5)
//     }
// })
wf.favorite.addFavoritePopupView = function(urlmd5) {
    // var labelArr;
    // wf.http.post(
    //     wf.apiServer() + "/favourite/label_name", {
    //         urlmd5: urlmd5
    //     },
    //     function(labelByUrl) {
    //         labelArr = labelByUrl.list;
    //     }
    // );
    wf.http.post(
            wf.apiServer() + "/favourite/label_name_get", { urlmd5: urlmd5 },
            function(labels) {
                var pop = poplayer({
                    header: "添加标签",
                    width: "500px",
                    height: "auto",
                    render: function render(e) {
                      
                        $(e.container).empty().render({
                            // data: data.org_data,
                            template: {
                                e: 'fav-div',
                                t: [{
                                    e: 'div',
                                    a: {
                                        class: 'title'
                                    },
                                    style: {
                                        'padding': '0 38px',
                                        'margin-top': '4px',
                                        'font-size': '14px',
                                        'line-height': '1.5',
                                        'color': '#8590a6',
                                        'text-align': 'center',
                                    },
                                    t: ['请选择你想添加的标签']
                                }, {
                                    e: 'div',
                                    a: {
                                        class: 'fav_items',
                                        name: 'fav_items',
                                        id: 'fav_items',
                                    },
                                    style: {
                                        'max-height': '335px',
                                        'min-height': '140px',
                                        'margin-bottom': '40px',
                                        'overflow-x': 'hidden',
                                        'overflow-y': 'auto',
                                    },
                                    t: [{
                                        e: "fav-ul",
                                        t: [{
                                            foreach: labels.list,
                                            t: [{
                                                e: 'div',
                                                a: {
                                                    id: '[[labelId]]'
                                                },
                                                style: {
                                                    'padding': '8px 0',
                                                    'width': '445px',
                                                    'height': '50px',
                                                    'border-bottom': '1px solid #ebebeb',
                                                    'float': 'left',
                                                    'position': 'relative',
                                                    'background-color': '#e3e3e3',
                                                    'margin': '5px 5px 2px 0px',
                                                    'border-radius': '10px',
                                                    'display': 'flex',
                                                    '-webkit-box-pack': 'justify',
                                                    'justify-content': 'space-between',
                                                    '-webkit-box-align': 'center',
                                                    'align-items': 'center',

                                                },
                                                t: [{ e: 'span', style: { 'font-size': '22px' }, t: ['[[labelName]]', { e: 'span', t: '<br>[[collectNum]]条内容' }] },
                                                    {

                                                        t: {
                                                            if: function(data) {
                                                                return data.data.isContain == '0' || data.data.isContain == 0
                                                            },
                                                            then: {
                                                                e: 'button',
                                                                a: {
                                                                    class: 'btn-btn',
                                                                    type: 'button'
                                                                },
                                                                style: {
                                                                    'width': '76px'
                                                                },
                                                                t: '添加',
                                                                click: function(data) {
                                                                    wf.http.post(
                                                                        wf.apiServer() + "/favourite/label_add", {
                                                                            urlmd5: urlmd5,
                                                                            // 去掉字符串中所有空格
                                                                            labelName: data.org_data.labelName
                                                                        },
                                                                        function(res) {
                                                                            wf.favorite.addFavoritePopupView(urlmd5)
                                                                            setTimeout(function() {
                                                                                pop.remove();
                                                                            }, 500)

                                                                        },
                                                                        function(err) {
                                                                            console.err('标签失败')
                                                                        }
                                                                    )
                                                                }
                                                            },
                                                            else: {
                                                                e: 'button',
                                                                a: {
                                                                    class: 'btn-btn',
                                                                    type: 'button'
                                                                },
                                                                style: {
                                                                    'width': '76px'
                                                                },
                                                                t: '取消添加',
                                                                click: function(data) {
                                                                    wf.http.post(
                                                                        wf.apiServer() + "/favourite/label_delete", {
                                                                            urlmd5: urlmd5,
                                                                            // 去掉字符串中所有空格
                                                                            labelId: data.org_data.labelId
                                                                        },
                                                                        function(res) {
                                                                            wf.favorite.addFavoritePopupView(urlmd5)
                                                                            setTimeout(function() {
                                                                                pop.remove();
                                                                            }, 500)
                                                                        },
                                                                        function(err) {
                                                                            console.err('标签失败')
                                                                        }
                                                                    )
                                                                }
                                                            }
                                                        },
                                                        style: {
                                                            'width': '76px',
                                                            ' flex-shrink': '0',
                                                            'text-align': 'center',
                                                            'font': 'inherit',
                                                            'font-size': 'inherit',
                                                            'line-height': 'inherit',
                                                            'font-size': 'inherit',
                                                            'line-height': 'inherit',
                                                        }
                                                    }
                                                ],

                                            }, ],

                                        }]
                                    }, ]
                                }, {
                                    e: 'div',
                                    style: {
                                        'display': 'flex',
                                        'justify-content': 'center',
                                    },
                                    t: {
                                        e: 'button',
                                        a: {
                                            type: 'button'
                                        },
                                        style: {
                                            width: '200px',
                                            height: ' 34px',
                                        },
                                        t: '创建标签',
                                        click: function() {
                                            pop.remove()
                                            wf.favorite.addLabelPopupView(urlmd5)
                                        }
                                    }
                                }, ]
                            }
                        })
                    }
                });
            }
        )
        //标签名是否重复
    function isInArray(arr, value) {
        for (var i = 0; i < arr.length; i++) {
            if (value === arr[i].labelName) {
                return true;
            }
        }
        return false;
    }
    //标签提示语显示
    function labelPromptShow(word) {
        $('#label_prompt').html(word);
        // $('#label_prompt').css('display','inline');
        $('#label_prompt').attr('send-state', false);
    }
    //标签提示语隐藏
    function labelPromptHide() {
        $('#label_prompt').attr('send-state', true);
        $('#label_prompt').html('仅限12个字符！');
        // $('#label_prompt').css('display','none');
    }

}

//  jsbuilder/wf/favorite/wf.favorite.addLabel.js

wf.favorite.addLabelPopupView = function(urlmd5, callback) {
    // var labelArr;
    // wf.http.post(
    //     wf.apiServer() + "/favourite/label_name", {
    //         urlmd5: urlmd5
    //     },
    //     function(labelByUrl) {
    //         labelArr = labelByUrl.list;
    //     }
    // );
    var Bubbel = function(ele) {
        //已选的标签
        this.myBubbels
            //可选的标签
        this.allBubbels
            //渲染位置
        this.e = ele
        this.craeteBubbel = function(id, name) {
            return { "labelId": id, "labelName": name }
        }
        this.putBubbel = function(bubbel) {
            let index = 0;
            //是否已经存在于myBubbels
            for (index = 0; index < this.myBubbels.length; index++) {
                if (this.myBubbels[index].labelName == bubbel.labelName) {
                    return -1;
                }
            }
            this.myBubbels.push(bubbel)
                //从allBubbel中移除bubbelName
            for (index = 0; index < this.allBubbels.length; index++) {
                if (this.allBubbels[index].labelName == bubbel.labelName) {
                    this.allBubbels.splice(index, 1);
                    break;
                }
            }
            // console.log(this.myBubbels)
            // console.log(this.allBubbels)
        }
        this.removeBubbel = function(bubbel) {
            let index = 0;
            for (index = 0; index < this.myBubbels.length; index++) {
                if (this.myBubbels[index].labelName == bubbel.labelName) {
                    this.myBubbels.splice(index, 1);
                    break;
                }
            }
            this.allBubbels.push(bubbel)
        }
        this.renderBubbles = function() {
            if (!ele) {
                console.error('no element');
            }
            // console.log('renderBubbles function')
            $(this.e).empty().render({
                data: { list: this.myBubbels, list2: this.allBubbels },
                template: [{
                    e: 'div',
                    style: { 'border-bottom': '1px solid #ccc' },
                    t: ['已选标签：', {
                        foreach: 'list',
                        t: {
                            e: 'span',
                            a: {
                                class: 'label_delete'
                            },
                            t: ['[[labelName]]', {
                                e: 'i',
                                t: 'x',
                                click: function(param) {
                                    bubbles.removeBubbel(param.org_data)
                                    renderBubbles()
                                }
                            }]
                        }
                    }, {
                        e: 'span',
                        a: {
                            class: 'label_delete'
                        },
                        t: '+ 标签',
                        click: function(e) {
                            // addLable(param.org_data.labelName)
                            // console.log('render add wondwos')
                            renderAddNewLableWindows(e)
                        }
                    }]
                }, {
                    e: 'div',
                    t: ['可选标签：', {
                        foreach: 'list2',
                        t: {
                            e: 'span',
                            a: {
                                class: 'label_delete'
                            },
                            t: ['[[labelName]]'],
                            click: function(param) {
                                //使用了delete标签的css，此操作为添加已有标签到数据库
                                bubbles.putBubbel(param.org_data)
                                renderBubbles()
                            }
                        }
                    }]
                }, {
                    e: 'div',
                    style: {
                        'text-align': 'right'
                    },
                    t: [{
                        e: "button",
                        t: "确定",
                        style: {
                            'margin-right': '10px'
                        },
                        click: function() {
                            sendLable()
                            pop.remove();
                        }
                    }, {
                        e: "button",
                        t: "取消",
                        click: function(e) {
                            pop.remove();
                        }
                    }]
                }]
            })
        }
    };
    //内容
    var container
        //弹窗
    var pop = poplayer({
        header: "添加标签",
        width: "500px",
        height: "auto",
        render: function(e) {
            container = e.container
        }
    });
    //气泡渲染
    var bubbles = new Bubbel(container);
    wf.http.post(
        wf.apiServer() + "/favourite/label_name_get", { urlmd5: urlmd5 },
        function(data) {
            bubbles.myBubbels = data.list2
            bubbles.allBubbels = data.list
            bubbles.renderBubbles()
        });

    function sendLable() {
        //初始化需要保存的标签
        // console.log(bubbles.myBubbels);
        var labelName = []
            //初始化被移除的标签
        var labelId = []
        let index = 0;
        for (index = 0; index < bubbles.myBubbels.length; index++) {
            labelName.push(bubbles.myBubbels[index].labelName);

        }
        for (index = 0; index < bubbles.allBubbels.length; index++) {
            labelId.push(bubbles.allBubbels[index].labelId);

        }
        // console.log(labelName);
        wf.http.post(
            wf.apiServer() + "/favourite/label_delete", { urlmd5: urlmd5, labelId: labelId },
            function() {
                wf.http.post(
                    wf.apiServer() + "/favourite/label_add", { urlmd5: urlmd5, labelName: labelName },
                    function() {
                        renderBubbles()
                        callback && callback();
                    });
            });

    }
    //标签名是否重复
    function isInArray(arr, value) {
        for (var i = 0; i < arr.length; i++) {
            if (value === arr[i].labelName) {
                return true;
            }
        }
        return false;
    }

    function renderBubbles() {
        bubbles.renderBubbles()
    }

    function renderAddNewLableWindows(e) {
        var oldEle = e.sender
        var parentEle = $(e.sender).parent();
        var renderEle = function(e) {
            $(e).render({
                e: 'input',
                class: 'label_delete',
                style: {
                    'padding': '4px 10px',
                    'width': '80px'
                },
            })
        }
        var backEle = function(e) {
            // console.log(e);
            $(e).render({
                e: 'span',
                a: {
                    class: 'label_delete'
                },
                t: '+ 标签',
                click: function(e) {
                    // addLable(param.org_data.labelName)
                    // console.log('render add wondwos')
                    renderAddNewLableWindows(e)
                }
            })
        }
        var addBub = function() {
            let value = parentEle.children('input')[0].value;
            parentEle.children('input').remove();

            if (value === "" || !value) {
                backEle(parentEle)
            } else {
                if (!(/^[\w\u4e00-\u9fa5]+$/.test(value))) {
                    dialog.fail('仅支持中英文、数字、下划线！')
                    backEle(parentEle)
                    return -1;
                }
                let bub = bubbles.craeteBubbel()
                bub.labelId = value;
                bub.labelName = value;
                bubbles.putBubbel(bub);
                renderBubbles()
            }
        }
        e.sender.remove();
        renderEle(parentEle);
        parentEle.children().focus()
        parentEle.children().blur(addBub)
        parentEle.children().on('keypress', function(event) {
            if (event.keyCode == 13) {
                addBub()
            }
            if (event.currentTarget.value.length > 12) {
                $(event.currentTarget).val(event.currentTarget.value.substring(0, 12));
            }
        });
    }
}

//  jsbuilder/wf/favorite/wf.favorite.inputRules.js


wf.favorite.inputRules = function () {
    var xxx //如果要添加共享变量，放在这里。

    // 返回一组事件处理函数。
    return {
        'keyup':function (p) {
            if ($('#fav_label').val() == null || $('#fav_label').val() == ''){
                //显示提示语
                $('#label_prompt').html("请填写标签！");
                // $('#label_prompt').css('display','inline');
                $('#label_prompt').attr('send-state',false);
            }else if(!(/^[\w\u4e00-\u9fa5]+$/.test($('#fav_label').val()))){
                $('#label_prompt').html("仅支持中英文、数字、下划线！");
                // $('#label_prompt').css('display','inline');
                $('#label_prompt').attr('send-state',false);
            }else if (p.new_data.fav_label.length>12){
                $('#fav_label').val(p.new_data.fav_label.substring(0,12));
            }
            else {
                $('#label_prompt').attr('send-state',true);
                $('#label_prompt').html('仅限12个字符！');
                // $('#label_prompt').css('display','none');
            }
        }
    }
}

//  jsbuilder/wf/notify/wf.notify.changeNum..js

wf.notify.changeNum = function(numEle) {
    if( numEle.length>0){
           
        var oldTotalCount = $('wf-sns-notify notify-total-number').data('num')
        var newTotalCount = (parseInt(oldTotalCount) - parseInt( numEle.data('num')))
        $('wf-sns-notify notify-total-number').data('num',newTotalCount)
        if(newTotalCount>99){
            newTotalCount = '99+'
        }else{
            newTotalCount = newTotalCount +''
        }
        $('wf-sns-notify notify-total-number').text(newTotalCount)
        
        if(parseInt($('wf-sns-notify notify-total-number').data('num'))>0){

            $('wf-sns-notify notify-total-number').show()
        }else{
            $('wf-sns-notify notify-total-number').hide()
        }
        numEle.remove()
        
    }
    
}

//  jsbuilder/wf/notify/wf.sns.notify.js

$.fn.extend({
    notify: function() {
        $('wf-sns-notify', this).each(function(i, element) {
            unreadMessage(element)
            let timer = setInterval(function() {
                unreadMessage(element)
            }, 1000 * 60)

            function unreadMessage(element) {
                var headers = {}

               
                if(wf.cookie.get('sync_login_wfpub_token')){
                    // 主站用主站的key
                    headers['X-Ca-AppKey']= wf.masterStationFlag()
                }else {
                    headers['X-Ca-AppKey'] = wf.appFalg()
                }
                wf.http.post({
                        url: wf.apiServer() + '/sns/notify_count',
                        data: {},
                        headers: headers,
                    },
                    function(data) {
                        if (!data) {
                            return
                        }
                        $(element).empty().render({
                            data: data,
                            event: {
                                mouseleave: function() {
                                    $(element).children('.fa-caret-up').css('display', 'none')
                                    $(element).children('notify-detail-ul').css('display', 'none')
                                }
                            },
                            template: [{
                                    e: 'a',
                                    a: {
                                        id: 'sns',
                                        href: '/my'
                                    },
                                    t: [{
                                            e: 'i',
                                            class: 'fa fa-comments',
                                        },

                                    ],
                                    event: {
                                        mouseover: function(e) {
                                            $(e.sender).siblings('notify-detail-ul').css('display', 'block')
                                            $(e.sender).siblings('.fa-caret-up').css('display', 'block')
                                        }
                                    }

                                },
                                {
                                    e: 'notify-total-number',
                                    a: {
                                        'data-num': function(e) {
                                            return e.data.totalCount

                                        }

                                    },
                                    t: function(e) {
                                        if (e.data.totalCount) {
                                            var num = e.data.totalCount
                                            if (e.data.totalCount > 99) {
                                                num = '99+'
                                            }
                                            return num
                                        } else {
                                            $(e.container).css('display', 'none')
                                        }
                                    }
                                },
                                // {
                                //     e: 'i',

                                //     class:'fa fa-caret-up',
                                // },
                                {
                                    e: 'notify-detail-ul',
                                    style: {
                                        display: 'none',

                                    },
                                    t: [{
                                            e: 'notify-detail-li',
                                            t: {
                                                e: 'a',
                                                a: {
                                                    href: '/my'
                                                },
                                                style: {
                                                    cursor: 'pointer'
                                                },
                                                t: '社区'
                                            }
                                        },
                                        {
                                            e: 'notify-detail-li',
                                            t: {
                                                e: 'a',
                                                style: {
                                                    cursor: 'pointer'
                                                },
                                                click: renderAtNotify,
                                                t: function(e) {
                                                    if (e.data.messageUnreadCount) {
                                                        var num = e.data.messageUnreadCount
                                                        if (e.data.messageUnreadCount > 99) {
                                                            num = '99+'
                                                        }

                                                        return '@我的   ' + '<notify-number class="messageUnreadCount" data-num=' + e.data.messageUnreadCount + '>' + num + '</notify-number>'
                                                    } else {
                                                        return '@我的'
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            e: 'notify-detail-li',
                                            t: {
                                                e: 'a',
                                                style: {
                                                    cursor: 'pointer'
                                                },
                                                click: renderAtCommentNotify,
                                                t: function(e) {
                                                    if (e.data.commentUnreadCount) {
                                                        var num = e.data.commentUnreadCount
                                                        if (e.data.commentUnreadCount > 99) {
                                                            num = '99+'
                                                        }
                                                        return '@我的评论   ' + '<notify-number class="commentUnreadCount" data-num=' + e.data.commentUnreadCount + '>' + num + '</notify-number>'
                                                    } else {
                                                        return '@我的评论'
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            e: 'notify-detail-li',
                                            t: {
                                                e: 'a',
                                                style: {
                                                    cursor: 'pointer'
                                                },
                                                click: renderCommentReceivedNotify,
                                                t: function(e) {
                                                    if (e.data.commentReceivedCount) {
                                                        var num = e.data.commentReceivedCount
                                                        if (e.data.commentReceivedCount > 99) {
                                                            num = '99+'
                                                        }
                                                        return '收到的评论   ' + '<notify-number class="commentReceivedCount" data-num=' + e.data.commentReceivedCount + '>' + num + '</notify-number>'
                                                    } else {
                                                        return '收到的评论'
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            e: 'notify-detail-li',
                                            t: {
                                                e: 'a',
                                                style: {
                                                    cursor: 'pointer'
                                                },
                                                click: renderPraisedNotify,
                                                t: function(e) {
                                                    if (e.data.messagePraisedCount) {
                                                        var num = e.data.messagePraisedCount
                                                        if (e.data.messagePraisedCount > 99) {
                                                            num = '99+'
                                                        }
                                                        return '收到的赞' + '<notify-number class="messagePraisedCount" data-num=' + e.data.messagePraisedCount + '>' + num + '</notify-number>'
                                                    } else {
                                                        return '收到的赞'
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            e: 'notify-detail-li',
                                            t: {
                                                e: 'a',
                                                style: {
                                                    cursor: 'pointer'
                                                },
                                                click: renderChatNotify,
                                                t: function(e) {
                                                    if (e.data.chatUnreadCount) {
                                                        var num = e.data.chatUnreadCount
                                                        if (e.data.chatUnreadCount > 99) {
                                                            num = '99+'
                                                        }
                                                        return '私信   ' + '<notify-number class="chatUnreadCount" data-num=' + e.data.chatUnreadCount + '>' + num + '</notify-number>'
                                                    } else {
                                                        return '私信'
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            e: 'notify-detail-li',
                                            t: {
                                                e: 'a',
                                                style: {
                                                    cursor: 'pointer'
                                                },
                                                click: renderFollowNotify,
                                                t: function(e) {
                                                    if (e.data.followUnreadCount) {
                                                        var num = e.data.followUnreadCount
                                                        if (e.data.followUnreadCount > 99) {
                                                            num = '99+'
                                                        }
                                                        return '关注   ' + '<notify-number class="followUnreadCount" data-num=' + e.data.followUnreadCount + '>' + num + '</notify-number>'
                                                    } else {
                                                        return '关注'
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                            ],
                        })

                    },
                    function(error) {
                        //清空定时器
                        clearInterval(timer)
                        console.log(error)
                    })
            }

            function renderFollowNotify(e) {
                window.open(wf.wfPubServer() + '/my#fans')
                hanldeData(e)
            }

            function renderAtNotify(e) {
                window.open(wf.wfPubServer() + '/my#message/at')
                hanldeData(e)

            }


            function renderAtCommentNotify(e) {
                window.open(wf.wfPubServer() + '/my#comments/at')
                hanldeData(e)


            }

            function renderCommentReceivedNotify(e) {
                window.open(wf.wfPubServer() + '/my#comments/received')
                hanldeData(e)
            }

            function renderChatNotify(e) {
                window.open(wf.wfPubServer() + '/my#chat/all')
                hanldeData(e)

            }

            function renderPraisedNotify(e) {
                window.open(wf.wfPubServer() + '/my#praise/receive')
                hanldeData(e)
            }

            function hanldeData(e) {
                var numEle = $(e.sender).find('notify-number')
                wf.notify.changeNum(numEle)
                setTimeout(function() {
                    unreadMessage(element)
                }, 1000)

            }

        })





    }
})

$(document).on('mouseleave', 'wf-sns-notify', function() {
    $(this).children('notify-detail-ul').css('display', 'none')
    $(this).children('.fa-caret-up').css('display', 'none')
})

$(function() {
    $(document).notify()
})

//  jsbuilder/wf/oad/oaisubmit.js

$.fn.extend({
    oaisubmit: function () {
        $('wf-oad-submit', this).each(function (i, element) {
            wf.oadSubmit(element)
        })
    }
})

wf.oadSubmit = function (element) {
    $(element).empty()
    var queryData = {
        appId: element.getAttribute("app_id")
    }
    renderOadSubmit(queryData);

    function renderOadSubmit (data) {
        $(element).empty().render({
            data: data,
            template: {
                div: [
                    {
                        fieldset: [
                            { f2: { span: data.appId, name: 'appId' }, title: 'appId:', style: { 'margin-bottom': '7px' } },
                            {
                                f2: { input: '', name: 'name', style: { width: 'calc(100% - 97px)' } },
                                title: '数据源名称:',
                                style: { 'margin-bottom': '7px' }
                            },
                            {
                                f2: { input: '', name: 'baseUrl', style: { width: 'calc(100% - 97px)' } },
                                title: '数据源URL:',
                                style: { 'margin-bottom': '7px' }
                            },
                            {
                                f2: {
                                    e: 'select',
                                    name: "protocal",
                                    style: { width: 'calc(100% - 97px)' },
                                    t: [
                                        { option: 'OAI-PMH2.0', value: 'OAI-PMH2.0' },
                                        { option: 'JsonPMH1.0', value: 'JsonPMH1.0' },
                                    ],
                                }, title: '协议:',
                                style: { 'margin-bottom': '7px' }
                            },
                            { button: 'submit', id: 'submitBtn', click: oaisubmitBtn }
                        ],
                        title: '添加数据源:'
                    },
                    {
                        table: [
                            {
                                thead: [{
                                    tr: [
                                        { th: '名称' },
                                        { th: '收录数量' },
                                        { th: '最早' },
                                        { th: '最新' },
                                        { th: 'OAI-PMH状态' },
                                        { th: '信息' },
                                        { th: '操作' },
                                    ]
                                }]

                            }, {
                                tbody: function () {
                                    getList(queryData);
                                },
                                class: 'oaiList'
                            },]
                    },
                    {
                        div: '',
                        class: 'page',


                    }
                ],

            }

        });
    }


    function oaisubmitBtn (p) {
        if (!$.trim(p.new_data.baseUrl) || !$.trim(p.new_data.name)) {
            dialog.fail("数据源URL 或 数据源名称不能为空！")
            return;
        }
        $(p.sender).attr('disabled', true);
        var data = {};
        data = Object.assign(p.new_data, p.org_data)
        wf.http.get(wf.apiServer() + '/wfmetadata/repository_wfpub_submit', data, function (data) {
            if (data) {
                $(p.sender).attr('disabled', false);
                $(p.sender).siblings('f2').find("input[name='baseUrl']").val('');
                $(p.sender).siblings('f2').find("input[name='name']").val('');
                getList(queryData);
            }
        }, function (error) {
            console.log(error)
        })
    }
    function getList (queryData) {
        wf.http.get(
            wf.apiServer() + '/wfmetadata/repository_wfpub_search', queryData, function (r) {
                $('.oaiList').empty().render({
                    data: r.respositoryList,
                    template: [{
                        tr: [
                            { td: { a: '[[baseUrl]]', t: '[[name]]', attr: { target: '_blank' } }, width: 200 },
                            { td: '[[capacity]]' },
                            {
                                td: function (e) {
                                    if (e.data.last_identify_time) {
                                        return e.data.last_identify_time.substr(0, e.data.last_identify_time.length - 7)
                                    }

                                }
                            },
                            {
                                td: function (e) {
                                    if (e.data.last_fetch_time) {
                                        return e.data.last_fetch_time.substr(0, e.data.last_fetch_time.length - 7)
                                    }

                                }
                            },
                            {
                                td: function (e) {
                                    switch (e.data.bot_status) {
                                        case 'error':
                                            return '抓取错误'
                                        case 'ready':
                                            return '准备抓取'
                                        case 'OK':
                                            return '抓取完成'
                                        case 'fetching':
                                            return ' 抓取中'
                                        case 'examine':
                                            return '准备审核'
                                        case 'examineing':
                                            return '审核中'
                                        case 'examineFalse':
                                            return '审核失败'
                                    }
                                }
                            },
                            {
                                td: '[[examineMessage]]',
                                width: 192,
                            },
                            {
                                td: [

                                    {
                                        e: 'm-wf-button',
                                        t: (r.respositoryList) ? '重新审核/抓取' : '',
                                        style: {
                                            'cursor': 'pointer',
                                            'margin-right': '20px'
                                        },
                                        click: resetOadSubmit

                                    },
                                    {
                                        e: 'm-wf-button',
                                        t: (r.respositoryList) ? '修改' : '',
                                        style: {
                                            'cursor': 'pointer'
                                        },
                                        click: updateOadSubmit
                                    },
                                    {
                                        fieldset: [

                                            {
                                                f2: { input: '', name: 'update_name', style: { width: 'calc(100% - 97px)' }, value: '[[name]]' },
                                                title: '数据源名称:',
                                                style: { 'margin-bottom': '7px', 'display': 'block' }
                                            },

                                            {
                                                f2: { input: '', name: 'update_baseUrl', style: { width: 'calc(100% - 97px)' }, value: '[[baseUrl]]' },
                                                title: '数据源URL:',
                                                style: { 'margin-bottom': '7px' }
                                            },
                                            {
                                                f2: {
                                                    e: 'select',
                                                    id: 'sel',
                                                    name: "update_protocal",
                                                    style: { width: 'calc(100% - 97px)' },
                                                    t: [
                                                        { option: 'OAI-PMH2.0', value: 'OAI-PMH2.0', },
                                                        { option: 'JsonPMH1.0', value: 'JsonPMH1.0' },
                                                    ],
                                                }, title: '协议:',
                                                style: { 'margin-bottom': '7px'}
                                            },
                                            { button: 'submit', id: 'submitUpdateBtn', click: oaisubmitUpdateBtn }
                                        ],
                                        class: 'updatePop',
                                        title: '数据源修改:',
                                        style: {
                                            'display': 'none',
                                            'position': 'absolute',
                                            'left': '-216%',
                                            'width': '410px',
                                            'z-index': '999',
                                            'background': '#fff'
                                        }

                                    },

                                ],
                                style: { 'position': 'relative' }
                            },

                        ],

                    }]
                }),
                    $('.page').empty().render({
                        data: r,
                        template:
                            (r.pageCount) ? function (d) {
                                pageFun(d, function (page) {
                                    queryData.page = page;
                                    getList(queryData)
                                })
                            } : "暂无数据"
                    })
            }
        )
    }
    function pageFun (r, callback) {
        $(r.container).empty().render({
            data: r.data,
            template: (r.data.pageCount) ? {
                e: "pager",
                t: [
                    "共[[pageCount]]页",
                    {
                        e: "button",
                        t: function (d) {
                            $(d.container).text('上一页')
                            if (d.data.page === 1) {
                                $(d.container).addClass("disable");
                            }
                        },
                        click: function (d) {
                            var page = d.org_data.page;
                            if (page > 1) {
                                callback(page - 1);
                            }
                        }
                    },
                    {
                        e: 'select',
                        a: { name: 'select_page' },
                        t: function (d) {
                            var pageArr = [];
                            if (d.data.pageCount > 0) {
                                for (var i = 0; i < d.data.pageCount; i++) {
                                    pageArr.push({ page: "第" + (i + 1) + "页" });
                                }
                                $(d.container).render({
                                    data: pageArr,
                                    e: '',
                                    template: [{
                                        e: 'option',
                                        value: "[[page]]",
                                        t: function (r) {
                                            $(r.container).text(r.data.page);
                                            if (r.data.page == "第" + (d.data.page) + "页") {
                                                $(r.container).attr({ selected: "selected" });
                                            }
                                        }
                                    },]
                                });
                            }
                        },
                        event: {
                            change: function (d) {
                                var page = parseInt($(d.sender).val().substr(1, $(d.sender).val().length - 2));
                                callback(page)
                            }
                        }
                    },
                    {
                        e: "button",
                        t: function (d) {
                            $(d.container).text('下一页')
                            if (d.data.page === d.data.pageCount || !d.data.pageCount) {
                                $(d.container).addClass("disable")
                            }
                        },
                        click: function (d) {
                            var page = d.org_data.page;
                            if (page < d.org_data.pageCount) {
                                callback(page + 1);
                            }
                        }
                    }
                ],
                style: { "margin-bottom": "30px", "vertical-align": "middle", "color": "black" }
            } : ""
        })
    }

    function resetOadSubmit (e) {
        var data = {
            repository: e.org_data.repository,
            appId: element.getAttribute("app_id")
        }
        wf.http.get(
            wf.apiServer() + '/wfmetadata/repository_wfpub_reset', data,
            function (res) {  getList(queryData); },
            function (err) {
                if (err.err_message) {

                    dialog.fail(err.err_message);

                }
            })
    }
    function updateOadSubmit (e) {
        $(".updatePop").hide();
        $(e.sender).siblings("fieldset").toggle();
        $(e.sender).siblings("fieldset").find('#sel').val(e.org_data.protocal);
    }
    //修改
    function oaisubmitUpdateBtn (e) {
        if (!$.trim(e.new_data.update_baseUrl) || !$.trim(e.new_data.update_name)) {
            dialog.fail("数据源URL 或 数据源名称不能为空！")
            return;
        }
        var data = {
            repository: e.org_data.repository,
            appId: element.getAttribute("app_id"),
            baseUrl: e.new_data.update_baseUrl,
            name: e.new_data.update_name,
            protocal: e.new_data.update_protocal
        }
        dialog.sendDialog({
            title:'<span style="color:red">请谨慎操作</span>',
            content:'<p>确认修改此条数据源吗？</p>',
            button:['取消','确定']
        },function(){

        },function(){
            wf.http.get(
                wf.apiServer() + '/wfmetadata/repository_wfpub_update', data,
                function (res) { 
                    // console.log('test'+JSON.stringify(res))
                    dialog.success(res.state)
                    getList(queryData); },
                function (err) {
                    if (err.err_message) {
                        dialog.fail(err.err_message);
                    }
                })
        })
    }
}















//  jsbuilder/wf/page/wf.page.js

// pageElement 必填 分页容器元素
// pageInfo 必填 pageInfo所需信息
// pageInfo ={
    // page     当前页数
    // maxPage  最大页数
// }
// renderData  渲染分页内容容器，请求接口的数据
// renderData ={
    // container 渲染分页内容页面的容器
    // reqData  请求接口的数据 
// }
// callback(renderData.container,renderData.reqData) 回调函数
wf.page = function (pageElement,pageInfo,renderData,callback) {
   
    var pagingArr = []
    $(pageElement).empty().render({
        data: pageInfo,
        template: [
            {
                'pager': {
                    if: function (p) {
                        return pageInfo.maxPage > 1
                    },
                    then: [
                        {
                            if: function(p) {
                                
                                return pageInfo.page != 1
                            },
                            then: {
                                e: 'wf-span',
                                a: {
                                    
                                    page: 1,
                                },
                                t: '首页',
                                click:function(e){
                                    
                                    var container = renderData.container;
                                    var req = renderData.reqData
                                    req.page = 1
                                    callback(container,req)
                                }
                            },
                           
                        },
                        {
                            if: function(p) {
                                return pageInfo.page > 1
                            },
                            then: {
                                e: 'wf-span',
                                a: {
                                    page: (Number(pageInfo.page) - 1),
                                },
                                t: '上一页',
                                click:function(e){
                                    
                                    var container = renderData.container;
                                    var req = renderData.reqData
                                    req.page = (Number( $(e.sender).attr('page')))
                                    callback(container,req)
                                }
                            }
                        },
                        {
                            if: function(p) {
                                var isShow = false
                                var nowPage = Number(pageInfo.page)
                                
                                var maxPage = Number(pageInfo.maxPage)
                                
                                if (nowPage <= maxPage) {
                                    isShow = true
                                    var begin = nowPage - 5 >= 0 ? nowPage - 3 : 1
                                    var end = Number(begin) + 6 <= maxPage ? Number(begin) + 6 : maxPage
                                    if (maxPage > 6 && maxPage - nowPage < 3) {
                                        
                                        end = maxPage
                                        
                                        begin = end - 6
                                        
                                    }
                                    while (begin <= end) {
                                        
                                        var pageObj = {
                                            e: 'wf-span',
                                            a: {
                                               
                                                page: begin,
                                            },
                                            t: begin + '',
                                            click:function(e){
                                               
                                                var container = renderData.container;
                                                
                                                var req = renderData.reqData
                                               
                                                req.page= $(e.sender).attr('page')
                                              
                                              
                                                callback(container,req)
                                            }
                                        }
                                        if (begin == nowPage) {
                                            pageObj.a.style = 'color:darkorange'
                                        }
                                        pagingArr.push(pageObj)
                                        begin++
                                    }
                                }
                                return isShow
                            },
                            then: pagingArr
                        },
                        {
                            if: function(p) {
                                return pageInfo.page < pageInfo.maxPage
                            },
                            then: [{
                                e: 'wf-span',
                                a: {
                                    
                                    page: (Number(pageInfo.page) + 1),
                                },
                                t: '下一页',
                                click:function(e){
                                    
                                    var container = renderData.container;
                                    var req = renderData.reqData
                                    req.page = (Number( $(e.sender).attr('page')))
                                    callback(container,req)
                                }
                            }]
                        },
                        {
                            e: 'wf-span',
                            class:'default',
                            t: '[[page]]/[[maxPage]]'
                        },
                        {
                            e: 'input',
                            t: '',
                            a:{
                                placeholder:'请输入页数',
                                name:"input_name"
                            }
                        },
                        {
                            e: 'wf-span',
                            t: '跳转',
                            click: function (e) {
                                var container = renderData.container;
                                var req = renderData.reqData
                                var inputName = e.new_data.input_name
                                if(Number(e.new_data.input_name)>Number(pageInfo.maxPage)){
                                    // 返回首页
                                    req.page = 1
                                }else{
                                    req.page = (Number(e.new_data.input_name))
                                }
                                
                                callback(container,req)
                            }
                        }
                    ]
                }
            }

        ]
    })
}

//  jsbuilder/wf/pagination/wf.pagination.js

$.fn.extend({
    pagination: function () {
        $('wf-pagination', this).each(function (i, element) {
            wf.pagination(element)
        })
    }
})
wf.pagination = function (element) {
    $(element.container).empty().render({
        data: element.data.pageInfo,
        template: [
            {
                e: 'button',
                t: '首页',
                click: function () {wf.searchAppstore({page:1,pageSize: 16})}
            },
            {
                e: 'button',
                t: '上一页',
                a: {
                },
                click: function () {wf.searchAppstore({page:element.data.pageInfo.page-1,pageSize: 16})}
            },
            {
                e: 'button',
                t: '下一页',
                a: {},
                click: function () {wf.searchAppstore({page:element.data.pageInfo.page+1> element.data.pageInfo.pageCount?element.data.pageInfo.pageCount : element.data.pageInfo.page+1,pageSize: 16})}
            },
            {
                e: 'button',
                t: '尾页',
                a: {},
                click: function () { wf.searchAppstore({page:element.data.pageInfo.pageCount,pageSize: 16})}
            },
            {
                e: 'span',
                t: '[[page]]/[[pageCount]]'
            }, {
                e: 'input',
                t: ''
            },
            {
                e: 'button',
                t: '跳转',
                click: function (e) { var page = $(e.sender).prev().val(); wf.searchAppstore({page:page,pageSize: 16})}
            }

        ]
    })
}

//  jsbuilder/wf/recommend/wf.recommend.js

$.fn.extend({
    recommend: function() {
        $('wf-recommend', this).each(function(i, element) {
            wf.recommend(element)
        })
    }
})

wf.recommend = function(element) {
    $(element).empty()
    init()
    function init() {
        $(element).empty().render({
            data: {},
            template:[
                {
                    e:"wf-recommend-acs-contract-apps",
                    t:function(e){
                        // 应用推荐
                        wf.recommend_acs_contract_appinfo(e.container)
                        
                    }
                },
                {
                    e:"wf-recommend-apps",
                    t:function(e){
                        // 应用推荐
                        getAPPRecommend(e.container)
                        
                    }
                },
                {
                    e:'wf-recommend-message',
                    t:function(e){
                        // 帖子推荐
                        getMessageRecommend(e.container)
                    }
                }
            ]
        })
    }
    function  getAPPRecommend(ele){
        wf.http.get(
            wf.apiServer() + "/sns/app_recommend",
            {},
            function(data) {
                $(ele).render({
                    data: data,
                    template:[
                        {
                            e:"wf-p",
                            a:{
                                class:"recommend_apps_header"
                            },
                            t:"每周应用推荐"
                        },
                        {
                            e:"wf-p",
                            a:{
                                class:"recommend_apps_content"
                            },
                            t:[
                                {
                                    e:"wf-recommend-app",
                                    datapath:'apps',
                                    t:[
                                        {
                                            e: "a",
                                            a: { href: wf.wfPubServer() +"/[[indexUrl]]" },
                                            t: {
                                                if: function(p) { return p.data.logoUrl ? true : false },
                                                then: {
                                                    e: "image",
                                                    style: {
                                                        'background-image': 'url([[logoUrl]])'
                                                    }
                                                },
                                                else: {
                                                    e: "no-img",
                                                    t: "[[appName]]"
                                                }
                                            }
                                        },
                                        {
                                            e:"wf-p",
                                            
                                            t:[
                                                {
                                                    e: 'a',
                                                    t: {
                                                        e: "wf-span", 
                                                        class:"des",
                                                        t: "[[appName]]" 
                                                    },
                                                    a: { 
                                                        href: wf.wfPubServer() +"/apps/[[indexUrl]]",
                                                        title: "查看简介" 
                                                    }
                                                },
                                                

                                            ]
                                        },
                                        {
                                            e: "wf-user",
                                            a: { 'data-nickname': "[[developer]]" },
                                            t: { 
                                                e: "a",
                                                
                                                a: {
                                                    class:"name",
                                                    href: wf.wfPubServer() + "/u/[[developer]]" 
                                                }, 
                                                t: "@[[developer]]" 
                                                
                                            }
                                        }
                                    ]

                                },
                                
                                
                            ]
                        }  
                    ]
                })
            },
            function(err){
                console.log(err)

            }
        )
    }
    function getMessageRecommend (ele){
        wf.http.get(
            wf.apiServer() + "/sns/message_recommend",
            {},
            function(data) {
                $(ele).render({
                    data: {},
                    template: {
                                e:"wf-p",
                                a:{
                                    class:"recommend_message_header"
                                },
                                t:"每周帖子推荐"
                        }
                })
                $(ele).render({
                    data: data.messages,
                    template:[
                        {
                            e:"message-detail",
                            datapath:"messages",
                            t:[
                                {
                                    'message-body': [
                                        {
                                            e: 'wf-user',
                                            a: {
                                                class: 'avatar',
                                                'data-nickname': '[[user/nickname]]',
                                            },
                                            t: [
                                                {
                                                    e: 'img',
                                                    a: {
                                                        src: '[[user/avatarUrl]]',
                                                        class: 'avatar-img'
                                                        
                                                    }
                                                }
                                            ],
                                            click: function (e) {
                                                window.open(wf.wfPubServer() + '/u/' + e.org_data.user.nickname)
                                            }
                                        },
                                        {
                                            e: 'wf-user',
                                          
                                            a: {
                                                class: 'author nickname',
                                                'data-nickname': '[[user/nickname]]'
                                            },
                                            t: '[[user/nickname]]',
                                            click: function (e) {
                                                window.open(wf.wfPubServer() + '/u/' + e.org_data.user.nickname)
                                            }
                                        },
                                        {
                                            e: 'create-time',
                                            t: function (e) {
                                                return wf.replace.dateDiff(e.data.createTime)
                                            },
                                            click: function (e) {
                                                var url = wf.wfPubServer() + '/m/' + e.org_data.messageId
                                                window.open(url)
                                            }
                                        },
                                        // // 渲染精选标识
                                        // {
                                        //     e: 'excellent-badge',
                                        //     t: renderExcellentImgStrategy
                                        // },
                                   ]
                                },
                                {
                                    e:'wf-p',
                                    class:'content',
                                    t:'[[content]]',
                                    click:function(e){
                                        window.open(wf.wfPubServer() + '/m/' + e.org_data.messageId)
                                        
                                    }
                                },
                            ]
                        }
                    ]
                })
            },
            function(err){
                console.log(err)
            }
        )
    }
}


//  jsbuilder/wf/recommend/wf.recommend_acs_contract_appinfo.js

wf.recommend_acs_contract_appinfo= function(ele) {
    getAcsContractAppinfo(ele)
    
    function  getAcsContractAppinfo(ele){
        wf.http.post(
            wf.apiServer() + "/acs/acs_contract_appinfo",
            {},
            function(data) {
                var resDate = data.dlist
                var moreData = []
                if(data.dlist){
                    if(data.dlist.length>3){
                        data.dlist = data.dlist.slice(0,3)
                        moreData =  resDate.slice(3)
                    }
                   
                    $(ele).render({
                        data: data,
                        template:{
                            e:'wf-recommend-acs-app',
                            t: [
                                {
                                    e:"wf-p",
                                    a:{
                                        class:"recommend_apps_header clearfloat"
                                    },
                                    t:[
                                        {
                                            e:'wf-span',
                                            class:'acs_header',
                                            t:'已购买应用'
                                        },
                                        {
                                            if:function(e){
                                                
                                                return resDate.length>3 ? true:false
    
                                            },
                                            then:  {
                                                e:'wf-recommend-acs-handle',
                                                t:[
                                                    {
                                                        e:'wf-span',
                                                        class:'acs_more',
                                                        t:'更多',
                                                        click:function(e){
                                                           $(e.sender).hide()
                                                           $(e.sender).siblings('.acs_pack_up').show()
                                                           $(e.sender).parents('.recommend_apps_header').siblings('wf-recommend-app-more').show()
                                                        }
                                                    },
                                                    {
                                                        e:'wf-span',
                                                        class:'acs_pack_up',
                                                        t:'收起',
                                                        click:function(e){
                                                            $(e.sender).hide()
                                                            $(e.sender).siblings('.acs_more').show()
                                                            $(e.sender).parents('.recommend_apps_header').siblings('wf-recommend-app-more').hide()
                                                        }
                                                    }
                                                    
        
                                                ]
                                            }
                                        },
                                      
                                    ]
                                },
                                {
                                    e:"wf-recommend-app-init",
                                    t:function(e){
                                        renderWfRecommendAcsApp(e,e.data.dlist)
                                    }
                                },
                                {
                                    e:"wf-recommend-app-more",
                                    t:function(e){
                                        renderWfRecommendAcsApp(e,moreData)
                                    }
                                   
                                }
                            ]
                        }
                    })
                }
                
            },
            function(err){
                console.log(err)

            }
        )
    }
    function renderWfRecommendAcsApp(e,data){
        $(e.container).render({
            data:data,
            template:[
                {
                    e:"wf-recommend-app",
                    t:[
                        {
                            e: "a",
                            a: { href: wf.wfPubServer() +"/[[indexUrl]]" },
                            t: {
                                if: function(p) { 
                                    return p.data.jdata.logoUrl ? true : false 
                                },
                                then: {
                                    e: "image",
                                    style: {
                                        'background-image': 'url([[jdata/logoUrl]])'
                                    }
                                },
                            }
                        },
                        {
                            e:"wf-p",
                            
                            t:[
                                {
                                    e: 'a',
                                    t: {
                                        e: "wf-span", 
                                        class:"des",
                                        t: "[[appName]]" 
                                    },
                                    a: { 
                                        href: wf.wfPubServer() +"/apps/[[indexUrl]]",
                                        title: "查看简介" 
                                    }
                                },
                                

                            ]
                        },
                        {
                            e: "wf-user",
                            a: { 'data-nickname': "[[developer]]" },
                            t: { 
                                e: "a",
                                
                                a: {
                                    class:"name",
                                    href: wf.wfPubServer() + "/u/[[developer]]" 
                                }, 
                                t: "@[[developer]]" 
                                
                            }
                        }
                    ]

                },
            ]
        })
       

    }
    
}


//  jsbuilder/wf/search/wf.search.js

wf.search = function () {
    //搜索框-跳转开放搜索
    $('wf-search-bar').each(function (i, element) {
        wf.search.searchBar(element)
    })

    //搜索组件
    $('wf-search-input').each(function (i, element) {
        wf.search.searchBox(element)
    })
    $('wf-search-result').each(function (i, element) {
        wf.search.searchResult(element)
    })
}
wf.search.searchBar = function (element) {
    $('wf-search-bar').empty().render({
        template: {
            'wf-search-box': [
                {
                    e: 'select',
                    t: [
                        {
                            e: 'option',
                            value: 'all',
                            t: '全部'
                        },
                        {
                            e: 'option',
                            value: 'title',
                            t: '标题'
                        },
                        {
                            e: 'option',
                            value: 'description',
                            t: '摘要'
                        },
                        {
                            e: 'option',
                            value: 'author',
                            t: '作者'
                        },
                        {
                            e: 'option',
                            value: 'year',
                            t: '年份'
                        },
                        {
                            e: 'option',
                            value: 'keyword',
                            t: '关键词'
                        }
                    ]
                },
                {
                    e: 'input',
                    event: {
                        'keydown': function (p) {
                            if (p.event.code == 'Enter' || p.event.code == 'NumpadEnter') {
                                var keyword = $(p.sender)[0].value
                                if (keyword && keyword.trim()) {
                                    window.open(wf.wfPubServer() + '/s?q=' + encodeURIComponent(keyword.trim()) + '&op=' + $(p.sender).siblings()[0].value)
                                }
                            }
                        }
                    }
                },
                {
                    e: 'button',
                    t: '全站搜索',
                    click: function (p) {
                        var keyword = $(p.sender).siblings()[1].value
                        if (keyword && keyword.trim()) {
                            window.open(wf.wfPubServer() + '/s?q=' + encodeURIComponent(keyword.trim()) + '&op=' + $(p.sender).siblings()[0].value)
                        }
                    }
                },
                {
                    e: 'button',
                    t: '应用搜索',
                    click: function (p) {
                        var keyword = $(p.sender).siblings()[1].value
                        var appId = element.getAttribute('data-appId')
                        if (keyword && keyword.trim() && appId) {
                            window.open(wf.wfPubServer() + '/s?q=' + encodeURIComponent(keyword.trim()) + '&op=' + $(p.sender).siblings()[0].value + '&appId=' + appId)
                        }
                    }
                }
            ]
        }
    })
}
wf.search.searchBox = function (element) {
    var targetURL = element.getAttribute('data-url')
    var appId = element.getAttribute('data-appid')
    $('wf-search-input').empty().render({
        template: {
            'wf-search-box': [
                {
                    e: 'select',
                    t: [
                        {
                            e: 'option',
                            value: 'all',
                            t: '全部'
                        },
                        {
                            e: 'option',
                            value: 'title',
                            t: '标题'
                        },
                        {
                            e: 'option',
                            value: 'description',
                            t: '摘要'
                        },
                        {
                            e: 'option',
                            value: 'author',
                            t: '作者'
                        },
                        {
                            e: 'option',
                            value: 'year',
                            t: '年份'
                        },
                        {
                            e: 'option',
                            value: 'keyword',
                            t: '关键词'
                        }
                    ]
                },
                {
                    e: 'input',
                    value: element.getAttribute('data-keyword') || '',
                    event: {
                        'keydown': function (p) {
                            if (p.event.code == 'Enter' || p.event.code == 'NumpadEnter') {
                                var keyword = $(p.sender)[0].value
                                if (keyword && keyword.trim()) {
                                    if (targetURL) {
                                        window.open(targetURL + '?keyword=' + encodeURIComponent(keyword.trim()) + '&searchField=' + $(p.sender).siblings()[0].value)
                                    } else if (appId) {
                                        var tab = $('wf-search-tab').children('tab').find('.active')[0] ? $('wf-search-tab').children('tab').find('.active')[0].dataset.type : 'all'
                                        $('wf-search-result').each(function (i, element) {
                                            wf.search.searchResult('', {
                                                appId: appId,
                                                q: keyword.trim(),
                                                searchField: $(p.sender).siblings()[0].value,
                                                searchType: tab,
                                                tabs: element.getAttribute('data-tabs'),
                                                clusteringFields: element.getAttribute('data-clusteringFields'),
                                            })
                                        })
                                    }
                                }
                            }
                        }
                    }
                },
                {
                    e: 'button',
                    t: '搜索',
                    click: function (p) {
                        var keyword = $(p.sender).siblings()[1].value
                        if (keyword && keyword.trim()) {
                            if (targetURL) {
                                window.open(targetURL + '?keyword=' + encodeURIComponent(keyword.trim()) + '&searchField=' + $(p.sender).siblings()[0].value)
                            } else if (appId) {
                                var tab = $('wf-search-tab').children('tab').find('.active')[0] ? $('wf-search-tab').children('tab').find('.active')[0].dataset.type : 'all'
                                $('wf-search-result').each(function (i, element) {
                                    wf.search.searchResult('', {
                                        appId: appId,
                                        q: keyword.trim(),
                                        searchField: $(p.sender).siblings()[0].value,
                                        searchType: tab,
                                        tabs: element.getAttribute('data-tabs'),
                                        clusteringFields: element.getAttribute('data-clusteringFields'),
                                    })
                                })
                            }
                        }
                    }
                }
            ]
        }
    })
    var searchField = element.getAttribute('data-field') || 'all'
    if (searchField) {
        //检索字段回显
        var options = $('wf-search-input option')
        options.each(function () {
            if (searchField == $(this)[0].value) {
                $(this)[0].selected = true
            }
        })
    }
}

wf.search.searchResult = function (element, queryData) {
    if (element) {
        queryData = {
            appId: element.getAttribute('data-appid'),
            q: element.getAttribute('data-keyword'),
            searchField: element.getAttribute('data-field') || 'all',
            searchType: 'all',
            tabs: element.getAttribute('data-tabs'),
            clusteringFields: element.getAttribute('data-clusteringFields'),
            pageNum: 1
        }
    } else {
        queryData.pageNum = 1
        if (!queryData.searchType) {
            queryData.searchType = 'all'
        }
    }
    if (queryData.appId && !isNaN(queryData.appId) && queryData.q) {
        $('wf-search-result').empty()
        if (queryData.tabs) {
            var tabArr = getTab(queryData.tabs)
            if (tabArr && tabArr.length > 1) {
                //当导航栏只有"全部"时，则无需展示
                $('wf-search-result').render({
                    template: {
                        'wf-search-tab': {
                            e: 'tab',
                            t: tabArr
                        }
                    }
                })
                $('tab-nav', element).each(function () {
                    if (queryData.searchType == $(this)[0].dataset.type) {
                        $(this).addClass('active')
                    }
                })
                $('tab-nav', element).click(function () {
                    wf.search.searchResult('', {
                        appId: queryData.appId,
                        q: queryData.q,
                        searchField: queryData.searchField,
                        searchType: $(this)[0].dataset.type,
                        tabs: queryData.tabs,
                        clusteringFields: queryData.clusteringFields
                    })
                })
            }
        }
        if (queryData.clusteringFields) {
            $('wf-search-result').render({
                template: {
                    'wf-search-aside': {
                        nav: [
                            {
                                if: function () {
                                    return queryData.clusteringFields && queryData.clusteringFields.indexOf('year') != -1
                                },
                                then: {
                                    e: 'dl',
                                    id: 'left-navigation-year'
                                }
                            },
                            {
                                if: function () {
                                    return queryData.clusteringFields && queryData.clusteringFields.indexOf('clc') != -1
                                },
                                then: {
                                    e: 'dl',
                                    id: 'left-navigation-clc'
                                }
                            },
                            {
                                if: function () {
                                    return queryData.clusteringFields && queryData.clusteringFields.indexOf('keyword') != -1
                                },
                                then: {
                                    e: 'dl',
                                    id: 'left-navigation-keyword'
                                }
                            }
                        ]
                    }
                }
            })
        }
        $('wf-search-result').render({
            template: {
                e: 'wf-search-main',
            }
        })

        wf.search.searchMain(queryData)

        if (queryData.clusteringFields && queryData.clusteringFields.indexOf('year') != -1) {
            searchClustering(queryData, {name: '年份', key: 'year'})
        }
        if (queryData.clusteringFields && queryData.clusteringFields.indexOf('clc') != -1) {
            searchClustering(queryData, {name: '分类号', key: 'clc'})
        }
        if (queryData.clusteringFields && queryData.clusteringFields.indexOf('keyword') != -1) {
            searchClustering(queryData, {name: '关键词', key: 'keyword'})
        }
    }
}

wf.search.searchMain = function (queryData) {
    var dcTemplate = [
        //标题
        {
            if: function (p) {
                return (p.data.highlight && p.data.highlight['JMETA.title.text']) || p.data.JMETA.title.length > 0
            },
            then: {
                h1: {
                    e: 'a',
                    a: {
                        href: function (p) {
                            var url = 'javascript:void(0);'
                            var sourceArr = p.data.JMETA.identifier
                            if (sourceArr && sourceArr[0]) {
                                var identifier = encodeURIComponent(sourceArr[0].text)
                                if (p.data.sourceType && p.data.sourceType == 'oa') {
                                    url = wf.wfPubServer() + '/oad/articleIdentifier/' + identifier
                                } else if (p.data.docType == 'wf_perio_article') {
                                    url = wf.wfPubServer() + '/perios/article:' + identifier
                                } else if (p.data.docType == 'wf_thesis_article') {
                                    url = wf.wfPubServer() + '/thesis/article:' + identifier
                                } else {
                                    url = sourceArr[0].url
                                }
                            }
                            return url
                        },
                        target: '_blank'
                    },
                    t: function (p) {
                        var highlightTitle = (p.data.highlight && p.data.highlight['JMETA.title.text']) ? p.data.highlight['JMETA.title.text'][0] : ''
                        var titleFirst = ''
                        var titleSecond = ''
                        p.data.JMETA.title.forEach(function (title,index) {
                            if (title) {
                                if (p.data.docType == 'wf_perio_article' || p.data.docType == 'wf_thesis_article' || p.data.docType == 'wf_conference_article') {
                                    if (title.type == 'articleTitle') {
                                        titleFirst = title.text
                                    } else if (title.type == 'enTitle') {
                                        titleSecond = title.text
                                    }else{
                                        titleFirst = title.text
                                    }
                                } else if (title.lang == 'zh') {
                                    titleFirst = title.text
                                } else if (title.lang == 'en') {
                                    titleSecond = title.text
                                } else {
                                    if (p.data.JMETA.title.length > 1) {
                                        if(index == 0){
                                            titleFirst = title.text
                                        }else if(index == 1){
                                            titleSecond = p.data.JMETA.title[index].text
                                        }
                                    } else {
                                        titleFirst = title.text
                                    }
                                }
                            }
                        })
                        if (highlightTitle) {
                            var highlight = highlightTitle.replace(new RegExp('<strong>', 'g'), '').replace(new RegExp('</strong>', 'g'), '')
                            if (queryData.q == highlight) {
                                highlightTitle = '<strong>' + highlight + '</strong>'
                            }
                            if (titleFirst == highlight) {
                                titleFirst = highlightTitle
                            }
                            if (titleSecond == highlight) {
                                titleSecond = titleFirst
                                titleFirst = highlightTitle
                            }
                        }
                        if (titleFirst) {
                            return titleFirst + ' ' + titleSecond
                        } else {
                            return titleSecond
                        }
                    },
                    click: function (e) {
                        var url = e.sender.attributes.href.value
                        if (url && url != 'javascript:void(0);') {
                            window.open(url)
                            $(e.sender).css('color', '#771caa')
                        }
                    }
                }
            }
        },
        //其他信息
        {
            'doc-info': {
                'doc-details': [
                    //作者
                    {
                        if: function(p) {
                            return p.data.JMETA.creator.length > 0
                        },
                        then: {
                            e: 'author',
                            datapath: 'authorArr',
                            t: '[[name]]'
                        }
                    },
                    //来源
                    {
                        if: function(p) {
                            return p.data.JMETA.contributor.length > 0
                        },
                        then: {
                            e: 'source',
                            t: {
                                e: 'a',
                                a: {
                                    href: function (p) {
                                        var href = 'javascript:void(0);'
                                        p.data.JMETA.contributor.forEach(function (item) {
                                            if (item.id && item.type == 'perioInfo') {
                                                href = wf.wfPubServer() + '/perios/qcode:' + encodeURIComponent(item.id)
                                            }
                                        })
                                        return href
                                    },
                                    target: '_blank'
                                },
                                t: function (p) {
                                    var sourceName
                                    p.data.JMETA.contributor.forEach(function (item) {
                                        if (item.type == 'perioInfo') {
                                            sourceName = '《' + item.name + '》'
                                        }
                                    })
                                    return sourceName
                                }
                            }
                        }
                    },
                    //摘要
                    {
                        if: function(p) {
                            return p.data.highlight && p.data.highlight['JMETA.description.text']
                        },
                        then: {
                            e: 'p',
                            a: {
                                class: 'summary'
                            },
                            t: function (p) {
                                var description = p.data.highlight['JMETA.description.text'][0].trim()
                                var replaceDescription = description.replace(new RegExp('<strong>', 'g'), 'wf_highlight_tag_strong_begin').replace(new RegExp('</strong>', 'g'), 'wf_highlight_tag_strong_end')
                                $(p.container).html(replaceDescription)
                                $(p.container).html(function () {
                                    return $(this).text().replace(new RegExp('wf_highlight_tag_strong_begin', 'g'), '<strong>').replace(new RegExp('wf_highlight_tag_strong_end', 'g'), '</strong>')
                                })
                            }
                        },
                        else: {
                            if: function(p) {
                                return p.data.JMETA.description.length > 0
                            },
                            then: {
                                e: 'p',
                                a: {
                                    class: 'summary'
                                },
                                t: function (p) {
                                    if(p.data.JMETA.description[0].text){
                                        return p.data.JMETA.description[0].text.trim()
                                    }else{
                                        return ''
                                    }
                                }
                            }
                        }
                    },
                    //时间
                    {
                        if: function(p) {
                            return p.data.JMETA.date.length > 0
                        },
                        then: {
                            'time': function (p) {
                                var templateTime
                                p.data.JMETA.date.forEach(function (item) {
                                    if (item.type == 'pubdate') {
                                        templateTime = item.text.length > 4 ? item.text.substring(0, 10) : item.text
                                    }
                                })
                                return templateTime
                            }
                        }
                    }
                ]
            }
        }
    ]
    wf.http.post(wf.apiServer() + '/search/s/data', queryData, function(data){
        window.scrollBy(0, -10000)
        if (data && data.hits && data.hits.length > 0) {
            data.hits.forEach(function (hit) {
                var highlight = hit.highlight && hit.highlight['JMETA.creator.name'] ? hit.highlight['JMETA.creator.name'][0] : ''
                var jmeta = hit.JMETA
                var authorArr = []
                for (var item in jmeta) {
                    if (item == 'creator') {
                        jmeta[item].forEach(function (creator) {
                            if (creator.name == highlight.replace(new RegExp('<strong>', 'g'), '').replace(new RegExp('</strong>', 'g'), '')) {
                                creator.name = highlight
                            }
                            authorArr.push(creator)
                        })
                    }
                }
                hit.authorArr = authorArr
            })
            var pagingArr = []
            $('wf-search-main').empty().render({
                data: data,
                template: [
                    {
                        'counter': [
                            {
                                span: '共'
                            },
                            {
                                strong: '[[total]]'
                            },
                            {
                                span: '条结果'
                            }
                        ]
                    },
                    {
                        'result': [
                            {
                                if: function(p) {
                                    return p.data.otherq
                                },
                                then: {
                                    e: 'search-filter-list',
                                    t: [
                                        {
                                            div: '限定条件：'
                                        },
                                        {
                                            e: 'search-filter-item',
                                            data: data.otherqName,
                                            t: [
                                                {
                                                    e: 'span',
                                                    t: [
                                                        '[[analysis]]',
                                                        {
                                                            e: 'search-filter-del',
                                                            a: {
                                                                original: '[[original]]'
                                                            },
                                                            click: function (p) {
                                                                var otherqArr = []
                                                                queryData.otherq.forEach(function (item) {
                                                                    var otherqDel = encodeURIComponent(p.org_data.original)
                                                                    if (item != otherqDel) {
                                                                        otherqArr.push(item)
                                                                    }
                                                                })
                                                                if (otherqArr.length > 0) {
                                                                    queryData.otherq = otherqArr
                                                                } else {
                                                                    delete queryData.otherq
                                                                }
                                                                wf.search.searchResult('', queryData)
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            {
                                e: 'article',
                                datapath: 'hits',
                                t: {
                                    switch: '[[dataType]]',
                                    case: {
                                        'JMETA_DC':dcTemplate,
                                        'JMETA_PAT':dcTemplate,
                                        'JMETA_STD':dcTemplate,
                                        'JMETA_JOURNAL': [
                                            //标题
                                            {
                                                if: function (p) {
                                                    return (p.data.highlight && p.data.highlight['JMETA.title.text']) || p.data.JMETA.title.length > 0
                                                },
                                                then: {
                                                    h1: {
                                                        e: 'a',
                                                        a: {
                                                            href: function (p) {
                                                                var url = 'javascript:void(0);'
                                                                var sourceArr = p.data.JMETA.identifier
                                                                if (sourceArr && sourceArr[0]) {
                                                                    var identifier = encodeURIComponent(sourceArr[0].text)
                                                                    if (p.data.docType == 'wf_journal') {
                                                                        url = wf.wfPubServer() + '/perios/qcode:' + identifier
                                                                    } else {
                                                                        url = sourceArr[0].url
                                                                    }
                                                                }
                                                                return url
                                                            },
                                                            target: '_blank'
                                                        },
                                                        t: function (p) {
                                                            var highlightTitle = (p.data.highlight && p.data.highlight['JMETA.title.text']) ? p.data.highlight['JMETA.title.text'][0] : ''
                                                            var titleFirst = ''
                                                            var titleSecond = ''
                                                            p.data.JMETA.title.forEach(function (title,index) {
                                                                if (title) {
                                                                    if (p.data.docType == 'wf_journal') {
                                                                        if (title.type == 'perioTitle') {
                                                                            titleFirst = title.text
                                                                        } else if (title.type == 'transTitle') {
                                                                            titleSecond = title.text
                                                                        }else{
                                                                            titleFirst = title.text
                                                                        }
                                                                    } else if (title.lang == 'zh') {
                                                                        titleFirst = title.text
                                                                    } else if (title.lang == 'en') {
                                                                        titleSecond = title.text
                                                                    } else {
                                                                        if (p.data.JMETA.title.length > 1) {
                                                                            if(index == 0){
                                                                                titleFirst = title.text
                                                                            }else if(index == 1){
                                                                                titleSecond = p.data.JMETA.title[index].text
                                                                            }
                                                                        } else {
                                                                            titleFirst = title.text
                                                                        }
                                                                    }
                                                                }
                                                            })
                                                            if (highlightTitle) {
                                                                var highlight = highlightTitle.replace(new RegExp('<strong>', 'g'), '').replace(new RegExp('</strong>', 'g'), '')
                                                                if (queryData.q == highlight) {
                                                                    highlightTitle = '<strong>' + highlight + '</strong>'
                                                                }
                                                                if (titleFirst == highlight) {
                                                                    titleFirst = highlightTitle
                                                                }
                                                                if (titleSecond == highlight) {
                                                                    titleSecond = titleFirst
                                                                    titleFirst = highlightTitle
                                                                }
                                                            }
                                                            if (titleFirst) {
                                                                return titleFirst + ' ' + titleSecond
                                                            } else {
                                                                return titleSecond
                                                            }
                                                        },
                                                        click: function (e) {
                                                            var url = e.sender.attributes.href.value
                                                            if (url && url != 'javascript:void(0);') {
                                                                window.open(url)
                                                                $(e.sender).css('color', '#771caa')
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            //其他信息
                                            {
                                                'doc-info': {
                                                    if: function(p) {
                                                        return p.data.JMETA.identifier[0] && p.data.JMETA.identifier[0].imgUrl
                                                    },
                                                    then: [
                                                        {
                                                            'figure': {
                                                                e: 'img',
                                                                a: {
                                                                    src: function (p) {
                                                                        return p.data.JMETA.identifier[0].imgUrl
                                                                    },
                                                                    title: function (p) {
                                                                        return p.data.JMETA.title[0].text
                                                                    },
                                                                    onError: 'this.src="' + wf.comServer() + '/img/search/perioDefaultImg.jpg"'
                                                                },
                                                                click: function (p) {
                                                                    var titleElement = $(p.sender).parents().siblings('h1').find('a')
                                                                    var docUrl = $(titleElement)[0].attributes.href.value
                                                                    if (docUrl && docUrl != 'javascript:void(0);') {
                                                                        window.open(docUrl)
                                                                        $(titleElement).css('color', '#771caa')
                                                                    }

                                                                }
                                                            }
                                                        },
                                                        {
                                                            'doc-other': [
                                                                //出版单位
                                                                {
                                                                    if: function(p) {
                                                                        return p.data.JMETA.publisher.length > 0
                                                                    },
                                                                    then: {
                                                                        e: 'doc-author',
                                                                        datapath: 'JMETA',
                                                                        t: {
                                                                            e: 'author',
                                                                            datapath: 'publisher',
                                                                            t: '[[hostunitName]]'
                                                                        }
                                                                    }
                                                                },
                                                                //摘要
                                                                {
                                                                    if: function(p) {
                                                                        return p.data.highlight && p.data.highlight['JMETA.description.text']
                                                                    },
                                                                    then: {
                                                                        e: 'p',
                                                                        a: {
                                                                            class: 'summary'
                                                                        },
                                                                        t: function (p) {
                                                                            var description = p.data.highlight['JMETA.description.text'][0].trim()
                                                                            var replaceDescription = description.replace(new RegExp('<strong>', 'g'), 'wf_highlight_tag_strong_begin').replace(new RegExp('</strong>', 'g'), 'wf_highlight_tag_strong_end')
                                                                            $(p.container).html(replaceDescription)
                                                                            $(p.container).html(function () {
                                                                                return $(this).text().replace(new RegExp('wf_highlight_tag_strong_begin', 'g'), '<strong>').replace(new RegExp('wf_highlight_tag_strong_end', 'g'), '</strong>')
                                                                            })
                                                                        }
                                                                    },
                                                                    else: {
                                                                        if: function(p) {
                                                                            return p.data.JMETA.description.length > 0
                                                                        },
                                                                        then: {
                                                                            e: 'p',
                                                                            a: {
                                                                                class: 'summary'
                                                                            },
                                                                            t: function (p) {
                                                                                if(p.data.JMETA.description[0].text){
                                                                                    return p.data.JMETA.description[0].text.trim()
                                                                                }else{
                                                                                    return ''
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                //时间
                                                                {
                                                                    if: function(p) {
                                                                        return p.data.JMETA.date.length > 0
                                                                    },
                                                                    then: {
                                                                        'time': function (p) {
                                                                            var templateTime
                                                                            p.data.JMETA.date.forEach(function (item) {
                                                                                if (item.type == 'pubdate') {
                                                                                    templateTime = item.text.length > 4 ? item.text.substring(0, 10) : item.text
                                                                                }
                                                                            })
                                                                            return templateTime
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    else: {
                                                        'doc-info': {
                                                            'doc-details': [
                                                                //出版单位
                                                                {
                                                                    if: function(p) {
                                                                        return p.data.JMETA.publisher.length > 0
                                                                    },
                                                                    then: {
                                                                        e: 'doc-author',
                                                                        datapath: 'JMETA',
                                                                        t: {
                                                                            e: 'author',
                                                                            datapath: 'publisher',
                                                                            t: '[[hostunitName]]'
                                                                        }
                                                                    }
                                                                },
                                                                //摘要
                                                                {
                                                                    if: function(p) {
                                                                        return p.data.highlight && p.data.highlight['JMETA.description.text']
                                                                    },
                                                                    then: {
                                                                        e: 'p',
                                                                        a: {
                                                                            class: 'summary'
                                                                        },
                                                                        t: function (p) {
                                                                            var description = p.data.highlight['JMETA.description.text'][0].trim()
                                                                            var replaceDescription = description.replace(new RegExp('<strong>', 'g'), 'wf_highlight_tag_strong_begin').replace(new RegExp('</strong>', 'g'), 'wf_highlight_tag_strong_end')
                                                                            $(p.container).html(replaceDescription)
                                                                            $(p.container).html(function () {
                                                                                return $(this).text().replace(new RegExp('wf_highlight_tag_strong_begin', 'g'), '<strong>').replace(new RegExp('wf_highlight_tag_strong_end', 'g'), '</strong>')
                                                                            })
                                                                        }
                                                                    },
                                                                    else: {
                                                                        if: function(p) {
                                                                            return p.data.JMETA.description.length > 0
                                                                        },
                                                                        then: {
                                                                            e: 'p',
                                                                            a: {
                                                                                class: 'summary'
                                                                            },
                                                                            t: function (p) {
                                                                                if(p.data.JMETA.description[0].text){
                                                                                    return p.data.JMETA.description[0].text.trim()
                                                                                }else{
                                                                                    return ''
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                //时间
                                                                {
                                                                    if: function(p) {
                                                                        return p.data.JMETA.date.length > 0
                                                                    },
                                                                    then: {
                                                                        'time': function (p) {
                                                                            var templateTime
                                                                            p.data.JMETA.date.forEach(function (item) {
                                                                                if (item.type == 'pubdate') {
                                                                                    templateTime = item.text.length > 4 ? item.text.substring(0, 10) : item.text
                                                                                }
                                                                            })
                                                                            return templateTime
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        'JMETA_BOOK': [
                                            //标题
                                            {
                                                if: function (p) {
                                                    return (p.data.highlight && p.data.highlight['JMETA.title.text']) || p.data.JMETA.title.length > 0
                                                },
                                                then: {
                                                    h1: {
                                                        e: 'a',
                                                        a: {
                                                            href: function (p) {
                                                                var url = 'javascript:void(0);'
                                                                var sourceArr = p.data.JMETA.identifier
                                                                if (sourceArr && sourceArr[0]) {
                                                                    var identifier = encodeURIComponent(sourceArr[0].text)
                                                                    if (p.data.docType == 'wf_journal') {
                                                                        url = wf.wfPubServer() + '/perios/qcode:' + identifier
                                                                    } else {
                                                                        url = sourceArr[0].url
                                                                    }
                                                                }
                                                                return url
                                                            },
                                                            target: '_blank'
                                                        },
                                                        t: function (p) {
                                                            var highlightTitle = (p.data.highlight && p.data.highlight['JMETA.title.text']) ? p.data.highlight['JMETA.title.text'][0] : ''
                                                            var titleFirst = ''
                                                            var titleSecond = ''
                                                            p.data.JMETA.title.forEach(function (title,index) {
                                                                if (title) {
                                                                    if (p.data.docType == 'wf_journal') {
                                                                        if (title.type == 'perioTitle') {
                                                                            titleFirst = title.text
                                                                        } else if (title.type == 'transTitle') {
                                                                            titleSecond = title.text
                                                                        }else{
                                                                            titleFirst = title.text
                                                                        }
                                                                    } else if (title.lang == 'zh') {
                                                                        titleFirst = title.text
                                                                    } else if (title.lang == 'en') {
                                                                        titleSecond = title.text
                                                                    } else {
                                                                        if (p.data.JMETA.title.length > 1) {
                                                                            if(index == 0){
                                                                                titleFirst = title.text
                                                                            }else if(index == 1){
                                                                                titleSecond = p.data.JMETA.title[index].text
                                                                            }
                                                                        } else {
                                                                            titleFirst = title.text
                                                                        }
                                                                    }
                                                                }
                                                            })
                                                            if (highlightTitle) {
                                                                var highlight = highlightTitle.replace(new RegExp('<strong>', 'g'), '').replace(new RegExp('</strong>', 'g'), '')
                                                                if (queryData.q == highlight) {
                                                                    highlightTitle = '<strong>' + highlight + '</strong>'
                                                                }
                                                                if (titleFirst == highlight) {
                                                                    titleFirst = highlightTitle
                                                                }
                                                                if (titleSecond == highlight) {
                                                                    titleSecond = titleFirst
                                                                    titleFirst = highlightTitle
                                                                }
                                                            }
                                                            if (titleFirst) {
                                                                return titleFirst + ' ' + titleSecond
                                                            } else {
                                                                return titleSecond
                                                            }
                                                        },
                                                        click: function (e) {
                                                            var url = e.sender.attributes.href.value
                                                            if (url && url != 'javascript:void(0);') {
                                                                window.open(url)
                                                                $(e.sender).css('color', '#771caa')
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            //其他信息
                                            {
                                                'doc-info': {
                                                    if: function(p) {
                                                        return p.data.JMETA.identifier[0] && p.data.JMETA.identifier[0].imgUrl
                                                    },
                                                    then: [
                                                        {
                                                            'figure': {
                                                                e: 'img',
                                                                a: {
                                                                    src: function (p) {
                                                                        return p.data.JMETA.identifier[0].imgUrl
                                                                    },
                                                                    title: function (p) {
                                                                        return p.data.JMETA.title[0].text
                                                                    },
                                                                    onError: 'this.src="' + wf.comServer() + '/img/search/perioDefaultImg.jpg"'
                                                                },
                                                                click: function (p) {
                                                                    var titleElement = $(p.sender).parents().siblings('h1').find('a')
                                                                    var docUrl = $(titleElement)[0].attributes.href.value
                                                                    if (docUrl && docUrl != 'javascript:void(0);') {
                                                                        window.open(docUrl)
                                                                        $(titleElement).css('color', '#771caa')
                                                                    }

                                                                }
                                                            }
                                                        },
                                                        {
                                                            'doc-other': [
                                                                //出版单位
                                                                {
                                                                    if: function(p) {
                                                                        return p.data.JMETA.publisher.length > 0
                                                                    },
                                                                    then: {
                                                                        e: 'doc-author',
                                                                        datapath: 'JMETA',
                                                                        t: {
                                                                            e: 'author',
                                                                            datapath: 'publisher',
                                                                            t: '[[hostunitName]]'
                                                                        }
                                                                    }
                                                                },
                                                                //摘要
                                                                {
                                                                    if: function(p) {
                                                                        return p.data.highlight && p.data.highlight['JMETA.description.text']
                                                                    },
                                                                    then: {
                                                                        e: 'p',
                                                                        a: {
                                                                            class: 'summary'
                                                                        },
                                                                        t: function (p) {
                                                                            var description = p.data.highlight['JMETA.description.text'][0].trim()
                                                                            var replaceDescription = description.replace(new RegExp('<strong>', 'g'), 'wf_highlight_tag_strong_begin').replace(new RegExp('</strong>', 'g'), 'wf_highlight_tag_strong_end')
                                                                            $(p.container).html(replaceDescription)
                                                                            $(p.container).html(function () {
                                                                                return $(this).text().replace(new RegExp('wf_highlight_tag_strong_begin', 'g'), '<strong>').replace(new RegExp('wf_highlight_tag_strong_end', 'g'), '</strong>')
                                                                            })
                                                                        }
                                                                    },
                                                                    else: {
                                                                        if: function(p) {
                                                                            return p.data.JMETA.description.length > 0
                                                                        },
                                                                        then: {
                                                                            e: 'p',
                                                                            a: {
                                                                                class: 'summary'
                                                                            },
                                                                            t: function (p) {
                                                                                if(p.data.JMETA.description[0].text){
                                                                                    return p.data.JMETA.description[0].text.trim()
                                                                                }else{
                                                                                    return ''
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                //时间
                                                                {
                                                                    if: function(p) {
                                                                        return p.data.JMETA.date.length > 0
                                                                    },
                                                                    then: {
                                                                        'time': function (p) {
                                                                            var templateTime
                                                                            p.data.JMETA.date.forEach(function (item) {
                                                                                if (item.type == 'pubdate') {
                                                                                    templateTime = item.text.length > 4 ? item.text.substring(0, 10) : item.text
                                                                                }
                                                                            })
                                                                            return templateTime
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    else: {
                                                        'doc-info': {
                                                            'doc-details': [
                                                                //出版单位
                                                                {
                                                                    if: function(p) {
                                                                        return p.data.JMETA.publisher.length > 0
                                                                    },
                                                                    then: {
                                                                        e: 'doc-author',
                                                                        datapath: 'JMETA',
                                                                        t: {
                                                                            e: 'author',
                                                                            datapath: 'publisher',
                                                                            t: '[[hostunitName]]'
                                                                        }
                                                                    }
                                                                },
                                                                //摘要
                                                                {
                                                                    if: function(p) {
                                                                        return p.data.highlight && p.data.highlight['JMETA.description.text']
                                                                    },
                                                                    then: {
                                                                        e: 'p',
                                                                        a: {
                                                                            class: 'summary'
                                                                        },
                                                                        t: function (p) {
                                                                            var description = p.data.highlight['JMETA.description.text'][0].trim()
                                                                            var replaceDescription = description.replace(new RegExp('<strong>', 'g'), 'wf_highlight_tag_strong_begin').replace(new RegExp('</strong>', 'g'), 'wf_highlight_tag_strong_end')
                                                                            $(p.container).html(replaceDescription)
                                                                            $(p.container).html(function () {
                                                                                return $(this).text().replace(new RegExp('wf_highlight_tag_strong_begin', 'g'), '<strong>').replace(new RegExp('wf_highlight_tag_strong_end', 'g'), '</strong>')
                                                                            })
                                                                        }
                                                                    },
                                                                    else: {
                                                                        if: function(p) {
                                                                            return p.data.JMETA.description.length > 0
                                                                        },
                                                                        then: {
                                                                            e: 'p',
                                                                            a: {
                                                                                class: 'summary'
                                                                            },
                                                                            t: function (p) {
                                                                                if(p.data.JMETA.description[0].text){
                                                                                    return p.data.JMETA.description[0].text.trim()
                                                                                }else{
                                                                                    return ''
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                //时间
                                                                {
                                                                    if: function(p) {
                                                                        return p.data.JMETA.date.length > 0
                                                                    },
                                                                    then: {
                                                                        'time': function (p) {
                                                                            var templateTime
                                                                            p.data.JMETA.date.forEach(function (item) {
                                                                                if (item.type == 'pubdate') {
                                                                                    templateTime = item.text.length > 4 ? item.text.substring(0, 10) : item.text
                                                                                }
                                                                            })
                                                                            return templateTime
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    {
                        'pager': {
                            if: function (p) {
                                return p.data.maxPage > 1
                            },
                            then: {
                                e: 'span',
                                t: [
                                    {
                                        if: function(p) {
                                            return p.data.pageNum != 1
                                        },
                                        then: {
                                            e: 'a',
                                            a: {
                                                class: 'turnPage',
                                                page: 1,
                                            },
                                            t: '首页'
                                        }
                                    },
                                    {
                                        if: function(p) {
                                            return p.data.pageNum > 1
                                        },
                                        then: {
                                            e: 'a',
                                            a: {
                                                class: 'turnPage',
                                                page: (Number(data.pageNum) - 1),
                                            },
                                            t: '上一页'
                                        }
                                    },
                                    {
                                        if: function(p) {
                                            var isShow = false
                                            var nowPage = Number(p.data.pageNum)
                                            var maxPage = Number(p.data.maxPage)
                                            if (nowPage <= maxPage) {
                                                isShow = true
                                                var begin = nowPage - 5 >= 0 ? nowPage - 3 : 1
                                                var end = Number(begin) + 6 <= maxPage ? Number(begin) + 6 : maxPage
                                                if (maxPage > 6 && maxPage - nowPage < 3) {
                                                    end = maxPage
                                                    begin = end - 6
                                                }
                                                while (begin <= end) {
                                                    var pageObj = {
                                                        e: 'a',
                                                        a: {
                                                            class: 'turnPage',
                                                            page: begin,
                                                        },
                                                        t: begin + ''
                                                    }
                                                    if (begin == nowPage) {
                                                        pageObj.a.style = 'color:darkorange'
                                                    }
                                                    pagingArr.push(pageObj)
                                                    begin++
                                                }
                                            }
                                            return isShow
                                        },
                                        then: pagingArr
                                    },
                                    {
                                        if: function(p) {
                                            return p.data.pageNum < p.data.maxPage
                                        },
                                        then: [{
                                            e: 'a',
                                            a: {
                                                class: 'turnPage',
                                                page: (Number(data.pageNum) + 1),
                                            },
                                            t: '下一页',
                                        }]
                                    }
                                ]
                            }
                        }
                    }
                ]
            })
            $('.turnPage').click(function () {
                queryData.pageNum = $(this).attr('page')
                wf.search.searchMain(queryData)
            })
        } else {
            $('wf-search-main').empty().render({
                e: 'h1',
                t: '抱歉，没有找到与 “ ' + queryData.q + '” 相关的结果'
            })
        }
    }, function(err) {
        console.log(err)
    })

}

function searchClustering(queryData, clusteringParam) {
    wf.http.post(wf.apiServer() + '/search/s/clustering', {
        q: queryData.q,
        appId: queryData.appId,
        searchType: queryData.searchType,
        searchField: queryData.searchField,
        otherq: queryData.otherq,
        clusteringField: clusteringParam.key,
    }, function(data) {
        var leftId = 'left-navigation-' + clusteringParam.key
        if (data && data.buckets && data.buckets.length > 0) {
            $('#' + leftId).empty().render({
                template: [
                    {
                        dt: clusteringParam.name
                    },
                    {
                        foreach: data.buckets,
                        t: {
                            dd: [
                                {
                                    e: 'left-key',
                                    a: {
                                        title: function (p) {
                                            if (clusteringParam.key == 'year') {
                                                return p.data.key_as_string
                                            } else {
                                                return p.data.key
                                            }
                                        }
                                    },
                                    t: function (p) {
                                        if (clusteringParam.key == 'year') {
                                            return p.data.key_as_string
                                        } else {
                                            return p.data.key
                                        }
                                    },
                                    click: function (p) {
                                        var otherq = []
                                        if (clusteringParam.key == 'year') {
                                            otherq.push(encodeURIComponent(clusteringParam.key + ':' + p.org_data.key_as_string))
                                        } else if (clusteringParam.key == 'clc') {
                                            otherq.push(encodeURIComponent(clusteringParam.key + ':' + p.org_data.clc))
                                        } else {
                                            otherq.push(encodeURIComponent(clusteringParam.key + ':' + p.org_data.key))
                                        }
                                        if (queryData.otherq) {
                                            otherq.push.apply(otherq, queryData.otherq)
                                        }
                                        wf.search.searchResult('', {
                                            q: queryData.q,
                                            appId: queryData.appId,
                                            searchType: queryData.searchType,
                                            searchField: queryData.searchField,
                                            otherq: otherq,
                                            tabs: queryData.tabs,
                                            clusteringFields: queryData.clusteringFields
                                        })
                                    }
                                },
                                {
                                    e: 'left-count',
                                    t: '([[doc_count]])'
                                }
                            ]
                        }
                    }
                ]
            })
        } else {
            $('#' + leftId).empty()
        }
    }, function(err) {
        console.log(err)
    })
}

function getTab(tabs) {
    var tabArr = [{
        e: 'tab-nav',
        a: {
            'data-type': 'all'
        },
        t: '全部'
    }]
    if (tabs.indexOf('journal') != -1) {
        tabArr.push({
            e: 'tab-nav',
            a: {
                'data-type': 'journal'
            },
            t: '期刊'
        })
    }
    if (tabs.indexOf('article') != -1) {
        tabArr.push({
            e: 'tab-nav',
            a: {
                'data-type': 'article'
            },
            t: '文献'
        })
    }
    if (tabs.indexOf('book') != -1) {
        tabArr.push({
            e: 'tab-nav',
            a: {
                'data-type': 'book'
            },
            t: '图书'
        })
    }
    if (tabs.indexOf('app') != -1) {
        tabArr.push({
            e: 'tab-nav',
            a: {
                'data-type': 'app'
            },
            t: '应用'
        })
    }
    return tabArr
}



//  jsbuilder/wf/share/wf.share.js

$.fn.extend({

    //初始化标签
    share: function() {
        var createEle
        createEle = document.createElement('script')
        createEle.setAttribute('src','https://com.wf.pub/qrcode/jquery.qrcode.min.js')
        document.head.appendChild(createEle)

        //分享菜单类
        var ShareMenu = function(ele) {
            // 属性
            // 展示元素，展示在该元素附近
            var e = ele
            var state = 0 //0:hide,1:show
            //set/get
            this.getElment = function() {
                return e
            }
            this.setElement = function(element) {
                e = element
            }
            this.getState = function() {
                return state;
            }
            this.setState = function(s) {
                state = s;
            }
            //菜单状态，显示和展开两种
            this.menuState = function() {
                var shareStates = {
                    "show": function() {
                        state = 1;
                        showShare(e)
                    },
                    "hide": function() {
                        state = 0;
                        closeShare(e)
                    }
                }
                //私有属性
                function closeShare(element) {
                    if (element.currentTarget) {
                        $(element.currentTarget).children('wf-share-container').remove();
                    } else if (element) {
                        $(element).children('wf-share-container').remove();
                    }
                }

                function showShare(element) {
                    function wxScan(e) {
                        $(e.container).render({
                            data: e.data,
                            template: {
                                e: 'wf-qrcode',
                                t: function(e) {
                                    $(e.container).qrcode({
                                        render: 'canvas', //也可以替换为table
                                        width: 80,
                                        height: 80,
                                        text: initUrl(e.data.shareUrl)
                                    })

                                }
                            }

                        })
                    }

                    function copyToClipboard(t) {
                        var e = document.createElement("textarea");
                        e.value = t, e.setAttribute("readonly", ""), e.style.cssText = "height: 1px; width: 1px; padding: 1px; position: absolute; left: -10px", document.body.appendChild(e), e.select();
                        try { document.execCommand("copy") } catch (t) { alert("Can't copy to clipboard: " + t.message) }
                        document.body.removeChild(e)
                    }

                    function initUrl(url) {
                        if (url && url.indexOf('http') == -1) {
                            return 'https://' + url;
                        }
                        return url;
                    }


                    const currentTarget = element.currentTarget;
                    var data = {
                        shareUrl: currentTarget.getAttribute('share-url'), //必选
                        shareTitle: currentTarget.getAttribute('weibo-title'),
                        shareContent: currentTarget.getAttribute('weibo-content'),
                        shareImg: currentTarget.getAttribute('weibo-img'),
                        shareDesc: currentTarget.getAttribute('copy-link')
                    }
                    //参数校验
                    if (data.shareUrl == undefined) {
                        console.error("wf-share 没有找到 share-url属性")
                        return;
                    }
                    data.shareDesc = data.shareDesc ? data.shareDesc : '';
                    data.shareTitle = data.shareTitle ? data.shareTitle : '';
                    data.shareContent = data.shareContent ? data.shareContent : '';

                    //渲染下拉框框
                    $(currentTarget).render({
                        data: data,
                        e: 'wf-share-container',
                        t: {
                            e: 'wf-pulldown-font',
                            t: {
                                e: 'wf-pulldown',
                                t: [{
                                    e: 'wf-button',
                                    t: '复制链接',
                                    click: function(param) {
                                        const data = param.org_data
                                        var clipBoardContent = data.shareDesc ? data.shareDesc : initUrl(data.shareUrl);
                                        copyToClipboard(clipBoardContent);
                                        alert('已经复制到剪切板')
                                    }
                                }, {
                                    e: 'wf-button',
                                    t: '新浪微博',
                                    click: function(param) {
                                        const data = param.org_data
                                        let url = 'https://service.weibo.com/share/share.php?'
                                        url += 'url=' + initUrl(data.shareUrl)
                                        url += '&title=' + data.shareTitle + ' - ' + data.shareContent
                                        url += '&pic=' + initUrl(data.shareImg)
                                        url += '&appkey=&ralateUid=&language=&searchPic=false'
                                        window.open(url, 'windowname', 'height=350, width=700, top=0, left=0, toolbar=no, menubar=no, scrollbars=no, resizable=no, location=no, status=no')
                                    }
                                },
                                    {
                                        e: 'wf-button',
                                        class: 'weixiShareBtn',
                                        t: ['微信/QQ扫一扫',
                                            function(e) {
                                                wxScan(e);
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    })
                }
                return {
                    show: shareStates.show,
                    hide: shareStates.hide
                }
            }()
        };
        //类的公共方法
        ShareMenu.prototype = {
            show: function() {
                this.menuState.show();
            },
            hide: function() {
                this.menuState.hide();
            }
        }
        //当前显示中的菜单
        let currentMenu = new ShareMenu();
        //渲染wf-share标签
        if ($('wf-share').length > 0) {
            $('wf-share').each(function(i, element) {
                $(element).empty().render({
                    data: {},
                    template: [{
                        e: "wf-span",
                        t: {
                            e: "img",
                            a: {
                                class: 'share_img',
                                src: wf.comServer() + '/img/pc-share.png'
                            },
                            style: {
                                'position': 'relative',
                                'top': '3px'
                            }
                        }
                    },
                        {
                            e: "wf-span",
                            t: "分享"
                        },
                    ]
                })
            })
        }
        //点击wf-share展开标签，同一时间只显示一个标签，再次点击就回收标签，点击其他区域也回收
        $('wf-share').click(function(element) {
            //如果点击的是其他标签，隐藏当前标签
            if (currentMenu.getElment() && $(element.currentTarget).children('wf-share-container').length <= 0) {
                currentMenu.hide();
            }
            //如果当前为隐藏则改为显示
            currentMenu.setElement(element)
            if (currentMenu.getState() == 1) {
                currentMenu.hide();
            } else {
                currentMenu.show()
            }
        })
    }
})

//  jsbuilder/wf/share/wf.shareButton.js

$.fn.extend({
    shareInit: function() {
        if($('wf-share-button').length>0){
            $('wf-share-button').empty().render({
                data:{},
                template:[
                    {
                        e:"wf-span",
                        t:{
                            e:"img",
                            class:'share_img',
                            a:{
                                src:wf.comServer()+'/img/pc-share.png'
                            }
                        }
                    },
                    {
                        e:"wf-span",
                        t:"分享"
                    },
                ]
            })
        }

        $('wf-share-button').click(function(element){
            wf.share(element.currentTarget)
        })

    }
})




wf.share = function(element) {
    var thirdCommentsType = true //第三方评论标识
    var data = {

        appKey:element.getAttribute('app_key') || element.getAttribute('data-app_key'),//用于公司内部,由于网关就不好解决暂时，暂时用于查询appinfo信息
        callbackUrl:element.getAttribute('callback_url') || element.getAttribute('data-callback_url'),
        nickname:element.getAttribute('nickname') || element.getAttribute('data-nickname'),
        shareType:element.getAttribute('share_type') || element.getAttribute('data-share_type'),
        loginUrl:element.getAttribute('loginurl') || element.getAttribute('data-loginurl'),
        icon: element.getAttribute('icon') || element.getAttribute('data-icon') ,
        iconHref: element.getAttribute('icon_href') || element.getAttribute('data-icon_href'),
        thirdCommentsType: thirdCommentsType, //第三方评论标识
        title: element.getAttribute('title') || element.getAttribute('data-title') || document.title, //必传
        url: element.getAttribute('url') || element.getAttribute('data-url') || ((top === self) ? window.location.href : document.referrer), //必传
        description: element.getAttribute('description') || element.getAttribute('data-description') || $('meta[name=description]').attr('content')//必传
    }
    poplayer({
        header: '分享到社区',
        width: 600,
        render: render
    })

    function render(e) {
        $(e.container).render({
            data:data,
            template: {
                e:'wf-share-init-content',
                t:[
                    {
                        e:'wf-textarea',
                        a:{
                            'data-appKey':'[[appKey]]',
                            'data-loginUrl':'[[loginUrl]]',
                            'data-icon':'[[icon]]',
                            'data-icon_href':'[[iconHref]]',
                            'data-title':'[[title]]',
                            'data-description':'[[description]]',
                            'data-url':'[[url]]',
                        },
                        t:{
                            e:'textarea',
                            a:{
                                name:"share_textarea",
                                // placeholder:'快来分享内容！！！！',
                                // value:'分享[[shareType]]'+'《[[[title]]]([[url]])》'+ '(来自：'+'@[[nickname]]' +')'
                                value:'分享[[shareType]]'+'《[[[title]]]([[url]])》'
                            },
                            t:'分享[[shareType]]'+'《[[[title]]]([[url]])》'


                        }
                    },
                    {
                        e:"wf-handle",
                        t: {
                            e:"wf-button",
                            t:"分享",
                            click:function(e){
                                var content = (e.new_data.share_textarea).trim()
                                var shareType = data.shareType ?data.shareType:''
                                var title = data.title ?data.title:''
                                var url =  data.url ?data.url:''
                                var description =  data.description ?data.description:''
                                var nickname = data.nickname ? '( 来自：@'+ data.nickname+')':''
                                if(content == '' ||content == null){
                                    dialog.fail('内容不能为空,请填写内容!')
                                    return
                                    // content = '分享'+shareType+'《['+title+']'+'('+url+')》'+ nickname

                                }
                                var commentData = {
                                    content:content,
                                    url: url,
                                    title: title,
                                    description:description,
                                }
                                if (data.icon !== '' && data.icon !== null && data.icon !== undefined) {
                                    commentData.iconUrl = data.icon
                                }
                                if (data.iconHref !== '' && data.iconHref !== null && data.iconHref !== undefined) {
                                    commentData.iconHref = data.iconHref
                                }

                                commentSendPost(commentData)

                            }
                        }
                    }



                ]
            }
        });
    }
    function commentSendPost( reqData) {
        var headers = {}
        if(wf.cookie.get('sync_login_wfpub_token')){
            // 主站用主站的key
            headers['X-Ca-AppKey']= wf.masterStationFlag()
        }else if(data.appKey){
            headers['X-Ca-AppKey'] =  reqData.appKey
        }
        wf.http.post(
            {
                url:wf.apiServer() + '/sns/message_send',
                data:reqData,
                headers:headers,
            },
            function (res) {
                dialog.success('发送成功')


                // 回调地址更改状态
                console.log(data.callbackUrl)
                if(data.callbackUrl){
                    wf.http.get(
                        data.callbackUrl,
                        function (res) {
                        },
                        function (err) {

                            wf.error(err)
                        }
                    )
                }
                $("popmask").remove()
            },
            function (err) {

                wf.error(err)
            }
        )

    }

}


//  jsbuilder/wf/sns/wf.sns.js

$.fn.extend({
    sns: function() {
        // $('wf-sns', this).each(function(i, element) {
        //    snsLoad()
        // })
        if($('wf-sns').length>0){
            var result = $('wf-sns').attr("render");
            if (!result) {
                snsLoad()
                $('wf-sns').attr("render","true");
            }
        }
        function snsLoad(){
            //社区插件
            var sns_all_plugs = [
                {
                    flag:'_sns',
                    attr: 'videojs',
                    id: 'videoJs-script',
                    url: 'https://com.wf.pub/videojs/video.min.js',
                    css: 'https://com.wf.pub/videojs/video-js.min.css'
                },
                {
                    attr: 'WfSns',
                    url: wf.snsServer() + '/js/laydate.js',
                    css: wf.snsServer() + '/js/theme/default/laydate.css?v=5.3.1'
                },
                {
                    flag:'_sns_comment',
                    attr: 'WfSns',
                    url: wf.comServer()+'/jsbuilder/sns.js',
                    // url: '/jsbuilder/sns.js',
                    css: wf.comServer()+"/font/iconfont/iconfont.css"
                },
                {
                    attr: 'feature-component',
                    id: 'feature-component-script',
                    url: 'https://com.wf.pub/android_ios_component/feature_component.js'
                },
                {
                    attr: 'MathJax',
                    id: 'mathJax-script',
                    async: true,
                    // url: 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js'
                    url:'https://com.wf.pub/mathjax/tex-mml-chtml.min.js'
                },
                {
                    attr: 'mermaid',
                    // url: 'https://cdn.jsdelivr.net/npm/mermaid@8.8.4/dist/mermaid.min.js'
                    url:'https://com.wf.pub/mermaid/mermaid.min.js'
                },
                {
                    attr: 'hljs',
                    id: 'highlight-script',
                    css: 'https://com.wf.pub/highlight/highlight.min.css',
                    url: 'https://com.wf.pub/highlight/highlight.min.js'
                    // css: 'https://cdn.wf.pub/highlight_monokai_sublime.min.css',
                    // css: 'https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.18.5/build/styles/default.min.css',
                    // url: 'https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.18.5/build/highlight.min.js'
                },
                {
                    attr: 'marked',
                    url: 'https://com.wf.pub/mark/marked.min.js'
                },
                {
                    attr: 'd3',
                    id: 'd3-script',
                    // url: 'https://com.wf.pub/d3/d3.min.js'
                    url:'https://cdn.wf.pub/d3.min.js'
                    // url: 'https://cdn.jsdelivr.net/npm/d3@6.3.1/dist/d3.min.js',//IE 十一报错
                },
                {
                    attr: 'functionPlot',
                    id: 'plot-script',
                    url: 'https://cdn.wf.pub/function-plot.js',
                    // url: 'https://com.wf.pub/functionplot/function-plot.min.js'
                    // url: 'https://cdn.jsdelivr.net/npm/function-plot@1.22.4/dist/function-plot.js',//IE 十一报错
                },
                {
                    attr: 'Viewer',
                    id: 'viewer-script',
                    url: 'https://com.wf.pub/viewer/viewer.min.js'
                    // url: 'https://cdn.jsdelivr.net/npm/viewerjs@1.9.0/dist/viewer.min.js'
                },
                {
                    attr: 'viewer',
                    id: 'jquery-viewer-script',
                    url: 'https://com.wf.pub/viewer/jquery-viewer.min.js',
                    // url: 'https://cdn.jsdelivr.net/npm/jquery-viewer@1.0.1/dist/jquery-viewer.min.js'
                },
                {
                    // 页面二维码插件
                    attr: '$.fn.qrcode',
                    url: 'https://com.wf.pub/qrcode/jquery.qrcode.min.js',
                    // url: 'https://cdn.jsdelivr.net/npm/jquery.qrcode@1.0.3/jquery.qrcode.min.js'
                },
                {
                    attr: 'file-upload',
                    id: 'jquery-ui-widget-script',
                    url: 'https://com.wf.pub/fileupload/jquery.ui.widget.min.js'
                },
                {
                    attr: 'file-upload',
                    id: 'jquery-fileupload-script',
                    url: 'https://com.wf.pub/fileupload/jquery.fileupload.min.js'
                },
                {
                    attr: 'file-upload',
                    id: 'jquery-fileupload-script',
                    url: 'https://com.wf.pub/fileupload/jquery.fileupload.min.js'
                },
            ]
            var transfer_plugs = []
            sns_all_plugs.forEach(function(item, i) {
                        if (!window[item.attr]) {
                            if (item.attr === 'MathJax') {
                                mathJax()
                            }
                            transfer_plugs.push(item)
                        }
            })
            //相当于遍历 transfer_plugs数组 ，不用$.each ，forEach 因为遍历是异步的，没走到onload，就开始新的循环了
            // (function plugsLoad(i) {
            function plugsLoad(i) {
                if (i == transfer_plugs.length) {
                    hljs.initHighlightingOnLoad()
                    //sns加载完成后
                    if ($('wf-container').length > 0 && $('wf-container wf-sns').length > 0) {
                        // 社区(先检查一遍有没有关注过的人，没有，弹用户推荐蒙版)
                        wf.isUserRecommend();
                        wf.sns.timeline.userRecommend();
                    };
                    wf.sns.topicDetail();
                    wf.sns()
                    return ;
                } else if (i == 0) {
                    createEleFun(transfer_plugs[i])
                    plugsLoad(i + 1)
                } else {
                    var createEle = createEleFun(transfer_plugs[i])
                    createEle.onload = function() {
                        //为了保证幂等特性，thirdPlugsFun这个函数调用多次和调用一次没有区别
                        if(transfer_plugs[i].attr){
                            if(!window[transfer_plugs[i].attr]){
                                window[transfer_plugs[i].attr] = true
                            }
                        }
                        plugsLoad(i + 1)
                    }

                }
            }
            plugsLoad(0)
        }
    }
})



//  jsbuilder/wf/user/experiencePop.js


wf.user.experiencePop = function () {
    
    wf.pop({
       
        class:'exp_pop all_style',
        template: [
            {
                e:'wf-pop-exp-head',
                t:'经验值指南',
            },
            {
                e:'wf-pop-exp-body',
                t:[
                    {
                        e:'wf-pop-exp-des',
                        t:[
                            {
                                e:'wf-pop-exp-title',
                                t:'I 经验值是什么'
                            },
                            {
                                e:'wf-p',
                                t:'为提升用户社区活跃积极性和等级权益，建立社区用户等级，目前用户等级分为6级，社区等级是根据用户在社区的行为（发帖、评论、转发等）所计算出的，用户可在社区进行一定的行为增加经验值以升级。'
                            }
                        ]
                
                    },
                    {
                        e:'wf-pop-exp-rule',
                        t:[
                            {
                                e:'wf-pop-exp-title',
                               
                                t:'II 经验值规则'
                            },
                            {
                                e:'table',
                               
                                a:{
                                    class:'wf_sns_table'
                                },
                                t:[
                                    {
                                        e:'thead',
                                        t:[
                                            {
                                                e:'tr',
                                                a:{
                                                    class:'wf_sns_tr'
                                                },
                                            
                                                t:[
                                                    {
                                                        e:'th',
                                                       
                                                        a:{
                                                            class:'wf_sns_th'
                                                        },
                                                        t:'行为'
                                                    },
                                                    {
                                                        e:'th',
                                                        a:{
                                                            class:'wf_sns_th'
                                                        },
                                                       
                                                        t:'经验值'
                                                    }
                                                ]
                                            },
                                        ]

                                    },
                                    {
                                        e:'tbody',
                                        a:{
                                            class:' wf_sns_tbody'
                                        }, 
                                        t:[
                                            {
                                                e:'tr',
                                                a:{
                                                    class:'wf_sns_tr'
                                                }, 
                                               
                                                t:[
                                                    {
                                                        e:'td',
                                                        a:{
                                                            class:'wf_sns_td'
                                                        }, 
                                                        t:'首次注册登录'
                                                    },
                                                    {
                                                        e:'td',
                                                        a:{
                                                            class:'wf_sns_td'
                                                        }, 
                                                        t:'+5'
                                                    }
                                                ]
                                            },
                                            {
                                                e:'tr',
                                                a:{
                                                    class:'wf_sns_tr'
                                                }, 
                                                t:[
                                                    {
                                                        e:'td',
                                                        a:{
                                                            class:'wf_sns_td'
                                                        },
                                                        t:'发帖'
                                                    },
                                                    {
                                                        e:'td',
                                                        a:{
                                                            class:'wf_sns_td'
                                                        },
                                                        t:'+3'
                                                    }
                                                ]
                                            },
                                            {
                                                e:'tr',
                                                a:{
                                                    class:'wf_sns_tr'
                                                },
                                                t:[
                                                    {
                                                        e:'td',
                                                        a:{
                                                            class:'wf_sns_td'
                                                        },
                                                        t:'帖子首次被转发'
                                                    },
                                                    {
                                                        e:'td',
                                                        a:{
                                                            class:'wf_sns_td'
                                                        },
                                                        t:'+3'
                                                    }
                                                ]
                                            },
                                            {
                                                e:'tr',
                                                a:{
                                                    class:'wf_sns_tr'
                                                },
                                                t:[
                                                    {
                                                        e:'td',
                                                        a:{
                                                            class:'wf_sns_td'
                                                        },
                                                        t:'评论'
                                                    },
                                                    {
                                                        e:'td',
                                                        a:{
                                                            class:'wf_sns_td'
                                                        },
                                                        t:'+2'
                                                    }
                                                ]
                                            },
                                            {
                                                e:'tr',
                                                a:{
                                                    class:'wf_sns_tr'
                                                },
                                                t:[
                                                    {
                                                        e:'td',
                                                        a:{
                                                            class:'wf_sns_td'
                                                        },
                                                        t:'转发'
                                                    },
                                                    {
                                                        e:'td',
                                                        a:{
                                                            class:'wf_sns_td'
                                                        },
                                                        t:'+2'
                                                    }
                                                ]
                                            },
                                            
                                            {
                                                e:'tr',
                                                a:{
                                                    class:'wf_sns_tr'
                                                },
                                                t:[
                                                    {
                                                        e:'td',
                                                        a:{
                                                            class:'wf_sns_td'
                                                        },
                                                        t:'点赞'
                                                    },
                                                    {
                                                        e:'td',
                                                        a:{
                                                            class:'wf_sns_td'
                                                        },
                                                        t:'+1'
                                                    }
                                                ]
                                            },
                                            {
                                                e:'tr',
                                                a:{
                                                    class:'wf_sns_tr'
                                                },
                                                t:[
                                                    {
                                                        e:'td',
                                                        a:{
                                                            class:'wf_sns_td'
                                                        },
                                                        t:'连续登录1天'
                                                    },
                                                    {
                                                        e:'td',
                                                        a:{
                                                            class:'wf_sns_td'
                                                        },
                                                        t:'+1'
                                                    }
                                                ]
                                            },
                                            {
                                                e:'tr',
                                                a:{
                                                    class:'wf_sns_tr'
                                                },
                                                t:[
                                                    {
                                                        e:'td',
                                                        a:{
                                                            class:'wf_sns_td'
                                                        },
                                                        t:'连续登录2天'
                                                    },
                                                    {
                                                        e:'td',
                                                        a:{
                                                            class:'wf_sns_td'
                                                        },
                                                        t:'+2'
                                                    }
                                                ]
                                            },
                                            {
                                                e:'tr',
                                                a:{
                                                    class:'wf_sns_tr'
                                                },
                                                t:[
                                                    {
                                                        e:'td',
                                                        a:{
                                                            class:'wf_sns_td'
                                                        },
                                                        t:'连续登录3到n天'
                                                    },
                                                    {
                                                        e:'td',
                                                        a:{
                                                            class:'wf_sns_td'
                                                        },
                                                        t:'+3'
                                                    }
                                                ]
                                            }
                                        ]

                                    }
                                ]
                            },
                            {
                                e:'wf-pop-exp-note',
                                t:'注 1: 连续登录中断,按照连续登录1天计算经验值'
                            },
                            {
                                e:'wf-pop-exp-note',
                                t:'注 2: 评论、转发、点赞行为每天最多增长各10个经验值'
                            }
                            

                                
                                
                        ]
              
                    },
                    {
                        e:'wf-pop-exp-upgrade',
                      
                        t:[
                            {
                                e:'wf-pop-exp-title',
                                
                                t:'III 升级解锁权益'
                            },
                            {
                                e:'wf-p',
                                t:'不同等级用户可以获得不同的权益，等级越高可获得的社区权益越多，具体内容请期待【权益中心】'
                            }
                        ]
                    }
                ]
            }
        ]
    })
  
}

//  jsbuilder/wf/user/get_url_param.js

wf.user.getUrlParam = function () {
    var url = window.location.href
    var query =  url.split('?')
    if(!query[1]){
        return {}
    }else{
        query = query[1].split('&')
        var params = {}

        for (var i = 0; i < query.length; i++) {
            var q = query[i].split('=')
            if (q.length === 2) {
                params[q[0]] = q[1]+'' ? decodeURIComponent(q[1]+ '') :q[1]+''
            }
        }
        return params

    }
}

//  jsbuilder/wf/user/other_usercard.js

$.fn.extend({
    render_other_usercard: function() {
        $('wf-other-usercard', this).each(function(i, element) {
            var requireData = {}
            var uid = element.getAttribute('uid') || element.getAttribute('data-uid') 
            var subjectRouter = element.getAttribute('subject_router') || element.getAttribute('data-subject_router')
            // var unionId = element.getAttribute('union_id') || element.getAttribute('data-union_id')
           
            // if(unionId) {
            //     requireData.unionId = unionId

            // }else{
                if (uid) {
                    requireData.uid = uid
                }
            // }

            var requestUrl =wf.apiServer() + '/sns/user_card'
            
            wf.http.get(
                requestUrl,
                requireData,
                function(resData) {
                    //动态渲染元素
                    if (resData.user) {
                        $(element).empty().render({
                            data: resData,
                            template: [
                                {
                                    e: 'wf-nickname-profile',
                                    a:{
                                        class:'clearfloat'
                                    },
                                    t:[
                                       
                                        {
                                            e:'wf-nickname',
                                            datapath: 'user',
                                            a:{
                                                title:function(e){
                                                    return e.data.nickname ? e.data.nickname : '暂无信息！'

                                                }
                                            },
                                            t:'@'+'[[nickname]]'
                                           
                                          
                                        },
                                        
                                        {
                                            e:'wf-profile',
                                            datapath: 'user',
                                            a:{
                                                title:function(e){
                                                    return e.data.profile ? e.data.profile : '暂无信息！'
    
                                                }
                                            },
                                            t:function(e){

                                                
                                                return e.data.profile ? e.data.profile : '暂无信息！'
                                            }   
                                        },
                                        {
                                                
                                            e:'wf-user-level',
                                            datapath: 'user',
                                           
                                            t:function(e){
                                                if(e.data.experience){
                                                    if(e.data.experience.level){
                                                        return 'LV' + e.data.experience.level
                                                    }
                                                   
                                                }

                                                return 'LV1'


                                            }
                                            

                                        },
                                    ]

                                },
                                function(e){  
                                   
                                    if( subjectRouter &&  subjectRouter==='my'){
                                        // 主观页显示经验值
                                        wf.user.renderExperience(e) 
                                    }
                                },
                                {
                                    e: 'user-ope',
                                    a:{
                                        class:'clearfloat'
                                    },
                                    t: [{
                                        e: 'ope-wrap',
                                        t: [{
                                            e: 'wf-p',
                                            a: {
                                                class: 'wf-follow-count'
                                            },
                                            t: '[[followCount]]'
                                        },
                                        {
                                            e: 'wf-p',
                                            t: '关注',
                                        }
                                        ],
                                        click: function(e) {
                                            if( subjectRouter &&  subjectRouter==='my'){
                                                window.open(wf.wfPubServer()+'/#following') 

                                            }else{
                                                window.open(wf.wfPubServer()+'/u/'+e.org_data.user.nickname+'/'+'#following')
                                            }
                                           
                                            
                                            // wf.user.url('u/'+e.org_data.user.nickname+'/'+'#following')

                                        }
                                    },
                                    {
                                 
                                        e: 'ope-wrap',
                                  
                           
                                        t: [{
                                            e: 'wf-p',
                                            a: {
                                                class: 'wf-fans-count'
                                            },
                                            t: '[[fansCount]]'
                                        },
                                        {
                                            e: 'wf-p',
                                            t: '粉丝'
                                        }
                                        ],
                                        click: function(e) {
                                            if( subjectRouter &&  subjectRouter==='my'){
                                                window.open(wf.wfPubServer()+'#fans')

                                            }else{
                                                window.open(wf.wfPubServer()+'/u/'+e.org_data.user.nickname+'/'+'#fans')
                                            }
                                            


                                        }
                                    },
                                    {
                                        e: 'ope-wrap',
                                        t: [{
                                            e: 'wf-p',
                                            t: '[[messageCount]]'
                                        },
                                        {
                                            e: 'wf-p',
                                            t: '发帖'
                                        }
                                        ],
                                        click: function(e) {
                                            if( subjectRouter &&  subjectRouter==='my'){
                                                window.open(wf.wfPubServer()+'#messages') 

                                            }else{
                                                window.open(wf.wfPubServer()+'/u/'+e.org_data.user.nickname+'/'+'#messages')
                                            }
                                        }
                                    }
                                    ]
                                }
                            ]
                        })

                    }
                },
                function(err) {
                    console.log(err)

                }
            )
        })
    }
})

//  jsbuilder/wf/user/renderBadge.js

// 渲染徽章
// p 中包含 container 和 data 属性 data 是user 字段的内容

wf.user.renderBadge = function (e) {
   
    if(e.data){
        var badge = e.data.badge ? e.data.badge : []
        if(badge){
            var flag = e.data.badge.indexOf('creator')
            if(  flag !== -1){
                render()
            }
        }
    }
    function render (){
        $(e.container).render({
            data:e.data,
            template: {
                e: 'wf-badge',
                t: {
                    e: 'img',
                    a: {
            
                        class:'img_badge',
                        title:'创作者',
                        src: function(e) {
                            // if (e.data.avatarUrl) {
                            //     return e.data.avatarUrl
                            // } else {
                            //     // return  wf.comServer()+'/img/default-avatar.png'
                            // }
                            return   wf.comServer()+'/img/badge-3.png'
                            // return   '/img/badge-3.png'
                        }
                    }
                }
            }
              
           
        })
    }
   
  
}

//  jsbuilder/wf/user/renderExperience.js

// 渲染经验值
// e 中包含 container 和 data 属性 

wf.user.renderExperience = function (e) {
    
    $(e.container).render({
        data:e.data.user,
        template:{
            e:'wf-user-experience',
            
            t:[
          
                {
                    e:'wf-user-experience-name',
                    t:'经验值:'
                },
                {
                    e:'wf-user-experience-value',
                    datapath: 'experience',
            
                    t:[
                        {
                            e:'wf-exp',
                            style:{
                          
                        
                          

                                width:function(e){
                                   
                           
                                    // var x = e.data.value
                             
                                    // var curLevel = e.data.level
                                    var value
                                    var limit
                                    if(e.data.value === null || e.data.value === undefined){
                                        value = 0
                                    }else{
                                        value = parseInt(e.data.value)
                                      
                                    }

                                    if(e.data.limit === null || e.data.limit === undefined){
                                        limit = 99
                                    }else{
                                        limit = e.data.limit
                                      
                                    }
                              
                               
                                    if(value===0){
                                        return 
                                    }
                                    if(limit === '--') {
                                        $(e.container).css('width','150px')
                                        $(e.container).css('border-radius','3px')
                                        return
                                    }else{
                                        limit = parseInt(limit)
                                    }
                             
                                
                              
                                    var num = (value/limit*100).toFixed(2)
                                    // 获取经验条的宽度
                                    var wfUserExperienceValue = $(e.container).parent('wf-user-experience-value')
                                    wfUserExperienceValueWidth =parseInt(wfUserExperienceValue.width())
                                 
                              
                                    if((num>=95) && (num<100)){
                              
                                        // $(e.container).css('width',(num-3+'%'))
                                        $(e.container).css('width',parseInt(num  * wfUserExperienceValueWidth / 100) -3  +'px')
                                        $(e.container).css('border-radius','3px 0 0 3px')
                                    }else if(num >= 100){
                                
                                        // $(e.container).css('width',num+'%')
                                        $(e.container).css('width',parseInt(num * wfUserExperienceValueWidth / 100) +'px')
                                        $(e.container).css('border-radius','3px')
                                    }
                                    else if(num<=1.5){
                                 
                                        $(e.container).css('width','1%')
                                        // $(e.container).css('width',parseInt(num * 150 / 100) +'px')
                                        $(e.container).css('border-radius','30px')
                                 
                                    }else if((num>1.5) && (num<95)){
                                 
                                        $(e.container).css('border-radius','3px 0 0 3px')
                                  
                                        
                                        $(e.container).css('width',parseInt(num * wfUserExperienceValueWidth / 100) +'px')
                                    }
                                }
                            }
                      

                        },
                        {
                            e:'wf-exp-num',
                     
                            t:[
                                {
                                    e:'wf-exp-num-content',
                                    a: {
                                        title: function (e) {
                                            return e.data.tips
                                        }
                                    },
                                    // t: '[[value]]/[[limit]]'
                                    t:function(e){
                                      
                                        var value = e.data.value ? e.data.value : 0
                                        var limit = e.data.limit ? e.data.limit : 99
                                        return value +'/'+ limit

                                    }
                                  
                                },
                          
                            ]
                        }
                    ]
                }
            ],
            click:function(){
                // 经验值蒙版
                wf.user.experiencePop()

            }

        }

    })
    
}

//  jsbuilder/wf/user/user_certification.js

wf.user.certification = function (e) {
    $(e.container)
        .empty()
        .render({
            data: e.data,
            template: {
                if: function (param) {
                    return $.inArray('机构', param.data.currLoginUser.role) === -1;
                },
                then: {
                    // 创作者
                    // if: function (param) {
                    //     return $.inArray('creator', param.data.currLoginUser.badge) !== -1;
                    // },
                    // then: {
                    //     e: 'img',
                    //     a: {
                    //         src: wf.comServer() + '/img/badge-3.png'
                    //     }
                    // }
                },
                else: {
                    e: 'img',
                    a: {
                        title: 'WFPUB机构认证',
                        src: wf.comServer() + '/img/attestation_mecha.png'
                    }
                }
            }
        });
};


//  jsbuilder/wf/user/user_postcard.js

wf.user.postcard = function() {

    var time = null //防止闪动加入延迟操作
    if (wf.isIosFun() || wf.isAndroidFun()) {
        // 如果是安卓或者Ios
        return false

    }

    $(document).on('mouseenter', 'wf-user', function(e) {

        clearTimeout(time) // 清空定时器

        // if($(this).is($('wf-postcard'))||$(this).parents('wf-postcard').is($('wf-postcard')) || $(this).is($('wf-user'))){
        //     return 

        // }
        if ($(e.relatedTarget).is($('wf-postcard')) || $(e.relatedTarget).parents('wf-postcard').is($('wf-postcard'))) {
            return
        }
        var _this = $(this)

        time = setTimeout(function() { // 延时操作

            //定义发送请求的数据
            var requireData = {}
                //data-(自定义属性) 和 属性 都支持
            var uid = _this.attr('uid') ? _this.attr('uid') : _this.data('uid')
            var nickname = _this.attr('nickname') ? _this.attr('nickname') : _this.data('nickname')
            if (uid) {
                requireData.uid = uid
            }
            if (nickname) {
                requireData.nickname = nickname
            }
            if (JSON.stringify(requireData) == '{}') {
                //显示暂无此用户
                renderNoUser(_this)
            } else {
                //发送ajax
                var requestUrl = wf.apiServer() + '/sns/user_card'
                getUserInfo(_this, requestUrl, requireData)

            }


        }, 800)
    })
    $(document).on('mouseenter', 'wf-postcard', function(e) {

        // e.stopPropagation() //阻止事件冒泡即可
        // e.preventDefault() //阻止默认行为


        if ($(e.relatedTarget).is($('wf-user'))) {
            var relatedTargetUid = $(e.relatedTarget).data('uid')
            var relatedTargetNickname = $(e.relatedTarget).data('nickname')

            if (relatedTargetUid) {
                if (relatedTargetUid == $(this).data('uid')) {
                    return $('wf-postcard').show()
                }
            }
            if (relatedTargetNickname) {
                if (relatedTargetNickname == $(this).data('nickname')) {
                    return $('wf-postcard').show()
                }
            }

            // 说明不是同一个wf-user

            // $('wf-postcard').hide()

        }

    })

    $(document).on('mouseleave', 'wf-user', function(e) {

        if ($(e.relatedTarget).is($('wf-postcard')) || $(e.relatedTarget).parents('wf-postcard').is($('wf-postcard'))) {

            return
        }
        if (time != null) { // 判断是否显示
            clearTimeout(time) // 清空定时器
            time = null
        }
        $('body').children('wf-postcard').remove()

    })


    $(document).on('mouseleave', 'wf-postcard', function(e) {


        if ($(e.relatedTarget).is($('wf-user'))) {
            var relatedTargetUid = $(e.relatedTarget).data('uid')
            var relatedTargetNickname = $(e.relatedTarget).data('nickname')

            if (relatedTargetUid) {
                if (relatedTargetUid == $(this).data('uid')) {
                    return
                }
            }
            if (relatedTargetNickname) {
                if (relatedTargetNickname == $(this).data('nickname')) {
                    return
                }
            }

        }
        if (time != null) { // 判断是否显示
            clearTimeout(time) // 清空定时器
            time = null
        }
        $('body').children('wf-postcard').remove()
    })
    $(document).bind('mousewheel DOMMouseScroll', function(event) {
        // 滚动条触发时，不显示wf-postcard
        if (time != null) { // 判断是否显示
            clearTimeout(time) // 清空定时器
            time = null
        }
        $('body').children('wf-postcard').remove()
    })


    //获取数据,渲染内容
    function getUserInfo(_this, requestUrl, requireData) {

        wf.http.get(
            // wf.apiServer+'/postcard/user',
            requestUrl,
            requireData,
            function(resData) {
                $('wf-postcard').remove()
                if (resData.user) {
                    // $(_this).render({
                    $('body').render({
                        data: resData,
                        template: {
                            e: 'wf-postcard',
                            a: {
                                class: function(e) {
                                    //获取蒙版位置函数
                                    return getWfPostcardSite(e, _this)
                                },
                                'data-nickname': function(e) {
                                    if (e.data.user) {
                                        if (e.data.user.nickname) {
                                            return e.data.user.nickname
                                        }
                                    }

                                },
                                'data-uid': function(e) {

                                    if (e.data.user) {
                                        if (e.data.user.uid) {
                                            return e.data.user.uid
                                        }
                                    }

                                },

                            },
                            t: [
                                // {
                                //     e:'wf-p',
                                //     style:{
                                //         background:'#fff'
                                //     },
                                //     t:{
                                //         e: 'i',
                                //         style:{
                                //             color:'#eee'
                                //         },
                                //         class:'fa fa-caret-up',
                                //     },
                                // },
                                {
                                    e: 'wf-postcard-inner',
                                    t: [{
                                            e: 'wf-userinfo',
                                            datapath: 'user',
                                            t: [{
                                                    e: 'wf-p',
                                                    a: {
                                                        class: 'wf_p_img'
                                                    },
                                                    // style:{
                                                    //     display:'block',
                                                    //     'position':'relative',
                                                    // },
                                                    t: [{
                                                            e: 'a',
                                                            t: {
                                                                e: 'img',
                                                                a: {
                                                                    class: 'avatar-img',
                                                                    src: function(e) {
                                                                        if (e.data.avatarUrl) {
                                                                            return e.data.avatarUrl
                                                                        } else {
                                                                            return wf.comServer() + '/img/default-avatar.png'
                                                                        }
                                                                    }
                                                                }

                                                            },
                                                            click: function(e) {
                                                                window.open(wf.wfPubServer() + '/u/' + e.org_data.nickname)
                                                                    // window.top.location.href =  wf.wfPubServer()+'/u/' + e.org_data.nickname
                                                            }
                                                        },
                                                        // {
                                                        //     e: 'img',
                                                        //     class:'img_v',
                                                        //     // style:{
                                                        //     //     display:'block',
                                                        //     //     position: 'absolute',
                                                        //     //     right: '120px',
                                                        //     //     top: '30px'
                                                        //     // },
                                                        //     a: {


                                                        //         src: function() {
                                                        //             return  wf.comServer()+'/img/v.png'
                                                        //         }
                                                        //     }
                                                        // },
                                                    ]
                                                },

                                                {
                                                    e: 'wf-p',
                                                    t: [{
                                                            e: 'a',
                                                            t: {
                                                                e: 'wf-span',
                                                                class: 'profile',
                                                                style: {
                                                                    width: function(e) {
                                                                        var width = parseInt($(e.container).width())
                                                                        if (width > 80) {
                                                                            return 80 + 'px'

                                                                        }
                                                                    }
                                                                },
                                                                a: {
                                                                    title: '[[nickname]]'
                                                                },
                                                                t: '[[nickname]]'

                                                            },
                                                            click: function(e) {
                                                                window.open(wf.wfPubServer() + '/u/' + e.org_data.nickname)
                                                                    // window.top.location.href =  wf.wfPubServer()+'/u/' + e.org_data.nickname
                                                            }

                                                        },

                                                        {
                                                            e: 'wf-span',
                                                            // style:{
                                                            //     position:'relative',
                                                            //     'text-align':'center',
                                                            //     width:'20px'
                                                            // },
                                                            a: {
                                                                title: '[[sex]]',
                                                                class: 'user_sex'
                                                            },
                                                            t: {
                                                                e: 'img',

                                                                // style:{
                                                                //     position:'absolute',
                                                                //     top:'-13px',
                                                                //     left:'0',
                                                                //     right:'0'
                                                                // },
                                                                a: {
                                                                    class: 'img_sex',
                                                                    src: function(e) {
                                                                        if (e.data.sex === 1) {

                                                                            return wf.comServer() + '/img/b-mars.png'
                                                                        } else if (e.data.sex === 2) {
                                                                            return wf.comServer() + '/img/p-venus.png'
                                                                        } else {
                                                                            return wf.comServer() + '/img/b-mars.png'
                                                                        }
                                                                    }
                                                                }
                                                            }

                                                        },

                                                        function(e) {


                                                            wf.user.renderBadge(e)

                                                        },
                                                        {
                                                            // e:'wf-span',
                                                            e: 'wf-user-level',
                                                            // style:{
                                                            //     'margin-left': '11px',
                                                            //     'border':'1px solid #ffbc00c7' ,
                                                            //     'border-radius': '8px',
                                                            //     'background': '#ffbc00c7',
                                                            //     'font-size':'13px'
                                                            // },
                                                            datapath: 'experience',
                                                            t: function(e) {
                                                                if (e.data.level) {
                                                                    return 'LV' + e.data.level
                                                                } else {
                                                                    return 'LV1'
                                                                }


                                                            }


                                                        }


                                                    ]

                                                },
                                                {
                                                    e: 'wf-p',
                                                    a: {
                                                        class: 'user_profile'
                                                    },
                                                    t: [{
                                                            e: 'wf-span',
                                                            a: {
                                                                class: 'info'
                                                            },
                                                            t: '介绍: '

                                                        },
                                                        {
                                                            e: 'wf-span',
                                                            a: {
                                                                class: 'info_conent',
                                                                title: function(e) {
                                                                    return e.data.profile ? e.data.profile : '暂无信息！'
                                                                }
                                                            },
                                                            // t: '[[profile]]'
                                                            t: function(e) {
                                                                return e.data.profile ? e.data.profile : '暂无信息！'
                                                            }

                                                        },

                                                    ]

                                                },
                                                {
                                                    e: 'wf-p',
                                                    t: [{
                                                        e: 'wf-ip',
                                                        a: {
                                                            class: 'ip-territory'
                                                        },
                                                        t: function(d) {
                                                            var userData = d.data.userData;
                                                            if (userData && userData.province) {
                                                                var region = userData.province;
                                                                if (region.charAt(region.length - 1) === '省') {
                                                                    region = region.substr(0, region.length - 1);
                                                                }
                                                                $(d.container).render({
                                                                    template: ['<wf-span>IP属地：</wf-span>', {
                                                                        e: 'wf-region',
                                                                        t: region
                                                                    }]
                                                                })
                                                            } else {
                                                                $(d.container).render({
                                                                    template: ['<wf-span>IP属地：</wf-span>', {
                                                                        e: 'wf-region',
                                                                        t: '未知'
                                                                    }]
                                                                })
                                                            }
                                                        },
                                                    }, ]
                                                },
                                                // {
                                                //     e:'wf-user-experience',
                                                //     datapath: 'experience',

                                                //     t:[

                                                //         {
                                                //             e:'wf-user-experience-name',
                                                //             t:'经验值:'
                                                //         },
                                                //         {
                                                //             e:'wf-user-experience-value',


                                                //             t:[
                                                //                 {
                                                //                     e:'wf-exp',
                                                //                     style:{




                                                //                         width:function(e){

                                                //                             // var x = e.data.value

                                                //                             // var curLevel = e.data.level

                                                //                             var value = parseInt(e.data.value)

                                                //                             var limit = e.data.limit
                                                //                             if(value===0){
                                                //                                 return 
                                                //                             }
                                                //                             if(limit === '--') {
                                                //                                 $(e.container).css('width','150px')
                                                //                                 $(e.container).css('border-radius','3px')
                                                //                                 return
                                                //                             }else{
                                                //                                 limit = parseInt(limit)
                                                //                             }

                                                //                             // var curLevel = 1
                                                //                             // var oldCopies = 0
                                                //                             // var curCopies = 99
                                                //                             // if(x===0){
                                                //                             //     return 
                                                //                             // }
                                                //                             // switch(curLevel) {
                                                //                             // case 1:
                                                //                             //     oldCopies = 0
                                                //                             //     curCopies = 99
                                                //                             //     break
                                                //                             // case 2:
                                                //                             //     oldCopies = 99
                                                //                             //     curCopies = 199
                                                //                             //     break
                                                //                             // case 3:
                                                //                             //     oldCopies = 299
                                                //                             //     curCopies = 499
                                                //                             //     break
                                                //                             // case 4:
                                                //                             //     oldCopies = 799
                                                //                             //     curCopies = 699
                                                //                             //     break
                                                //                             // case 5:
                                                //                             //     oldCopies = 1499
                                                //                             //     curCopies = 1499
                                                //                             //     break
                                                //                             // case 6:
                                                //                             //     oldCopies = 2999
                                                //                             //     curCopies = 6999
                                                //                             //     break
                                                //                             // } 
                                                //                            

                                                //                             // var num = ((x-oldCopies)/ curCopies*100).toFixed(2)

                                                //                             var num = (value/limit*100).toFixed(2)


                                                //                             if((num>=95) && (num<100)){

                                                //                                 // $(e.container).css('width',(num-3+'%'))
                                                //                                 $(e.container).css('width',parseInt(num  * 150 / 100) -3  +'px')
                                                //                                 $(e.container).css('border-radius','3px 0 0 3px')
                                                //                             }else if(num >= 100){

                                                //                                 // $(e.container).css('width',num+'%')
                                                //                                 $(e.container).css('width',parseInt(num * 150 / 100) +'px')
                                                //                                 $(e.container).css('border-radius','3px')
                                                //                             }
                                                //                             else if(num<=1.5){

                                                //                                 $(e.container).css('width','1%')
                                                //                                 // $(e.container).css('width',parseInt(num * 150 / 100) +'px')
                                                //                                 $(e.container).css('border-radius','30px')

                                                //                             }else if((num>1.5) && (num<95)){

                                                //                                 $(e.container).css('border-radius','3px 0 0 3px')


                                                //                                 $(e.container).css('width',parseInt(num * 150 / 100) +'px')
                                                //                             }
                                                //                         }
                                                //                     }


                                                //                 },
                                                //                 {
                                                //                     e:'wf-exp-num',

                                                //                     t:[
                                                //                         {
                                                //                             e:'wf-exp-num-content',

                                                //                             t: '[[value]]/[[limit]]'
                                                //                         },

                                                //                     ]
                                                //                 }
                                                //             ]
                                                //         }
                                                //     ]

                                                // },
                                            ]
                                        },

                                        {
                                            e: 'wf-useroperate',
                                            t: [{
                                                    e: 'user-mes',
                                                    t: [{
                                                            e: 'wf-p',
                                                            t: {
                                                                e: 'a',

                                                                t: [{
                                                                        e: 'wf-span',
                                                                        t: '关注'
                                                                    },
                                                                    {
                                                                        e: 'wf-span',

                                                                        t: '[[followCount]]'

                                                                    },
                                                                ]

                                                            },
                                                            click: function(e) {
                                                                window.open(wf.wfPubServer() + '/u/' + e.org_data.user.nickname + '#following')
                                                                    // window.top.location.href = wf.wfPubServer()+'/u/'+e.org_data.user.nickname+'#following'
                                                            }

                                                        },
                                                        {
                                                            e: 'wf-p',
                                                            t: [{
                                                                    e: 'wf-span',
                                                                    t: '粉丝'
                                                                },
                                                                {
                                                                    e: 'wf-span',
                                                                    a: {
                                                                        class: 'fansCount'

                                                                    },
                                                                    t: '[[fansCount]]'
                                                                },

                                                            ],
                                                            click: function(e) {
                                                                window.open(wf.wfPubServer() + '/u/' + e.org_data.user.nickname + '#fans')
                                                                    // window.top.location.href = wf.wfPubServer()+'/u/'+e.org_data.user.nickname+'#fans'

                                                            }


                                                        }
                                                    ]
                                                },
                                                {
                                                    e: 'user-ope',
                                                    t: [{
                                                            e: 'wf-button',

                                                            t: function(e) {
                                                                if (e.data.currLoginUser) {
                                                                    //只有在登陆的情况才去判断
                                                                    if (e.data.currLoginUser.uid === e.data.user.uid) {
                                                                        $(e.container).remove()
                                                                    }

                                                                }

                                                                if (e.data.followStatus == 0) {
                                                                    return '+关注'
                                                                } else if (e.data.followStatus == 1) {
                                                                    return '已关注'
                                                                } else if (e.data.followStatus == 2) {
                                                                    return '互相关注'
                                                                } else {
                                                                    return '+关注'
                                                                }

                                                            },
                                                            event: {
                                                                mouseenter: function(e) {

                                                                    if (e.org_data.followStatus == 2 || e.org_data.followStatus == 1) {
                                                                        $(e.sender).text('取消关注')
                                                                    } else if (e.org_data.followStatus == 0) {
                                                                        $(e.sender).text('+关注')

                                                                    }
                                                                },
                                                                mouseleave: function(e) {

                                                                    if (e.org_data.followStatus == 0) {
                                                                        $(e.sender).text('+关注')
                                                                    } else if (e.org_data.followStatus == 1) {
                                                                        $(e.sender).text('已关注')
                                                                    } else if (e.org_data.followStatus == 2) {
                                                                        $(e.sender).text('互相关注')
                                                                    }
                                                                },
                                                                click: function(e) {
                                                                    followClickFun(e)
                                                                }
                                                            }
                                                        },
                                                        {
                                                            e: 'wf-button',

                                                            t: function(e) {
                                                                if (e.data.currLoginUser) {
                                                                    if (e.data.currLoginUser.uid === e.data.user.uid) {
                                                                        $(e.container).remove()
                                                                    }

                                                                }
                                                                return '私信'
                                                            },
                                                            click: function(e) {
                                                                if (e.org_data.currLoginUser) {
                                                                    $('wf-postcard').remove()
                                                                    wf.user.privateChat(e)
                                                                } else {

                                                                    // var wfCommentUrl = $(e.sender).closest('wf-comment').data('url')
                                                                    // //没登录
                                                                    var url
                                                                        // if(wfCommentUrl){
                                                                        //     url = wfCommentUrl ? wfCommentUrl :window.top.location.href
                                                                        // }else{
                                                                        //     url = window.top.location.href
                                                                        // } 
                                                                    url = wf.getRelativeUrl()
                                                                    url = encodeURIComponent(url)
                                                                    window.top.location.href = wf.oauthServer() + '/login?redirectUri=' + url


                                                                }


                                                            }

                                                        }
                                                    ]
                                                }

                                            ]
                                        },


                                    ]
                                },

                            ],


                            click: function() {
                                window.event.stopPropagation() //阻止事件冒泡即可
                                window.event.preventDefault() //阻止默认行为
                            },


                        }

                    })
                }



            },
            function(err) {
                renderNoUser(_this)

            }
        )
    }

    //显示暂无数据
    function renderNoUser(_this) {
        $('wf-postcard').remove()
            // $(_this).render({
        $('body').render({
            data: {},
            template: {
                e: 'wf-postcard',
                a: {
                    class: function(e) {
                        //获取蒙版位置函数
                        return getWfPostcardSite(e, _this)
                    }
                },
                t: {

                    e: 'wf-postcard-inner',
                    t: '用户未找到'
                }


            }

        })

    }


    //点击关注,取消关注的功能 
    var followClickFun = function(e) {
            if (e.org_data.currLoginUser) {
                if (e.org_data.followStatus == 0) {
                    followRequestFun(e)
                } else {
                    cancelFollowRequestFun(e)
                }
            } else {
                // var wfCommentUrl = $(e.sender).closest('wf-comment').data('url')
                //没登录
                var url
                    // if(wfCommentUrl){
                    //     url = wfCommentUrl ? wfCommentUrl : window.top.location.href
                    // }else{
                    //     url = window.top.location.href
                    // } 
                url = wf.getRelativeUrl()
                url = encodeURIComponent(url)
                window.top.location.href = wf.oauthServer() + '/login?redirectUri=' + url

            }

        }
        //发送关注请求
    var followRequestFun = function(e) {
            wf.http.post(
                wf.apiServer() + '/sns/follow_add', {
                    targetUid: e.org_data.user.uid
                },
                function(resData) {
                    e.org_data.followStatus = resData.followStatus
                    $(e.sender).text('取消关注')
                        //不管神魔情况粉丝数都要增加
                        //粉丝数量加1
                    var fansCount = $(e.sender).parent().siblings('user-mes').find('.fansCount')
                    var fansCountNum = parseInt(fansCount.text()) + 1
                    fansCount.text(fansCountNum)
                },
                function(err) {
                    console.log(err)
                }
            )

        }
        //发送取消关注的请求 
    var cancelFollowRequestFun = function(e) {
            wf.http.post(
                wf.apiServer() + '/sns/follow_cancel', {
                    targetUid: e.org_data.user.uid
                },
                function(resData) {
                    $(e.sender).text('+关注')
                    e.org_data.followStatus = resData.followStatus
                        //粉丝数量减1
                    var fansCount = $(e.sender).parent().siblings('user-mes').find('.fansCount')
                    var fansCountNum = parseInt(fansCount.text()) - 1
                    fansCount.text(fansCountNum)
                },
                function(err) {
                    console.log(err)
                }
            )
        }
        //获取蒙板位置函数
    var getWfPostcardSite = function(e, _this) {
        var wfPostcardHeight = $(e.container).height() //wf-postcard高度
        var wfPostcardWidth = $(e.container).width() //wf-postcard宽度
        var elementHeight = _this.height() //元素高度
        var elementOffsetTop = _this.offset().top //元素距离顶部高度
            // var elementOffsetBottom //元素到浏览器（或者某个元素）底部的高度
            // var elementOffsetRight //元素到浏览器（或者某个元素）右边的宽度
        var elementWidth = _this.width() //元素宽度
        var elementOffsetLeft = _this.offset().left //元素距离左边的距离
            // $('wf-postcard').css('position','absolute')
            // $('wf-postcard').css('z-index',10001)


        var browserHeight = $(window).height() //浏览器窗口高度
        var browserwidth = $(window).width() //浏览器窗口宽度
        var elementOffsetBottom
        var elementOffsetRight
        var scrollBarleft = $(document).scrollLeft() //滚动条高度
        var scrollBarHeight = $(document).scrollTop() //滚动条高度

        elementOffsetBottom = browserHeight - (elementHeight + elementOffsetTop - scrollBarHeight) //元素到浏览器底部的高度

        if (parseInt(elementOffsetBottom) < parseInt(wfPostcardHeight)) {
            var top1 = parseInt(elementOffsetTop) - parseInt(wfPostcardHeight) - 17
            $('wf-postcard').css('top', top1)

        } else {
            $('wf-postcard').css('top', elementOffsetTop + 5)
        }

        elementOffsetRight = browserwidth - (elementWidth + elementOffsetLeft - scrollBarleft)
        if (parseInt(elementOffsetRight) < parseInt(wfPostcardWidth)) {

            // var left1 = parseInt(elementOffsetLeft)-parseInt(wfPostcardWidth)+parseInt(elementWidth/2)
            // var  left1 = parseInt(elementOffsetLeft)-parseInt(wfPostcardWidth/2)+parseInt(elementWidth/2)

            if (elementOffsetRight + elementWidth / 2 - wfPostcardWidth / 2 < 0) {

                $('wf-postcard').css('right', elementOffsetRight)
            } else {
                $('wf-postcard').css('right', elementOffsetRight + elementWidth / 2 - wfPostcardWidth / 2)
            }

            // $('wf-postcard').css('left', left1)
        } else {

            if (elementOffsetLeft + elementWidth / 2 - wfPostcardWidth / 2 < 0) {
                $('wf-postcard').css('left', elementOffsetLeft)
            } else {
                $('wf-postcard').css('left', elementOffsetLeft + elementWidth / 2 - wfPostcardWidth / 2)
            }

            // $('wf-postcard').css('left',elementOffsetLeft+20)
        }


    }
}

//  jsbuilder/wf/user/user_private_chat.js

wf.user.privateChat  = function (e) {
    var targetId = e.org_data.user.uid
    poplayer({
        header: '发送私信',
        class:'chat_send',
        template: {
            e: 'wf-chat-send',
            t: [
                {
                    e: 'textarea',
                    id: 'chat_message',
                    name: 'chat_message',
                    a: {
                        'placeholder': '请输入要发送的内容'
                    },
                },
                {
                    e:"wf-p",
                    class:'chat_handle',
                    t:{
                        'wf-button': '发送',
                        click: function (e) {

                            sendPrivateLetter(e.new_data.chat_message)
                        }
                    }
                }
            ]
        }
    })

    function sendPrivateLetter(content) {
        if (content) {
            wf.http.post(wf.apiServer() + '/sns/chat_room',
                {
                    targetUid: targetId,
                    content: content
                },
                function (data) {
                    $('#chat_message').val('')
                    if (data.insertStatus == '200') {
                        dialog.success('发送成功')
                    }
                },
                function (err) {
                    wf.error(err)
                }
            )
        }else{
            dialog.fail('私信，内容不能为空！')

        }
    }

    $('#chat_message').bind('keydown', function (e) {
        if (e.keyCode == 13) {
            e.preventDefault()
            sendPrivateLetter(e.target.value)
        }
    })
}


//  jsbuilder/wf/user/usercard.js

$.fn.extend({
    render_usercard: function() {
        $('wf-usercard', this).each(function(i, element) {
            var requireData = {};
            var uid = element.getAttribute('uid') || element.getAttribute('data-uid');
            var nickname = element.getAttribute('nickname') || element.getAttribute('data-nickname');
            if (uid) {
                requireData.uid = uid;
            }
            if (nickname) {
                requireData.nickname = nickname;
            }
            var requestUrl = wf.apiServer() + '/sns/user_card';
            wf.http.get(
                requestUrl,
                requireData,
                function(resData) {
                    //动态渲染元素
                    if (resData.user) {
                        $(element)
                            .empty()
                            .render({
                                data: resData,
                                template: [{
                                        e: 'wf-userinfo',

                                        t: [{
                                                e: 'wf-p',
                                                a: {
                                                    class: 'wf_p_img'
                                                },

                                                t: [{
                                                        e: 'img',

                                                        a: {
                                                            class: 'avatar-img',
                                                            src: function(e) {
                                                                if (e.data.user.avatarUrl) {
                                                                    return e.data.user.avatarUrl;
                                                                } else {
                                                                    return wf.comServer() + '/img/default-avatar.png';
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        e: 'wf-acc-certificate',
                                                        t: function(e) {
                                                            wf.user.certification(e);
                                                        }
                                                    }
                                                    // {
                                                    //     e: 'img',
                                                    //     a: {
                                                    //         class:'img_v',
                                                    //         src: function() {
                                                    //             return  wf.comServer()+'/img/v.png'
                                                    //         }
                                                    //     }
                                                    // },
                                                ]
                                            },
                                            {
                                                e: 'wf-p',
                                                datapath: 'user',
                                                t: [{
                                                        e: 'wf-span',
                                                        class: 'profile',
                                                        style: {
                                                            width: function(e) {
                                                                var width = parseInt($(e.container).width());
                                                                if (width > 80) {
                                                                    return 80 + 'px';
                                                                }
                                                            }
                                                        },
                                                        a: {
                                                            title: '[[nickname]]'
                                                        },
                                                        t: '[[nickname]]'
                                                    },
                                                    function(e) {
                                                        wf.user.renderBadge(e);
                                                    },
                                                    {
                                                        e: 'wf-user-level',

                                                        datapath: 'experience',
                                                        t: function(e) {
                                                            if (e.data.level) {
                                                                return 'LV' + e.data.level;
                                                            } else {
                                                                return 'LV1';
                                                            }
                                                        }
                                                    }
                                                ]
                                            },

                                            {
                                                e: 'wf-p',
                                                a: {
                                                    class: 'user_profile'
                                                },
                                                datapath: 'user',
                                                t: [{
                                                        e: 'wf-span',
                                                        a: {
                                                            class: 'info'
                                                        },
                                                        t: '介绍:'
                                                    },
                                                    {
                                                        e: 'wf-span',
                                                        a: {
                                                            class: 'info_conent',
                                                            title: function(e) {
                                                                return e.data.profile ? e.data.profile : '暂无信息！';
                                                            }
                                                        },
                                                        // t: '[[jdata/profile]]'
                                                        t: function(e) {
                                                            return e.data.profile ? e.data.profile : '暂无信息！';
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                e: 'wf-p',
                                                t: [{
                                                    e: 'wf-ip',
                                                    a: {
                                                        class: 'ip-territory'
                                                    },
                                                    t: function(d) {
                                                        var userJdata = d.data.userJdata
                                                        if (userJdata && userJdata.province) {
                                                            var region = userJdata.province;
                                                            if (region.charAt(region.length - 1) === '省') {
                                                                region = region.substr(0, region.length - 1);
                                                            }
                                                            $(d.container).render({
                                                                template: ['<wf-span>IP属地：</wf-span>', {
                                                                    e: 'wf-region',
                                                                    t: region
                                                                }]
                                                            })
                                                        } else {
                                                            $(d.container).render({
                                                                template: ['<wf-span>IP属地：</wf-span>', {
                                                                    e: 'wf-region',
                                                                    t: '未知'
                                                                }]
                                                            })
                                                        }
                                                    },
                                                }, ]
                                            },

                                            function(e) {
                                                // 经验值
                                                wf.user.renderExperience(e);
                                            }
                                        ]
                                    },
                                    {
                                        e: 'user-ope',
                                        t: [{
                                                e: 'ope-wrap',
                                                t: [{
                                                        e: 'wf-p',
                                                        a: {
                                                            class: 'wf-follow-count'
                                                        },
                                                        t: '[[followCount]]'
                                                    },
                                                    {
                                                        e: 'wf-p',
                                                        t: '关注'
                                                    }
                                                ],
                                                click: function(e) {
                                                    if (e.org_data.currLoginUser) {
                                                        wf.user.url('#following');
                                                    } else {
                                                        //跳转登录页
                                                        var url = wf.getRelativeUrl()
                                                        window.location.href = wf.oauthServer() + '/login?redirectUri=' + encodeURIComponent(url);
                                                    }
                                                }
                                            },
                                            {
                                                e: 'ope-wrap',

                                                t: [{
                                                        e: 'wf-p',
                                                        a: {
                                                            class: 'wf-fans-count'
                                                        },
                                                        t: '[[fansCount]]'
                                                    },
                                                    {
                                                        e: 'wf-p',
                                                        t: '粉丝'
                                                    }
                                                ],
                                                click: function(e) {
                                                    if (e.org_data.currLoginUser) {
                                                        wf.user.url('#fans');
                                                        // wf.user.popViewFun(e, 'my/fans',e.org_data.user.nickname,e.org_data.user.uid)
                                                    } else {

                                                        //跳转登录页
                                                        var url = wf.getRelativeUrl()
                                                        window.location.href = wf.oauthServer() + '/login?redirectUri=' + encodeURIComponent(url);
                                                    }
                                                }
                                            },
                                            {
                                                e: 'ope-wrap',
                                                t: [{
                                                        e: 'wf-p',
                                                        t: '[[messageCount]]'
                                                    },
                                                    {
                                                        e: 'wf-p',
                                                        t: '发帖'
                                                    }
                                                ],
                                                click: function(e) {
                                                    if (e.org_data.currLoginUser) {
                                                        wf.user.url('#message/my');
                                                    } else {

                                                        //跳转登录页
                                                        var url = wf.getRelativeUrl()
                                                        window.location.href = wf.oauthServer() + '/login?redirectUri=' + encodeURIComponent(url);
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                ]
                            });
                    }
                },
                function(err) {
                    console.log(err);
                }
            );
        });
    }
});

wf.user.url = function(hashpath) {
    var url = window.location.protocol + '//' + window.location.host + '/';
    window.location.href = url + hashpath;
};

wf.user.popViewFun = function(e, view, nickname, uid) {
    wf.pop({
        render: render
    });

    function render(e) {
        $(e.container).render({
            data: e.org_data,
            template: {
                e: 'wf-sns',
                a: {
                    view: view,
                    nickname: nickname,
                    uid: uid + '',
                    class: ' relayDetail'
                }
            }
        });
        wf.sns(e.container);
    }
};
//把他放到wf.js里面
// $(function() {
//     $(document).render_usercard()
// })

//  jsbuilder/wf/util/wf.editor.js

// 传入参数
// {
//  content: 内容,   必传
//  onclose: function (callbackdata) {}, 关闭编辑蒙版的方法  必传
//  onsubmit: function (content) {},提交蒙版数据的方法  必传
//  messageSenderEle: false 选传  判断是不是发帖子的编辑(默认为false)
// }

wf.editor = function(p) {
    var currentScrollTab = 0 //确定当前滚动条状态
    var isInput = false  //输入状态
    wf.pop({
        style:{
            'max-width':'1200px'
        },
        render: render,
    })

    function render(r) {
        $(r.container).render({
            template: {
                'wf-sns': [
                    {
                        e:'wf-editor-head',
                        a:{
                            class:'clearfloat'
                        },
                        
                        t:[
                            {
                                e:'wf-span',
                               
                                t:'编辑功能'
                            },
                            {
                                e:'wf-button',
                               
                                t:'提交',
                                click:function(e){
                                   
                                    submit(e)
                                }

                            }
                        ]
                    },
                    {
                        e:'wf-editor-body',
                       
                        t:[
                            {
                                'wf-part': [
                                    {
                                        'wf-edit-menu': [
                                            {
                                                fieldset: [
                                                    { legend: 'markdown' },
                                                    {
                                                        'wf-button': '语法说明',
                                                        click: function(){
                                                            var markDownUrl = 'http://markdown.p2hp.com/basic-syntax/'
                                                            window.open(markDownUrl)
                                                        }
                                                    },
                                                    {
                                                        'wf-button': '一级标题',
                                                        click: headingLevelOne
                                                    },
                                                    {
                                                        'wf-button': '字体加粗',
                                                        click: fondBlod
                                                    },
                                                    // {
                                                    //     'wf-button': '上传图片',
                                                    //     click: function () {
                                                    //         var imageUpload = new wf.sns.timeline.ImageUploadMarkdown(getImageUploadElementId())
                                                    //         imageUpload.popUpUploadWidget()
                                                    //         imageUpload.uploadAndRender(insertText)
                                                    //     }
                                                    // },
                                                ]
                                            },
                                            {
                                                fieldset: [
                                                    { legend: 'functionPlot' },
                                                    {
                                                        'wf-button': '函数曲线',
                                                        click: functionPlotTemplate
                                                    },
                                                    {
                                                        'wf-button': '函数曲线2',
                                                        click: functionPlotTemplate2
                                                    },
                                                ]
                                            },
                                            {
                                                fieldset: [{ legend: 'MathJax' }, {
                                                    'wf-button': '公式1',
                                                    click: MathJaxTemplate1
                                                }, {
                                                    'wf-button': '希腊字母',
                                                    click: MathJaxTemplate2
                                                }, {
                                                    'wf-button': '行间公式',
                                                    click: MathJaxTemplate3
                                                }]
                                            }, 
                                            {
                                                fieldset: [
                                                    { legend: 'mermaid' },
                                                    {
                                                        'wf-button': '流程图',
                                                        click: MermaidTemplate1
                                                    },
                                                    {
                                                        'wf-button': '序列图',
                                                        click: MermaidTemplate2
                                                    },
                                                    {
                                                        'wf-button': '甘特图',
                                                        click: MermaidTemplate3
                                                    },
                                                    {
                                                        'wf-button': '饼形图',
                                                        click: MermaidPie
                                                    },
                                                    {
                                                        'wf-button': '行程图',
                                                        click: MermaidJourney
                                                    },
                                                    {
                                                        'wf-button': '实体图',
                                                        click: MermaidErDiagram
                                                    },
                                                    {
                                                        'wf-button': '状态图',
                                                        click: MermaidStateDiagramV2
                                                    },
                                                    {
                                                        'wf-button': '类图',
                                                        click: MermaidClassDiagram
                                                    },
                                                    {
                                                        'wf-button': 'git图',
                                                        click: MermaidGitGraph
                                                    }
                                            ]
                                            }
        
                                        ],
                                        
                                    },
                                    {
                                        'wf-edit-content':[
                                           
                                            {
                                                e:'wf-edit-container',

                                                style:{
                                                    'position': 'relative',
                                                    'display': 'block'
                                                },
                                                t: {
                                                    textarea: 'content',
                                                    
                                                    
                                                    value: p.content,
                                                    style:{
                                                        'white-space':'pre-wrap'
                                                    },
                                                    a:{
                                                       
                                                        name: 'wf_message_content',
                                                        id:'content',
                                                        placeholder:'在这里编辑！！！！！',
                                                    },
                                                    event:[
                                                        wf.atHelper(),{
                                                        input:function(e){
                                                           
                                                            if(!isInput){
                                                                isInput = true
                                                                
                                                            }else{
                                                                return 
                                                            }
                                                            if(isInput){
                                                                setTimeout(function(){
                                                                    // 先渲染
                                                                    preview()
                                                                    // 重新计算
                                                                   
                                                                    isInput = false
                                                                    // if (currentScrollTab !== 1) return
                                                                    var scale //滚动比例
                                                                    var rc= wfEditPreViewEle.querySelector('wf-article')
                                                                    if (rc){
                    
                                                                        scale = (rc.offsetHeight -wfEditPreViewEle.offsetHeight) / (lc.scrollHeight - lc.clientHeight)
                                                                    }else{
                                                                        scale = (0 - wfEditPreViewEle.offsetHeight) / (lc.scrollHeight - lc.clientHeight )
                                                                    }
                                                               
                                                                    if(lc.scrollHeight-lc.scrollTop - lc.clientHeight<= 100){
                                                                        // 说明在底部
                                                                        wfEditPreViewEle.scrollTop = wfEditPreViewEle.scrollHeight
                                                                    }else{
                                                                        // 不在底部
                                                                        wfEditPreViewEle.scrollTop = lc.scrollTop * scale
                                                                    
                                                                    }
                                                                  
                                                                }, 2000)
                                                            }
                                                        }
                                                       
                                                    }]
    
                                                },
                                                event:{
                                                    mouseover:function(){
                                                        // 1 表示表示当前鼠标位于 编辑元素范围内      
                                                        currentScrollTab = 1
                                                    }
                                                }
                                            },
                                            {
                                                e:'wf-edit-preview',
                                                t:function(e){
                                                    if(p.content.length>0){
                                                        preview()
                                                    }else{
                                                        return '在这里预览！！！！！'
                                                    }
                                                },
                                                event:{
                                                    mouseover:function(){
                                                        // 2表示表示当前鼠标位于 预览元素范围内
                                                        currentScrollTab = 2

                                                    },
                                                    
                                                }
                                                


                                            },
                                           
                                        ],
                                        a:{
                                            class:'clearfloat'
                                        },
                                       
                                    },
                                    {
                                        e: 'input',
                                        id: getImageUploadElementId(),
                                        name: 'files[]',
                                        style: {
                                            display: 'none'
                                        },
                                        a: {
                                            multiple: 'multiple',
                                            accept: 'image/*',
                                            type: 'file'
                                        }
                                    }
                                ],
                                id: 'edit',
                                class:'clearfloat',
                               
                            },
                           
                        ]
                    }
                ],
                class:'wf_editor_sns',
            },
        })
        edit()
        var wfEditContentEle=document.querySelector('wf-edit-content')
        var wfEditPreViewEle=document.querySelector('wf-edit-preview')
        var lc = $('textarea#content')[0]
        // var lc = wfEditPreViewEle.querySelector('textare')
       
     
        if(wfEditContentEle.querySelector('#content').offsetHeight>=  lc.scrollHeight){
            // 没有滚动条
            // 预览的让他到可视区域
            wfEditPreViewEle.scrollTop = wfEditPreViewEle.scrollHeight
        }
        lc.addEventListener('scroll', function(){
            // 监听编辑滚动条
            var rc= wfEditPreViewEle.querySelector('wf-article')
            if (currentScrollTab !== 1) return
            var scale //滚动比例
            if (rc){
                scale = (rc.offsetHeight -wfEditPreViewEle.offsetHeight) / (lc.scrollHeight - lc.clientHeight)
            }else{
                scale = (0 - wfEditPreViewEle.offsetHeight) / (lc.scrollHeight - lc.clientHeight )
            }
            // 判断滚动条是不是在底部
            if(lc.scrollHeight-lc.scrollTop - lc.clientHeight<= 20){
                // 说明在底部
                wfEditPreViewEle.scrollTop = wfEditPreViewEle.scrollHeight
            }else{
                // 不在底部
                wfEditPreViewEle.scrollTop = lc.scrollTop * scale
               
            }
            
        })
        wfEditPreViewEle.addEventListener('scroll', function(){
            // 监听预览滚动条
            // var rc=wfEditPreViewEle.querySelector('wf-article')
            var rc= wfEditPreViewEle.querySelector('wf-article')
            var scale
            if (rc){
                scale = (rc.offsetHeight -wfEditPreViewEle.offsetHeight) / (lc.scrollHeight - lc.clientHeight)
            }else{
                scale = (0 - wfEditPreViewEle.offsetHeight) / (lc.scrollHeight - lc.clientHeight )
            }
            if (currentScrollTab !== 2) return
            lc.scrollTop = wfEditPreViewEle.scrollTop / scale
        })
        
        
        function edit() {
            $('wf-part#edit', p.container).show()
        }

        
        function preview(){
            
            var content = $('textarea#content').val()
            $('wf-edit-preview', p.container).empty().render({
                template:function(e) {
                    $(e.container).append('<wf-article>' + wf.replace.all(content) + '</wf-article>')
                    // 调用mermaid渲染图
                    mermaid.init(undefined, $('div.mermaid', e.container))
                    // 调用MathJax渲染公式
                    if(MathJax.typesetPromise){
                        MathJax.typesetPromise([e.container])
                    }
                   
                    wf.functionPlot(e.container)
                },
            })
           
        }

        function submit(submit) {
            if (p.onsubmit) {
                p.onsubmit(submit.new_data.wf_message_content)
            }
            if(p.messageSenderEle){
                
                if(wf.cookie.get('uid')){
                    // 添加草稿
                    localStorage.setItem('publish_draft_'+wf.cookie.get('uid'),submit.new_data.wf_message_content)
                }
                            
            }
            r.container.close()
        }

        // function getScale( editorEle){
        //     var editorEle = editorEle
        //     var wfEditPreview = editorEle.siblings('wf-edit-preview')
        //     console.log( editorEle)
        //     var scale = parseInt(editorEle[0].scrollHeight - editorEle[0].clientHeight ) / parseInt (wfEditPreview[0].scrollHeight - wfEditPreview[0].clientHeight)
        //     console.log('editorEle.scrollHeight'+editorEle[0].scrollHeight)
        //     console.log('editorEle.clientHeight '+editorEle[0].clientHeight )
        //     console.log('wfEditPreview.scrollHeight' +wfEditPreview[0].scrollHeight)
        //     console.log('wfEditPreview.clientHeight' +wfEditPreview[0].clientHeight)
        //     console.log(scale)
        //     return scale 


        // }

        function functionPlotTemplate(e) {
            insertText('这是一个functionPlot的例子,您可以在此基础上修改或者创建自己的函数图像\n' +
                '```functionPlot\n\n{"data": [\n   {"fn": "x^2"},\n   {"fn": "sin(x)"}\n]}\n\n```\n')
                
             
        }

        function functionPlotTemplate2(e) {
            insertText('这是一个functionPlot的例子,您可以在此基础上修改或者创建自己的函数图像\n' +
                '```functionPlot\n\n' +
                '{\n' +
                '    "yAxis": {"domain": [-4.428571429, 4.428571429]},\n' +
                '    "xAxis": {"domain": [-7, 7]},\n' +
                '    "data": [{\n' +
                '        "x": "sin(t) * (exp(cos(t)) - 2 cos(4t) - sin(t/12)^5)",\n' +
                '        "y": "cos(t) * (exp(cos(t)) - 2 cos(4t) - sin(t/12)^5)",\n' +
                '        "range": [-31.415926, 31.415926],\n' +
                '        "fnType": "parametric",\n' +
                '        "graphType": "polyline"\n' +
                '    }]\n' +
                '}\n' +
                '```\n\n')
        }

        function MathJaxTemplate1(e) {
            insertText('\n这是一个Latex公式的例子\n' +
                '$$\n\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)\n$$\n')
        }

        function MathJaxTemplate2(e) {
            insertText('$$\n' + '\\Gamma\\ \\Delta\\ \\Theta\\ \\Lambda\\ \\Xi\\ \\Pi\\ \\Sigma\\ \\Upsilon\\ \\Phi\\ \\Psi\\ \\Omega' + '$$\n')
        }

        function MathJaxTemplate3(e) {
            insertText('$E=mc^2$\n')
        }
        function MermaidTemplate1(e) {
            insertText('这是一个流程图的例子\n' +
                '```\n' +
                'graph TD;\n' +
                '    A-->B;\n' +
                '    A-->C;\n' +
                '    B-->D;\n' +
                '    C-->D;\n' +
                '```\n')
        }

        function MermaidTemplate2(e) {
            insertText('这是一个序列图的例子\n' +
                '```\n' +
                'sequenceDiagram\n' +
                'A->> B: Query\n' +
                'B->> C: Forward query\n' +
                'Note right of C: Thinking...\n' +
                'C->> B: Response\n' +
                'B->> A: Forward response\n' +
                '```\n')
        }

        function MermaidTemplate3(e) {
            insertText('这是一个甘特图的例子\n' +
                '```\n' +
                'gantt\n' +
                'dateFormat  YYYY-MM-DD\n' +
                'title Adding GANTT diagram to mermaid\n' +
                'excludes weekdays 2014-01-10\n' +
                '\n' +
                'section A section\n' +
                'Completed task            :done,    des1, 2014-01-06,2014-01-08\n' +
                'Active task               :active,  des2, 2014-01-09, 3d\n' +
                'Future task               :         des3, after des2, 5d\n' +
                'Future task2               :         des4, after des3, 5d\n' +
                '```\n')
        }
        function MermaidPie(e) {
            insertText('这是一个饼形图的例子\n' +
                '```\n' +
                'pie\n' +
                '"Dogs" : 386\n' +
                '"Cats" : 85\n' +
                '"Rats" : 15\n' +
                '```\n')
                
        }
        function MermaidJourney(e) {
            insertText('这是一个行程图的例子\n' +
                '```\n' +
                'journey\n' +
                'title My working day\n' +
                'section Go to work\n' +
                'Make tea: 5: Me\n' +
                'Go upstairs: 3: Me\n' +
                'Do work: 1: Me, Cat\n' +
                'section Go home\n' +
                'Go downstairs: 5: Me\n' +
                'Sit down: 3: Me\n' +
                '```\n')
                
        }
        function MermaidErDiagram(e) {
            insertText('这是一个实体图的例子\n' +
                '```\n' +
                'erDiagram\n' +
                'CUSTOMER ||--o{ ORDER : places\n' +
                'ORDER ||--|{ LINE-ITEM : contains\n' +
                ' CUSTOMER }|..|{ DELIVERY-ADDRESS : uses\n' +
                '```\n')
                
        }
        function  MermaidStateDiagramV2(e) {
            insertText('这是一个状态图的例子\n' +
                '```\n' +
                'stateDiagram-v2\n' +
                '[*] --> Still\n' +
                'Still --> [*]\n' +
                '\n' +
                'Still --> Moving\n' +
                'Moving --> Still\n' +
                'Moving --> Crash\n' +
                'Crash --> [*]\n' +
                '```\n')
        }
        function  MermaidClassDiagram(e) {
            insertText('这是一个类图的例子\n' +
                '```\n' +
                'classDiagram\n' +
                '    Animal <|-- Duck\n' +
                '    Animal <|-- Fish\n' +
                '    Animal <|-- Zebra\n' +
                '    Animal : +int age\n' +
                '    Animal : +String gender\n' +
                '    Animal: +isMammal()\n' +
                '    Animal: +mate()\n' +
                '    class Duck{\n' +
                '        +String beakColor\n' +
                '        +swim()\n' +
                '        +quack()\n' +
                '    }\n' +
                '    class Fish{\n' +
                '        -int sizeInFeet\n' +
                '        -canEat()\n' +
                '    }\n' +
                '    class Zebra{\n' +
                '        +bool is_wild\n' +
                '        +run()\n' +
                '    }\n' +
                '```\n')
        }
        function MermaidGitGraph(){
            insertText('这是一个git图的例子\n' +
            '```\n' +
            'gitGraph:\n' +
            'options\n' +
            '{\n' +
            '    "nodeSpacing": 75,\n' +
            '    "nodeRadius": 5\n' +
            '}\n' +
            'end\n' +
            'commit\n' +
            'branch newbranch\n' +
            'checkout newbranch\n' +
            'commit\n' +
            'commit\n' +
            'checkout master\n' +
            'commit\n' +
            'commit\n' +
            'merge newbranch\n' +
            '```\n')
        }
        function insertText(str) {
            var obj = $('textarea', r.container)[0]
            if (document.selection) {
                var sel = document.selection.createRange()
                sel.text = str
            } else if (typeof obj.selectionStart === 'number' && typeof obj.selectionEnd === 'number') {
                var startPos = obj.selectionStart,
                    endPos = obj.selectionEnd,
                    cursorPos = startPos,
                    tmpStr = obj.value
                obj.value = tmpStr.substring(0, startPos) + str + tmpStr.substring(endPos, tmpStr.length)
                cursorPos += str.length
                obj.selectionStart = obj.selectionEnd = cursorPos
            } else {
                obj.value += str
            }
            preview()
        }

        function fondBlod(){

            insertText('这是一个字体加粗的例子\n' +
            '**这是一个字体加粗的例子**\n' )
           

        }
        function headingLevelOne(){
           
            insertText('这是一个一级标题例子\n' +
            '# 一级标题\n' )
            

        }
        
       
    }

    function getImageUploadElementId() {
        return 'image-upload-in-md'
    }

}


//  jsbuilder/wf/util/wf.error.js

wf.error = function(err) {
    if(err.err_code){
        //api网关
        if(err.err_code == 40001){
             //跳转登录页
            var url = wf.getRelativeUrl()
            window.location.href =wf.oauthServer() + '/login?redirectUri=' + encodeURIComponent(url);
        }
        if(err.err_code== 40002 ){
            if(err.sub_code == 'isv.invalid-parameter'){
                dialog.fail('内容安全监测未通过，存在违法参数,您若有任何疑问, 请联系网站人员')
            }else{
                dialog.fail('请求参数异常, ' + err.sub_msg + '您若有任何疑问, 请联系网站人员')
            }
        }else if(err.err_code== 40003 ||err.err_code== 40005  ||err.err_code== 40006){
            dialog.fail(err.err_message + ', ' + err.sub_msg + '您若有任何疑问, 请联系网站人员')
        }
        //来自sys_error存储过程
        if(err.err_code== 40004&&err.sub_msg){
            const errr = JSON.parse(err.sub_msg);
            //去除引号
            dialog.fail(errr.err_message)
        }else
        if(err.err_code == 404&&err.err_message){
            //没经过网关
            dialog.fail(err.err_message)
        }
    }else if((err.err_message ? (err.err_message ==="not login" ? true :false) : false)){
        //跳转登录页
        var url = wf.getRelativeUrl()
        window.location.href =wf.oauthServer() + '/login?redirectUri=' + encodeURIComponent(url);
    }else if(err.err_message){
        dialog.fail(err.err_message)
        return
    }
}

//  jsbuilder/wf/util/wf.functionPlot.js

wf.functionPlot = function (container) {
    if (!window.functionPlot) return;
    $('.functionPlot', container).each(render);

    function render (i, ele) {
        $('define', ele).hide();
        var define = $('define', ele).text();
        $(ele).render({
            template: [
                { div: '', class: "graph" },
                {
                    div: [{ textarea: 'sandbox', t: define, height: 350 },
                    { button: 'try', click: tryrun },
                    { button: 'retrieve', click: retrieve }
                    ],
                    class: 'sandbox',
                    // style: { "padding-right": "30px" }
                },
                {
                    tab: {
                        nav: {
                            'graph': graphbox,
                            'code': code,
                            sandbox: sandbox
                        },
                        class: 'l2'
                    }
                }
            ]
        })

        graphbox();

        function graphbox () {
            $('div.graph', ele).show();
            $('div.sandbox', ele).hide();
            $('pre', ele).hide();
            $('div.graph', ele).each(
                function (i, graph) {
                    try {
                        var data = JSON.parse(define.trim());
                        var windowWidth =  $(window).width();
                        let windoheight
                        if(windowWidth > 550){
                            windowWidth = 550
                            windowheight = windowWidth / 1.77
                        }else{
                            windowWidth =  windowWidth -30
                            windowheight = windowWidth / 1.57
                        }
                        data.width =  windowWidth;
                        data.height =  windowheight;
                        data.target = graph;
                        functionPlot(data);
                    } catch (err) {
                        $(graph).text("functionPlot:".concat(err));
                    }
                }
            )
        };

        function tryrun (e) {
            define = e.new_data.sandbox;
            graphbox();
        };

        function retrieve () {
            define = $('define', ele).text();
            $('textarea#sandbox', ele).val(define);
        }

        function code () {
            $('div.graph', ele).hide();
            $('div.sandbox', ele).hide();
            $('pre', ele).show();
        };

        function sandbox () {
            $('div.graph', ele).hide();
            $('div.sandbox', ele).show();
            $('pre', ele).hide();
        };

    }
}


//  jsbuilder/wf/util/wf.getRelativeUrl.js

wf.getRelativeUrl =function(){
    var url = null
    // var reg = wf.development ? 'https://d.wf.pub': 'https://wf.pub'  用于相对地址
    var wfCommentEle = $('wf-comment')[0]
    // var wfSns = $('wf-sns')[0]
    if(wfCommentEle){
        url = $(wfCommentEle).attr('url') ? $(wfCommentEle).attr('url') : $(wfCommentEle).data('url')
       
      
        if(url){
           
            return url
        }
    }
    // if(wfSns){
    //     //目前只考虑wf.pub 项目，没考虑老社区sns 所以没加data属性
    //     url = $(wfSns).data('loginredirecturi') ? $(wfSns).data('loginredirecturi') :$(wfSns).attr('loginredirecturi')
    //     console.log(url)
    //     if(url){
    //         return url.replace(reg,'')
    //     }
        
    // }
    if(!url){
        url = window.location.href
        if(url){
            // return url.replace(reg,'')
            return url
        }
    }
   
}

